////////////////////////////////////////////////////////////////////////////////
// Button Variables
////////////////////////////////////////////////////////////////////////////////

// Typography
@font-size-button: 13px;
@line-height-button: 20px;

// Padding
@button-padding-top-bottom: round((@padding / 2));
@button-padding-left-right: @padding;
@button-padding: @button-padding-top-bottom @button-padding-left-right;

// Default Styles
@button-default-styles: 'rounded'; // rounded, pill or square

////////////////////////////////////////////////////////////////////////////////
// Button Mixins
////////////////////////////////////////////////////////////////////////////////

.base-btn() {
  position: relative;
  display: inline-block;
  margin: 0;
  padding: @button-padding;
  .font-sequence( @font-size-button, @line-height-button );
  font-family: @font-family;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-font-smoothing: subpixel-antialiased;
  .transition(~"border-color linear 0.2s, background-position linear 0.2s");
  .btn-style(@button-default-styles);
}

////////////////////////////////////////
// Button Colors
////////////////////////////////////////

.btn-color-init( @start-color, @end-color ) {
  .text-color() when (lightness(@end-color) >= 70%) {
    color: @gray-darker;
    text-shadow: 0 1px 0 rgba(255,255,255, 0.25);
  }
  .text-color() when (lightness(@end-color) < 70%) {
    color: @white;
    text-shadow: 0 1px 0 rgba(0,0,0, 0.4);
  }
  .text-color();
  #gradient > .vertical( @start-color, @end-color );
  background-repeat: repeat-x;
  border: 1px solid;
  .border-color( @black, 0.25, #ccc );
  .box-shadow(~"0 1px 2px rgba(0,0,0, 0.05), 0 1px 0 rgba(255,255,255, 0.15) inset");
}

// Hover
.btn-color-hover( @start-color, @end-color ) {
  .text-color() when (lightness(@end-color) >= 70%) {
    color: @gray-darker;
    text-shadow: 0 1px 0 rgba(255,255,255, 0.25);
  }
  .text-color() when (lightness(@end-color) < 70%) {
    color: @white;
    text-shadow: 0 1px 0 rgba(0,0,0, 0.4);
  }
  .text-color();
  background-position: 0 -30px;
  .border-color( @black, 0.4, darken(@end-color, 10%) );
  .box-shadow(~"0 1px 2px rgba(0,0,0, 0.1), 0 1px 0 rgba(255,255,255, 0.05) inset");
}

// Active
.btn-color-active( @start-color, @end-color ) {
  background-color: darken(@end-color, 2%);
  background-image: none;
  .border-color( @black, 0.4, darken(@end-color, 10%) );
  .box-shadow(~"0 0 0 rgba(0,0,0, 0), 0 1px 3px rgba(0,0,0, 0.2) inset");
}

// Focus
.btn-color-focus( @start-color, @end-color ) {
  outline: 4px solid rgba(255,242,0, 0.90);
  background-position: 0 -30px;
  .border-color( @black, 0.4, darken(@end-color, 10%) );
  .box-shadow(~"0 0 8px rgba(35,130,247, 0.4), 0 1px 0 rgba(255,255,255, 0.15) inset");
}

// Compiled Button Styles With States
.btn-color( @start-color, @end-color ) {
  .btn-color-init( @start-color, @end-color );

  &:hover {
    .btn-color-hover( @start-color, @end-color );
  }

  &:active {
    .btn-color-active( @start-color, @end-color );
  }

  &:focus {
    .btn-color-focus( @start-color, @end-color );
  }
}

// Resets button colors & box-model
.btn-color-reset() {
  margin: 0;
  padding: 0;
  text-shadow: none;
  background: none;
  border: 0 none;
  box-shadow: none;
  .border-radius(0);
}

////////////////////////////////////////
// Button Sizing
////////////////////////////////////////

.btn-size-huge() {
  .font-sequence( (@font-size-button + 2) );
  padding: ( @button-padding-top-bottom * 3 ) ( @button-padding-left-right * 4 );
}
.btn-size-large() {
  .font-sequence( (@font-size-button + 1) );
  padding: ( @button-padding-top-bottom * 2 ) ( @button-padding-left-right * 2 );
}
.btn-size-small() {
  .font-sequence( (@font-size-button - 1) );
  padding: ( @button-padding-top-bottom / 2 ) ( @button-padding-left-right / 1.5 );
}
.btn-size-tiny() {
  .font-sequence( (@font-size-button - 2) );
  padding: ( @button-padding-top-bottom / 3 ) ( @button-padding-left-right / 1.5 );
}

////////////////////////////////////////
// Button Utility
////////////////////////////////////////

// Button Styles
.btn-style( @style : 'rounded' ) {
  .build() when ( @style = 'rounded' ) {
    .border-radius();
  }
  .build() when ( @style = 'pill' ) {
    .border-radius( 300px );
    padding-left: (@button-padding-left-right * 1.75);
    padding-right: (@button-padding-left-right * 1.75);
  }
  .build() when ( @style = 'square' ) {
    .border-radius(0);
  }
  .build();
}

// Faint for subtle buttons
.btn-faint() {
  .btn-color( rgba(255,255,255, 0.2), rgba(255,255,255, 0.2) );
  .color( @black, 0.5, lighten(@color, 30%) );
  .border-color( @black, 0.2, #ccc );
  .box-shadow(~"0 1px 0 rgba(255,255,255, 0.75)");
  .transition(~"border-color linear 0.2s, background-position linear 0.2s, color linear 0.2s");
}

// Disabled
.btn-disabled() {
  background-image: none;
  cursor: not-allowed;
  .box-shadow(none);
  .border-color( @black, 0.25);
  opacity: 0.6;
}

//  Link Styles
.btn-link() {
  display: inline;
  .btn-color-reset();
  font-family: @font-family;
  .font-sequence( @font-size );
  line-height: 1.20em; // Buttons don't behave inline very well :(
  .anchor();
  cursor: pointer;
}

////////////////////////////////////////
// Button Structure
////////////////////////////////////////

// BLock
.btn-block() {
  display: block;
  width: 100%;
  box-sizing: border-box;
  padding-top: (@button-padding-top-bottom * 2.5);
  padding-bottom: (@button-padding-top-bottom * 2.5);
}

// Inline
.btn-inline() {
  display: inline-block;
  width: auto;
  box-sizing: content-box;
  padding-top: @button-padding-top-bottom;
  padding-bottom: @button-padding-top-bottom;
}

// Small Mobile
// Converts to block button on small mobiles
.btn-mobile-small-block() {
  .btn-block();
  @media screen and (min-width: @bp-small ) {
    .btn-inline();
  }
}

// Mobile
// Converts to block button on mobiles
.btn-mobile-block() {
  .btn-block();
  @media screen and ( min-width: @bp-tablet ) {
    .btn-inline();
  }
}

/*==============================================================================
  Buttons
==============================================================================*/

/**
 * Color Mixins & Class Assignment
 */
.btn {
  .base-btn();
}

/**
 * Gray Scale Buttons
 */
.btn-white {
  .btn-color( @gF, @gE );
}
.btn-light-grey {
  .btn-color( @gE, @gC );
}
.btn-grey {
  .btn-color( @gB, @g9 );
}
.btn-dark-grey {
  .btn-color( @g8, @g6 );
}
.btn-black {
  .btn-color( @g5, @g3 );
}

/**
 * Solid Colors
 */
.btn-blue {
  .btn-color( @blue-light, @blue-dark );
}
.btn-green {
  .btn-color( @green-light, @green-dark );
}
.btn-yellow {
  .btn-color( @yellow-light, @yellow-dark );
}
.btn-orange {
  .btn-color( @orange-light, @orange-dark );
}
.btn-red {
  .btn-color( @red-light, @red-dark );
}
.btn-violet {
  .btn-color( @violet-light, @violet-dark );
}

/**
 * Mix Colors
 */
.btn-blue-green {
  .btn-color( mix(@blue-light, @green-light), mix(@blue-dark, @green-dark) );
}
.btn-yellow-green {
  .btn-color( mix(@green-light, @yellow-light), mix(@green-dark, @yellow-dark) );
}
.btn-yellow-orange {
  .btn-color( mix(@yellow-light, @orange-light), mix(@yellow-dark, @orange-dark) );
}
.btn-red-orange {
  .btn-color( mix(@orange-light, @red-light), mix(@orange-dark, @red-dark) );
}
.btn-red-violet {
  .btn-color( mix(@red-light, @violet-light), mix(@red-dark, @violet-dark) );
}
.btn-blue-violet {
  .btn-color( mix(@violet-light, @blue-light), mix(@violet-dark, @blue-dark) );
}

/**
 * Semantic Classes
 */
.btn-primary {
  .btn-blue();
}
.btn-secondary {
  .btn-black();
}
.btn-success {
  .btn-yellow-green();
}
.btn-warning {
  .btn-yellow-orange();
}
.btn-danger {
  .btn-red();
}
.btn-default {
  .btn-white();
}

/**
 * Size Class Assignment
 */
.btn-huge  {
  .btn-size-huge();
}
.btn-large {
  .btn-size-large();
}
.btn-small {
  .btn-size-small();
}
.btn-tiny  {
  .btn-size-tiny();
}

/*==============================================================================
  Button Utilities
==============================================================================*/

/** 
 * Faint
 */
.btn-faint {
  .btn-faint();
}

/**
 * Disabled
 */
.disabled,
.disabled:hover,
.disabled:active,
.disabled:focus {
  .btn-disabled();
}

/**
 * Anchor
 */
.btn-link,
.btn-anchor {
  .btn-link();
}

/**
 * Button Style
 */
.btn-rounded {
  .btn-style('rounded');
}
.btn-pill {
  .btn-style('pill');
}
.btn-square {
  .btn-style('square');
}

/**
 * Button Structure
 */
.btn-block {
  .btn-block();
}
.btn-inline {
  .btn-inline();
}
.btn-mobile-small-block {
  .btn-mobile-small-block();
}
.btn-mobile-block {
  .btn-mobile-block();
}
