// Set file variable
$filename: 'scss/blocks/_badge.scss';

////////////////////////////////////////////////////////////////////////////////
// @Badges Map
////////////////////////////////////////////////////////////////////////////////

$badges: (
  'classes' : true,
  'classes-button' : true,

  'class' : 'badge',
  'class-inverted' : 'inverted',
  'class-active' : 'active',

  'padding' : 0.25rem 0.75rem,
  'font-size' : 0.9em,
  'border' : none,
  'border-radius' : $border-radius,
  'border-radius-pill' : 3rem,
  'transition' : $transition,

  'close' : (
    'margin' : 0 -0.25em 0 0.5em,
    'style' : null,
  ),

  'dot' : (
    'size' : ($base-font-size / 2),
  ),

  // Colors & Color Modifiers
  'color' : $color,
  'background' : rgba($black, 0.05),

  'hover' : (
    'color' : $blue,
    'background' : rgba($blue, 0.15),
  ),

  'active' : (
    'color' : $white,
    'background' : $blue,
    'close' : (
      'style' : 'inverted',
    ),
  ),

  'inverted' : (
    'color' : $white,
    'background' : $color,
    'close' : (
      'style' : 'inverted',
    ),
  ),

) !default;

// Extend default component map with overrides if they exist
@if variable-exists(override) {
  @if (map-has-key($override, 'badges') == true) {
    $badges: map-extend($badges, map-get($override, 'badges'), true);
  }
}

////////////////////////////////////////////////////////////////////////////////
// @Badges Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Badges
// Creates the base styles for a the badge element.
// @param $options
//   @type map
//   @default $badges map
@mixin make-badges($options: ()) {
  $o: map-extend($badges, $options, true);

  .#{map-get($badges, 'class')} {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: map-get($o, 'padding');
    font-size: map-get($o, 'font-size');
    text-decoration: none;
    border: map-get($o, 'border');
    border-radius: map-get($o, 'border-radius');
    transition: map-get($o, 'transition');

    &.pill {
      border-radius: map-get($o, 'border-radius-pill');
    }
    &.square {
      border-radius: 0;
    }
    &.dot {
      display: inline-block;
      @include text-hide();
      @include size(map-fetch($o, 'dot', 'size'));
      padding: 0;
      vertical-align: top;
      border-radius: map-get($o, 'border-radius-pill');
    }

    // Check if we should output close classes
    @if (map-has-key($o, 'close') == true) {
      @include make-close(map-get($o, 'close'));
    }
  }
}

// Add Badge Color
// Handles color variations to badges.
// @param $options
//   @type map
//   @default $badges map
@mixin add-badge-color($options: ()) {
  $o: map-extend($badges, $options, true);

  .#{map-get($badges, 'class')} {
    color: $color;
    background: rgba($black, 0.05);
    @if (map-get($badges, 'classes-close') == true) {
      @include add-close-color(map-get($o, 'close'));
    }

    &.active {
      color: $white;
      background: rgba($blue, 1);
      @if (map-has-key(map-get($o, 'active'), 'close') == true) {
        @include add-close-color(map-fetch($o, 'active', 'close'));
      }
    }

    &.inverted {
      color: $white;
      background: rgba($black, 0.5);
      @if (map-has-key(map-get($o, 'inverted'), 'close') == true) {
        @include add-close-color(map-fetch($o, 'inverted', 'close'));
      }
    }
  }

  // Hover styles for links
  a.#{map-get($badges, 'class')} {
    &:hover {
      color: $blue;
      background: rgba($blue, 0.1);
    }
    &.active:hover,
    &.inverted:hover {
      color: $white;
    }
    &.active:hover {
      background: rgba($blue, 1);
    }
    &.inverted:hover {
      background: rgba($blue, 1);
    }
  }

}

// Check if we should output modifier classes
@if (map-get($badges, 'classes') == true) {

/*==============================================================================
  @Badges - #{$filename}
==============================================================================*/

/**
 * Base Badge
 */
@include make-badges();
@include add-badge-color();

/**
 * Badge Colors
 */
.#{map-get($badges, 'class')}.white {
  color: $color;
  background: rgba($white, 0.75);
  &.inverted {
    color: $white;
    background: rgba($black, 0.5);
  }
}
a.#{map-get($badges, 'class')}.white {
  &:hover {
    color: $color;
    background: rgba($white, 1);
  }
  &.inverted:hover {
    color: $white;
    background: rgba($black, 0.75);
  }
}

.#{map-get($badges, 'class')}.blue {
  color: $blue;
  background: $blue-50;
  &.inverted {
    color: $white;
    background: $blue;
  }
}
a.#{map-get($badges, 'class')}.blue {
  &:hover {
    color: $blue;
    background: $blue-100;
  }
  &.inverted:hover {
    color: $white;
    background: $blue-600;
  }
}

.#{map-get($badges, 'class')}.green {
  color: $green;
  background: $green-50;
  &.inverted {
    color: $white;
    background: $green;
  }
}
.#{map-get($badges, 'class')}.yellow {
  color: $color;
  background: $yellow-200;
  &.inverted {
    color: $color;
    background: $yellow;
  }
}
.#{map-get($badges, 'class')}.orange {
  color: $orange;
  background: $orange-50;
  &.inverted {
    color: $white;
    background: $orange-600;
  }
}
.#{map-get($badges, 'class')}.red {
  color: $red;
  background: $red-50;
  &.inverted {
    color: $white;
    background: $red-600;
  }
}
.#{map-get($badges, 'class')}.purple {
  color: $purple;
  background: $purple-50;
  &.inverted {
    color: $white;
    background: $purple;
  }
}

// Check if we should output button classes
@if (map-get($badges, 'classes-button') == true) {

// Required components warning
@if (variable-exists(buttons) == false) {
  @warn 'The badge block component requires the buttons element component!';
} @else {

/**
 * Button Badges
 */
.#{map-get($buttons, 'class')} .#{map-get($badges, 'class')}:not(.dot) {
  display: inline;
  padding: 0.25em 0.5rem;
}
.#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-left {
  .#{map-get($badges, 'class')} {
    margin-left: -0.5em;
    margin-right: 0.5em;
  }
}
.#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-right {
  .#{map-get($badges, 'class')} {
    margin-left: 0.5em;
    margin-right: -0.5em;
  }
}

} // If $buttons exists

} // endif classes-button-icon

} // endif classes
