// Set file variable
$filename: 'scss/blocks/_badge.scss';

////////////////////////////////////////////////////////////////////////////////
// @Badges Map
////////////////////////////////////////////////////////////////////////////////

$badges: (
  'output' : true,
  'output-modifiers' : true,
  'output-buttons' : true,
  'class' : 'badge',

  'padding' : 0.25rem 0.75rem,
  'font-size' : 0.9em,
  'border' : none,
  'border-radius' : $border-radius,
  'transition' : $transition,

  'close' : (
    'margin' : 0 -0.25em 0 0.5em,
  ),

  'button' : (
    'margin' : 0.5em,
    'padding' : 0.25em 0.5em,
  ),

  'modifiers' : (
    'default' : (
      'color' : $color,
      'background' : rgba($black, 0.05),
      'hover' : (
        'color' : $color,
        'background' : rgba($black, 0.15),
      ),
    ),
    'inverted' : (
      'color' : $white,
      'background' : $gray,
      'hover' : (
        'color' : $white,
        'background' : $gray-700,
      ),
    ),
    'active' : (
      'color' : $white,
      'background' : $blue,
      'hover' : (
        'color' : $white,
        'background' : $blue-700,
      ),
    ),

    'blue' : (
      'color' : $blue,
      'background' : $blue-50,
      'hover' : (
        'background' : $blue-100,
      ),
    ),
    'blue.inverted' : (
      'color' : $white,
      'background' : $blue,
      'hover' : (
        'background' : $blue-700,
      ),
    ),
    'green' : (
      'color' : $green,
      'background' : $green-50,
      'hover' : (
        'color' : $green-700,
        'background' : $green-100,
      ),
    ),
    'green.inverted' : (
      'color' : $white,
      'background' : $green,
      'hover' : (
        'color' : $white,
        'background' : $green-700,
      ),
    ),
    'yellow' : (
      'color' : $color,
      'background' : $yellow-100,
      'hover' : (
        'color' : $color,
        'background' : $yellow-300,
      ),
    ),
    'yellow.inverted' : (
      'color' : $color,
      'background' : $yellow,
      'hover' : (
        'color' : $color,
        'background' : $yellow-600,
      ),
    ),
    'red' : (
      'color' : $red,
      'background' : $red-50,
      'hover' : (
        'color' : $red-700,
        'background' : $red-100,
      ),
    ),
    'red.inverted' : (
      'color' : $white,
      'background' : $red,
      'hover' : (
        'color' : $white,
        'background' : $red-700,
      ),
    ),
    'light' : (
      'color' : $color,
      'background' : rgba($white, 0.75),
      'hover' : (
        'color' : $color,
        'background' : rgba($white, 1),
      ),
    ),
    'dark' : (
      'color' : $white,
      'background' : rgba($black, 0.5),
      'hover' : (
        'color' : $white,
        'background' : rgba($black, 0.75),
      ),
    ),
    'square' : (
      'border-radius' : 0,
    ),
    'pill' : (
      'border-radius' : 3rem,
    ),
    'dot' : (
      'display' : inline-block,
      'width' : ($base-font-size / 2),
      'height' : ($base-font-size / 2),
      'padding' : 0,
      'vertical-align' : top,
      'font-size' : 0,
      'line-height' : 0,
      'text-indent' : 100%,
      'white-space' : nowrap,
      'overflow' : hidden,
      'border-radius': 3rem,
    ),
  ),

) !default;

// Extend default component map with overrides if they exist
@if variable-exists(override) {
  @if (map-has-key($override, 'badges') == true) {
    $badges: map-extend($badges, map-get($override, 'badges'), true);
  }
}

////////////////////////////////////////////////////////////////////////////////
// @Badges Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Badge
// Creates the base styles for a the badge element.
// @param $options
//   @type map
//   @default $badges map
@mixin make-badge($options: ()) {
  $o: map-extend($badges, $options, true);

  display: inline-flex;
  justify-content: center;
  align-items: center;

  @include add-styles($o);
  @include add-modifiers($o, 'default', false, ('output-pseudo': false));

  @content;

  &.dot {
    @include add-text-hide();
  }
}

// Check if we should output badges
@if (map-get($badges, 'output') == true) {

/*==============================================================================
  @Badges - #{$filename}
==============================================================================*/

.#{map-get($badges, 'class')} {
  @include make-badge();

  > .icon {
    margin: 0 0.25rem 0 0;
    font-size: 1rem;
  }

  &.badge-icon {
    padding: 0.5rem;

    > .icon {
      margin: 0;
    }
  }

  > img {
    margin: -0.25rem 0.75rem -0.25rem -0.75rem;
    border-top-left-radius: $border-radius;
    border-bottom-left-radius: $border-radius;
  }

  &.pill {
    > img {
      border-radius: 3rem;
      margin-right: 0.5rem;
    }
  }
}
a.#{map-get($badges, 'class')} {
  @include add-modifiers($badges, 'default', false, ('output-base': false));
}

// Check if we should output badge modifiers
@if (map-get($badges, 'output-modifiers') == true) {
  .#{map-get($badges, 'class')} {
    @include add-modifiers($badges, $settings: ('output-pseudo': false));
    @include add-modifiers-close($badges);
  }
  a.#{map-get($badges, 'class')} {
    @include add-modifiers($badges, $settings: ('output-base': false));
  }
}

// Check if we should output button modifiers
@if (map-get($badges, 'output-buttons') == true) {
  // Check if $buttons exists
  @if (variable-exists(buttons)) {
    .#{map-get($buttons, 'class')} .#{map-get($badges, 'class')}:not(.dot) {
      display: inline;
      padding: map-fetch($badges, 'button', 'padding');
    }
    .#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-left {
      .#{map-get($badges, 'class')} {
        margin-left: -(map-fetch($badges, 'button', 'margin'));
        margin-right: map-fetch($badges, 'button', 'margin');
      }
    }
    .#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-right {
      .#{map-get($badges, 'class')} {
        margin-left: map-fetch($badges, 'button', 'margin');
        margin-right: -(map-fetch($badges, 'button', 'margin'));
      }
    }
  }
} // End @if output-buttons

} // End @if output
