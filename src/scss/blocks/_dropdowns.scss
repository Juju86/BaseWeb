// Set file variable
$filename: 'scss/blocks/_dropdowns.scss';

////////////////////////////////////////////////////////////////////////////////
// @Dropdowns Map
////////////////////////////////////////////////////////////////////////////////

$dropdowns: (
  'classes' : true,
) !default;

// Check if we should output modifier classes
@if (map-get($dropdowns, 'classes') == true) {

/*==============================================================================
  @Dropdowns - #{$filename}
==============================================================================*/

/**
 * General Dropdown Styles
 */
.dropdown {
  position: relative;
  display: block;
  float: left;
  width: 250px;
  margin: 0;
  padding: 0;
  font-size: px-to-em(14px);
  line-height: 1.25em;
  background: $white;
  background-clip: padding-box;
  border: 1px solid rgba($black, 0.1);
  box-shadow: 0 2px 6px rgba($black, 0.15);
  @include border-radius();
  
  .dropdown-content,
  .dropdown-menu {
    position: relative;
    display: block;
    margin: 0;
    border-bottom: 0 none;
  }
  
  .dropdown-content {
    margin: 0.5em;
    padding: 1em;
    @include border-radius();
    
    &:before {
      content: '';
      display: block;
      position: absolute;
      top: -0.5em;
      left: -0.5em;
      right: -0.5em;
      border-top: 1px solid rgba($black, 0.1);
    }
    
    &:first-child {
      &:before {
        content: none;
      }
    }
    
    > * {
      margin: 0.5em 0;
    }
    > :first-child {
      margin-top: 0;
    }
    > :last-child {
      margin-bottom: 0;
    }
  }
  
  .dropdown-menu {
    list-style: none;
    padding: 0.5em;
    border-top: 1px solid rgba($black, 0.1);
    
    &:first-child {
      border-top: 0 none;
    }
    
    li {
      margin: 0;
      border-bottom: 1px solid rgba($black, 0.1);
      
      &:first-child {
        a {
          @include border-radius-top();
        }
      }
      &:last-child {
        border-bottom: 0 none;
        
        a {
          @include border-radius-bottom();
        }
      }
      
      a {
        display: block;
        padding: 0.75em 1em;
        border: 0 none;
      }
    }
  }
  
  a {
    color: $color;
    
    &:hover {
      background: rgba($black, 0.05);
    }
  }
}

/**
 * Inverted Dropdown Styles
 */
.dropdown.inverted {
  color: $white;
  background: $color;
  // border: 1px solid transparent;
  
  .dropdown-content,
  .dropdown-menu {
    
  }
  
  .dropdown-content {
    
    &:before {
      border-color: rgba($white, 0.1);
    }
  }
  
  .dropdown-menu {
    border-color: rgba($white, 0.1);
    
    li {
      border-color: rgba($white, 0.1);
    }
  }
  
  a {
    color: $white;
    
    &:hover {
      background: rgba($white, 0.05);
    }
  }
}

/**
 * Dropdown Trigger
 */
.dropdown-trigger {
  position: relative;
  display: inline-block;
  
  .dropdown {
    position: absolute;
    z-index: 100;
    opacity: 0;
    visibility: hidden;
    @include transition( transform, opacity, visibility );
    @include transition-duration(0.25s);
    @include transition-timing-function(ease-in-out);
    @include transition-delay(0.25s);
  }
  &:hover .dropdown {
    z-index: 105;
    opacity: 1;
    visibility: visible;
    @include transition( transform, opacity, visibility);
    @include transition-duration(0.25s);
    @include transition-timing-function(ease-in-out);
    @include transition-delay(none);
  }
}

/**
 * Dropdown Position Classes
 */
// Top / Bottom
.dropdown-trigger.anchor-top-left,
.dropdown-trigger.anchor-top-right,
.dropdown-trigger.anchor-top-center {
  .dropdown {
    margin: 0 0 -1px 0;
    top: auto;
    bottom: 100%;
    @include transform(translate3d(0, 1em, 0));
  }
  &:hover .dropdown {
    top: auto;
    bottom: 100%;
    @include transform(translate3d(0, 0, 0));
  }
}
.dropdown-trigger.anchor-bottom-left,
.dropdown-trigger.anchor-bottom-right,
.dropdown-trigger.anchor-bottom-center {
  .dropdown {
    margin: -1px 0 0 0;
    top: 100%;
    bottom: auto;
    @include transform(translate3d(0, -1em, 0));
  }
  &:hover .dropdown {
    top: 100%;
    bottom: auto;
    @include transform(translate3d(0, 0, 0));
  }
}

.dropdown-trigger.anchor-top-left,
.dropdown-trigger.anchor-bottom-left {
  .dropdown {
    left: 0;
    right: auto;
  }
  &:hover .dropdown {
    left: 0;
    right: auto;
  }
}
.dropdown-trigger.anchor-top-right,
.dropdown-trigger.anchor-bottom-right {
  .dropdown {
    left: auto;
    right: 0;
  }
  &:hover .dropdown {
    left: auto;
    right: 0;
  }
}
.dropdown-trigger.anchor-top-center,
.dropdown-trigger.anchor-bottom-center {
  .dropdown {
    margin-left: -125px;
    left: 50%;
    right: auto;
  }
  &:hover .dropdown {
    left: 50%;
    right: auto;
  }
}

// Left / Right
.dropdown-trigger.anchor-left-top,
.dropdown-trigger.anchor-left-bottom,
.dropdown-trigger.anchor-left-center {
  .dropdown {
    margin: 0 -1px 0 0;
    left: auto;
    right: 100%;
    @include transform(translate3d(1em, 0, 0));
  }
  &:hover .dropdown {
    left: auto;
    right: 100%;
    @include transform(translate3d(0, 0, 0));
  }
  
}
.dropdown-trigger.anchor-right-top,
.dropdown-trigger.anchor-right-bottom,
.dropdown-trigger.anchor-right-center {
  .dropdown {
    margin: 0 0 0 -1px;
    left: 100%;
    right: auto;
    @include transform(translate3d(-1em, 0, 0));
  }
  &:hover .dropdown {
    left: 100%;
    right: auto;
    @include transform(translate3d(0, 0, 0));
  }
}

.dropdown-trigger.anchor-left-top,
.dropdown-trigger.anchor-right-top {
  .dropdown {
    top: 0;
    bottom: auto;
  }
  &:hover .dropdown {
    top: 0;
    bottom: auto;
  }
}
.dropdown-trigger.anchor-left-bottom,
.dropdown-trigger.anchor-right-bottom {
  .dropdown {
    top: auto;
    bottom: 0;
  }
  &:hover .dropdown {
    top: auto;
    bottom: 0;
  }
}
.dropdown-trigger.anchor-left-center,
.dropdown-trigger.anchor-right-center {
  .dropdown {
    top: 50%;
    bottom: auto;
  }
  &:hover .dropdown {
    top: 50%;
    bottom: auto;
    @include transform(translate3d(0, -50%, 0));
  }
}
.dropdown-trigger.anchor-left-center {
  .dropdown {
    @include transform(translate3d(-1em, -50%, 0));
  }
}
.dropdown-trigger.anchor-right-center  {
  .dropdown {
    @include transform(translate3d(1em, -50%, 0));
  }
}

/**
 * Arrow
 */
.dropdown.arrow {
  &:before,
  &:after {
    @include make-triangle-base();
    position: absolute;
  }
}

.dropdown-trigger.anchor-bottom-left .dropdown.arrow,
.dropdown-trigger.anchor-bottom-right .dropdown.arrow,
.dropdown-trigger.anchor-bottom-center .dropdown.arrow {
  &:before {
    @include make-triangle( 7px, rgba($black, 0.25), 'up' );
    margin: 0 0 1px 0;
  }
  &:after {
    @include make-triangle( 7px, $white, 'up' );
  }
  
  &.inverted {
    &:before { @include make-triangle( 7px, $color, 'up' ); }
    &:after  { @include make-triangle( 7px, $color, 'up' ); }
  }
}
.dropdown-trigger.anchor-bottom-left .dropdown.arrow {
  &:before,
  &:after {
    top: auto;
    left: 1.5em;
    right: auto;
    bottom: 100%;
  }
}
.dropdown-trigger.anchor-bottom-right .dropdown.arrow {
  &:before,
  &:after {
    top: auto;
    left: auto;
    right: 1.5em;
    bottom: 100%;
  }
}
.dropdown-trigger.anchor-bottom-center .dropdown.arrow {
  &:before,
  &:after {
    top: auto;
    left: 50%;
    right: auto;
    bottom: 100%;
    @include transform(translate3d(-50%, 0, 0));
  }
}

.dropdown-trigger.anchor-top-left .dropdown.arrow,
.dropdown-trigger.anchor-top-right .dropdown.arrow,
.dropdown-trigger.anchor-top-center .dropdown.arrow {
  &:before {
    @include make-triangle( 7px, rgba($black, 0.25), 'down' );
    margin: 1px 0 0 0;
  }
  &:after {
    @include make-triangle( 7px, $white, 'down' );
  }
  
  &.inverted {
    &:before { @include make-triangle( 7px, $color, 'down' ); }
    &:after  { @include make-triangle( 7px, $color, 'down' ); }
  }
}
.dropdown-trigger.anchor-top-left .dropdown.arrow {
  &:before,
  &:after {
    top: 100%;
    left: 1.5em;
    right: auto;
    bottom: auto;
  }
}
.dropdown-trigger.anchor-top-right .dropdown.arrow {
  &:before,
  &:after {
    top: 100%;
    left: auto;
    right: 1.5em;
    bottom: auto;
  }
}
.dropdown-trigger.anchor-top-center .dropdown.arrow {
  &:before,
  &:after {
    top: 100%;
    left: 50%;
    right: auto;
    bottom: auto;
    @include transform(translate3d(-50%, 0, 0));
  }
}

.dropdown-trigger.anchor-left-top .dropdown.arrow,
.dropdown-trigger.anchor-left-bottom .dropdown.arrow,
.dropdown-trigger.anchor-left-center .dropdown.arrow {
  &:before {
    @include make-triangle( 7px, rgba($black, 0.25), 'right' );
    margin: 0 0 0 1px;
  }
  &:after {
    @include make-triangle( 7px, $white, 'right' );
  }
  
  &.inverted {
    &:before { @include make-triangle( 7px, $color, 'right' ); }
    &:after  { @include make-triangle( 7px, $color, 'right' ); }
  }
}
.dropdown-trigger.anchor-left-top .dropdown.arrow {
  &:before,
  &:after {
    top: 1.2em;
    left: 100%;
    right: auto;
    bottom: auto;
  }
}
.dropdown-trigger.anchor-left-bottom .dropdown.arrow {
  &:before,
  &:after {
    top: auto;
    left: 100%;
    right: auto;
    bottom: 1.2em;
  }
}
.dropdown-trigger.anchor-left-center .dropdown.arrow {
  &:before,
  &:after {
    top: 50%;
    left: 100%;
    right: auto;
    bottom: auto;
    @include transform(translate3d(0, -50%, 0));
  }
}

.dropdown-trigger.anchor-right-top .dropdown.arrow,
.dropdown-trigger.anchor-right-bottom .dropdown.arrow,
.dropdown-trigger.anchor-right-center .dropdown.arrow {
  &:before {
    @include make-triangle( 7px, rgba($black, 0.25), 'left' );
    margin: 0 1px 0 0;
  }
  &:after {
    @include make-triangle( 7px, $white, 'left' );
  }
  
  &.inverted {
    &:before { @include make-triangle( 7px, $color, 'left' ); }
    &:after  { @include make-triangle( 7px, $color, 'left' ); }
  }
}
.dropdown-trigger.anchor-right-top .dropdown.arrow {
  &:before,
  &:after {
    top: 1.2em;
    left: auto;
    right: 100%;
    bottom: auto;
  }
}
.dropdown-trigger.anchor-right-bottom .dropdown.arrow {
  &:before,
  &:after {
    top: auto;
    left: auto;
    right: 100%;
    bottom: 1.2em;
  }
}
.dropdown-trigger.anchor-right-center .dropdown.arrow {
  &:before,
  &:after {
    top: 50%;
    left: auto;
    right: 100%;
    bottom: auto;
    @include transform(translate3d(0, -50%, 0));
  }
}

} // endif classes
