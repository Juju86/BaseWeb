// Set file variable
$filename: 'scss/blocks/_dropdowns.scss';

////////////////////////////////////////////////////////////////////////////////
// @Dropdowns Map
////////////////////////////////////////////////////////////////////////////////

$dropdowns: (
  'classes' : true,
  'classes-position' : false,
  
  'class-dropdown'         : 'dropdown',
  'class-dropdown-content' : 'dropdown-content',
  'class-dropdown-menu'    : 'dropdown-menu',
  'class-dropdown-trigger' : 'dropdown-trigger',

  'target'        : '.dropdown',
  'target-action' : '&:not(.on-click):hover > .dropdown, &.active > .dropdown',
  
  'target-zindex'        : 100,
  'target-action-zindex' : 105,  
  
  'width'   : 15rem,
  'padding' : 1em,
  
  'font-size'   : px-to-rem(14px),
  'line-height' : 1.25em,
  
  'background'       : $white,
  'background-hover' : rgba($black, 0.05),
  'background-clip'  : padding-box,
  'border'           : 1px solid rgba($black, 0.1),
  'border-radius'    : $border-radius,
  'box-shadow'       : 0 2px 6px rgba($black, 0.15),
  
  'content-sep'    : 0.5em,
  'content-sep-hr' : 1em,
  
  'transition'                     : 'transform, opacity, visibility',
  'transition-in-duration'         : 0.25s, 0.25s, 0.25s,
  'transition-in-timing-function'  : linear,
  'transition-in-delay'            : none,
  'transition-out-duration'        : 0.25s, 0.25s, 0.15s,
  'transition-out-timing-function' : linear,
  'transition-out-delay'           : 0.25s,
  
  'offset-transition' : 1em,
  'offset-margin'     : -1px, // The first posiiton margin offset
  'offset-margin-alt' : 0,    // The second position margin offset (does not apply to centered dropdowns)
  'offset-position'   : 0,    // The second position offset (does not apply to centered dropdowns)
  
  'dropdown-position'      : 'bottom-left',
  'dropdown-menu-position' : 'right-top',
  
) !default;

////////////////////////////////////////////////////////////////////////////////
// @Dropdown Mixins
////////////////////////////////////////////////////////////////////////////////

@mixin make-dropdown($options: ()) {
  $o: map-merge($dropdowns, $options);
  
  position: relative;
  display: block;
  width: map-get($o, 'width');
  margin: 0;
  font-size: map-get($o, 'font-size');
  line-height: map-get($o, 'line-height');
  background: map-get($o, 'background');
  background-clip: map-get($o, 'background-clip');
  border: map-get($o, 'border');
  box-shadow: map-get($o, 'box-shadow');
  @include border-radius(map-get($o, 'border-radius'));
}

@mixin add-dropdown-style($options: (), $type : 'dropdown') {
  $o: map-merge($dropdowns, $options);
  
  @if ($type == 'dropdown') {
    
    padding: 0;
  
    > .#{map-get($o, 'class-dropdown-content')},
    > .#{map-get($o, 'class-dropdown-menu')} {
      width: auto;
      margin: 0;
      background: none;
      border: 0 none;
      border-top: map-get($o, 'border');
      box-shadow: none;
      @include border-radius(0);
      
      &:first-child {
        border-top: 0 none;
        @include border-radius-top(map-get($o, 'border-radius'));
      }
      &:last-child {
        @include border-radius-bottom(map-get($o, 'border-radius'));
      }
    }
    
  } @else if ($type == 'dropdown-content') {
    
    padding: map-get($o, 'padding');
    
    > * {
      margin-top: map-get($o, 'content-sep');
      margin-bottom: map-get($o, 'content-sep');
    }
    > :first-child {
      margin-top: 0;
    }
    > :last-child {
      margin-bottom: 0;
    }
    
    > hr {
      margin: map-get($o, 'content-sep-hr') 0;
    }
    
    // Block Links
    > a.block {
      display: block;
      margin: -0.5em;
      padding: map-get($o, 'padding');
      color: $color;
      border: 0 none;
      @include border-radius(map-get($o, 'border-radius'));
      
      &:hover {
        background: map-get($o, 'background-hover');
      }
      
      > * {
        margin-top: map-get($o, 'content-sep');
        margin-bottom: map-get($o, 'content-sep');
      }
      > :first-child {
        margin-top: 0;
      }
      > :last-child {
        margin-bottom: 0;
      }
    }
    
  } @else if ($type == 'dropdown-menu') {
    
    list-style: none;
    padding: 0.5em;
    
    // Dropdown Menu Items
    li {
      position: relative;
      margin: 0;
      border-bottom: map-get($o, 'border');
      @include transition(background-color 0.25s linear);
    }
    li:hover {
      background: map-get($o, 'background-hover');
      background-clip: padding-box;
    }
    li:first-child {
      @include border-radius-top(map-get($o, 'border-radius'));
    }
    li:last-child {
      border-bottom: 0 none;
      @include border-radius-bottom(map-get($o, 'border-radius'));
    }
      
    li a {
      display: block;
      padding: 0.75em 1em;
      color: $color;
      border: 0 none;
    }
    
  } @else {
    @warn 'The output type "#{$type}" is not supported in `add-dropdown-style()`';
  }
  
}

@mixin make-dropdown-trigger($options: ()) {
  $o: map-merge($dropdowns, $options);
  
  // Base trigger styles
  position: relative;
  
  // Base target styles
  #{map-get($o, 'target')} {
    position: absolute;
    z-index: map-get($o, 'target-zindex');
    opacity: 0;
    visibility: hidden;
    @include transition(map-get($o, 'transition'));
    @include transition-duration(map-get($o, 'transition-out-duration'));
    @include transition-timing-function(map-get($o, 'transition-out-timing-function'));
    @include transition-delay(map-get($o, 'transition-out-delay'));
  }
  
  // Base target hover & active styles
  #{map-get($o, 'target-action')} {
    z-index: map-get($o, 'target-action-zindex');
    opacity: 1;
    visibility: visible;
    @include transition( transform, opacity, visibility);
    @include transition-duration(map-get($o, 'transition-in-duration'));
    @include transition-timing-function(map-get($o, 'transition-in-timing-function'));
    @include transition-delay(map-get($o, 'transition-in-delay'));
  }
}

@mixin add-dropdown-position($options: (), $anchor : 'bottom-left') {
  $o: map-merge($dropdowns, $options);
  
  // Bottom Left
  @if ($anchor == 'bottom-left') {
    #{map-get($o, 'target')} {
      margin: map-get($o, 'offset-margin') 0 0 map-get($o, 'offset-margin-alt');
      top: 100%;
      left: map-get($o, 'offset-position');
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, -(map-get($o, 'offset-transition')), 0));
    }
    #{map-get($o, 'target-action')} {
      margin: map-get($o, 'offset-margin') 0 0 map-get($o, 'offset-margin-alt');
      top: 100%;
      left: map-get($o, 'offset-position');
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Bottom Right
  } @else if ($anchor == 'bottom-right') {
    #{map-get($o, 'target')} {
      margin: map-get($o, 'offset-margin') map-get($o, 'offset-margin-alt') 0 0;
      top: 100%;
      left: auto;
      right: map-get($o, 'offset-position');
      bottom: auto;
      @include transform(translate3d(0, -(map-get($o, 'offset-transition')), 0));
    }
    #{map-get($o, 'target-action')} {
      margin: map-get($o, 'offset-margin') map-get($o, 'offset-margin-alt') 0 0;
      top: 100%;
      left: auto;
      right: map-get($o, 'offset-position');
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
    
  // Bottom Center
  } @else if ($anchor == 'bottom-center') {
    #{map-get($o, 'target')} {
      margin: map-get($o, 'offset-margin') 0 0 0;
      top: 100%;
      left: 50%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-50%, -(map-get($o, 'offset-transition')), 0));
    }
    #{map-get($o, 'target-action')} {
      margin: map-get($o, 'offset-margin') 0 0 0;
      top: 100%;
      left: 50%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-50%, 0, 0));
    }
  }
  
  // Top left
  @if ($anchor == 'top-left') {
    #{map-get($o, 'target')} {
      margin: 0 0 map-get($o, 'offset-margin') map-get($o, 'offset-margin-alt');
      top: auto;
      left: map-get($o, 'offset-position');
      right: auto;
      bottom: 100%;
      @include transform(translate3d(0, (map-get($o, 'offset-transition')), 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 map-get($o, 'offset-margin') map-get($o, 'offset-margin-alt');
      top: auto;
      left: map-get($o, 'offset-position');
      right: auto;
      bottom: 100%;
      @include transform(translate3d(0, 0, 0));
    }
    
  // Top Right
  } @else if ($anchor == 'top-right') {
    #{map-get($o, 'target')} {
      margin: 0 map-get($o, 'offset-margin-alt') map-get($o, 'offset-margin') 0;
      top: auto;
      left: auto;
      right: map-get($o, 'offset-position');
      bottom: 100%;
      @include transform(translate3d(0, (map-get($o, 'offset-transition')), 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 map-get($o, 'offset-margin-alt') map-get($o, 'offset-margin') 0;
      top: auto;
      left: auto;
      right: map-get($o, 'offset-position');
      bottom: 100%;
      @include transform(translate3d(0, 0, 0));
    }
    
  // Top Center
  } @else if ($anchor == 'top-center') {
    #{map-get($o, 'target')} {
      margin: 0 0 map-get($o, 'offset-margin') 0;
      top: auto;
      left: 50%;
      right: auto;
      bottom: 100%;
      @include transform(translate3d(-50%, (map-get($o, 'offset-transition')), 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 map-get($o, 'offset-margin') 0;
      top: auto;
      left: 50%;
      right: auto;
      bottom: 100%;
      @include transform(translate3d(-50%, 0, 0));
    }
  }
  
  // Left Top
  @if ($anchor == 'left-top') {
    #{map-get($o, 'target')} {
      margin: map-get($o, 'offset-margin-alt') map-get($o, 'offset-margin') 0 0;
      top: map-get($o, 'offset-position');
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d((map-get($o, 'offset-transition')), 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: map-get($o, 'offset-margin-alt') map-get($o, 'offset-margin') 0 0;
      top: map-get($o, 'offset-position');
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Left Bottom
  } @else if ($anchor == 'left-bottom') {
    #{map-get($o, 'target')} {
      margin: 0 map-get($o, 'offset-margin') map-get($o, 'offset-margin-alt') 0;
      top: auto;
      left: auto;
      right: 100%;
      bottom: map-get($o, 'offset-position');
      @include transform(translate3d((map-get($o, 'offset-transition')), 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 map-get($o, 'offset-margin') map-get($o, 'offset-margin-alt') 0;
      top: auto;
      left: auto;
      right: 100%;
      bottom: map-get($o, 'offset-position');
      @include transform(translate3d(0, 0, 0));
    }
  
  // Left Center
  } @else if ($anchor == 'left-center') {
    #{map-get($o, 'target')} {
      margin: 0 map-get($o, 'offset-margin') 0 0;
      top: 50%;
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d((map-get($o, 'offset-transition')), -50%, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 map-get($o, 'offset-margin') 0 0;
      top: 50%;
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d(0, -50%, 0));
    }
  }
  
  // Right Top
  @if ($anchor == 'right-top') {
    #{map-get($o, 'target')} {
      margin: map-get($o, 'offset-margin-alt') 0 0 map-get($o, 'offset-margin');
      top: map-get($o, 'offset-position');
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-(map-get($o, 'offset-transition')), 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: map-get($o, 'offset-margin-alt') 0 0 map-get($o, 'offset-margin');
      top: map-get($o, 'offset-position');
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Right Bottom
  } @else if ($anchor == 'right-bottom') {
    #{map-get($o, 'target')} {
      margin: 0 0 map-get($o, 'offset-margin-alt') map-get($o, 'offset-margin');
      top: auto;
      left: 100%;
      right: auto;
      bottom: map-get($o, 'offset-position');
      @include transform(translate3d(-(map-get($o, 'offset-transition')), 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 map-get($o, 'offset-margin-alt') map-get($o, 'offset-margin');
      top: auto;
      left: 100%;
      right: auto;
      bottom: map-get($o, 'offset-position');
      @include transform(translate3d(0, 0, 0));
    }
  
  // Right Center
  } @else if ($anchor == 'right-center') {
    #{map-get($o, 'target')} {
      margin: 0 0 0 map-get($o, 'offset-margin');
      top: 50%;
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-(map-get($o, 'offset-transition')), -50%, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 0 map-get($o, 'offset-margin');
      top: 50%;
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, -50%, 0));
    }
  }
}

// Check if we should output modifier classes
@if (map-get($dropdowns, 'classes') == true) {

/*==============================================================================
  @Dropdowns - #{$filename}
==============================================================================*/

/**
 * General Dropdown Styles
 */
.#{map-get($dropdowns, 'class-dropdown')},
.#{map-get($dropdowns, 'class-dropdown-content')},
.#{map-get($dropdowns, 'class-dropdown-menu')} {
  @include make-dropdown();
}

/**
 * Dropdown
 */
.#{map-get($dropdowns, 'class-dropdown')} {
  @include add-dropdown-style($type: 'dropdown');
}

/**
 * Dropdown Content
 */
.#{map-get($dropdowns, 'class-dropdown-content')} {
  @include add-dropdown-style($type: 'dropdown-content');
}

/**
 * Dropdown Menu
 */
.#{map-get($dropdowns, 'class-dropdown-menu')} {
  @include add-dropdown-style($type: 'dropdown-menu');
}

/**
 * Custom Menu Dropdowns
 */
.menu.menu-hori ul ul {
  @include make-dropdown();
  @include add-dropdown-style($type: 'dropdown-menu');
}
.menu.menu-hori ul {
  @include make-dropdown-trigger(('target' : 'ul', 'target-action' : 'li:hover > ul'));
  @include add-dropdown-position(('target' : 'ul', 'target-action' : 'li:hover > ul'), $anchor: 'bottom-center');
  
  ul {
    @include add-dropdown-position(('target' : 'ul', 'target-action' : 'li:hover > ul'), $anchor: 'right-top');
  }
}

/*==============================================================================
  @Dropdown Triggers - #{$filename}
==============================================================================*/

.#{map-get($dropdowns, 'class-dropdown-trigger')} {
  @include make-dropdown-trigger();
  @include add-dropdown-position($anchor: 'bottom-left');
}

.#{map-get($dropdowns, 'class-dropdown-menu')} {
  @include make-dropdown-trigger(('target' : '.dropdown-menu', 'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu'));
  @include add-dropdown-position(('target' : '.dropdown-menu', 'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu', 'offset-margin-alt' : -1px, 'offset-position' : -0.5em), $anchor: 'right-top');
}

// Check if we should output modifier classes
@if (map-get($dropdowns, 'classes-position') == true) {

/*==============================================================================
  @Dropdown Anchor Positions - #{$filename}
==============================================================================*/

.anchor-bottom-left {
  @include add-dropdown-position($anchor: 'bottom-left');
}
.anchor-bottom-right {
  @include add-dropdown-position($anchor: 'bottom-right');
}
.anchor-bottom-center {
  @include add-dropdown-position($anchor: 'bottom-center');
}

.anchor-top-left {
  @include add-dropdown-position($anchor: 'top-left');
}
.anchor-top-right {
  @include add-dropdown-position($anchor: 'top-right');
}
.anchor-top-center {
  @include add-dropdown-position($anchor: 'top-center');
}

.anchor-left-top {
  @include add-dropdown-position($anchor: 'left-top');
}
.anchor-left-bottom {
  @include add-dropdown-position($anchor: 'left-bottom');
}
.anchor-left-center {
  @include add-dropdown-position($anchor: 'left-center');
}

.anchor-right-top {
  @include add-dropdown-position($anchor: 'right-top');
}
.anchor-right-bottom {
  @include add-dropdown-position($anchor: 'right-bottom');
}
.anchor-right-center {
  @include add-dropdown-position($anchor: 'right-center');
}

} // endif classes-position

} // endif classes
