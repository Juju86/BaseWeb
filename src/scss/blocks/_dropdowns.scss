// Set file variable
$filename: 'scss/blocks/_dropdowns.scss';

////////////////////////////////////////////////////////////////////////////////
// @Dropdowns Map
////////////////////////////////////////////////////////////////////////////////

$dropdowns: (
  'classes' : true,
  'classes-position' : false,
  
  'class-dropdown'         : 'dropdown',
  'class-dropdown-content' : 'dropdown-content',
  'class-dropdown-menu'    : 'dropdown-menu',
  'class-dropdown-trigger' : 'dropdown-trigger',

  'target'        : '.dropdown',
  'target-action' : '&:not(.on-click):hover > .dropdown, &.active > .dropdown',
  
  'width'   : 15rem,
  'padding' : 1em,
  
  'font-size'   : px-to-rem(14px),
  'line-height' : 1.25em,
  
  'background'       : $white,
  'background-hover' : rgba($black, 0.05),
  'border'           : 1px solid rgba($black, 0.1),
  'box-shadow'       : 0 2px 6px rgba($black, 0.15),
  
  'content-sep' : 0.5em,
  
  'transition'                 : 'transform, opacity, visibility',
  'transition-duration'        : 0.25s, 0.25s, 0.15s,
  'transition-timing-function' : ease-in-out,
  'transition-delay'           : 0.25s,
  
  'transform-offset' : 1em,
  
  'offset-margin'     : -1px,
  'offset-margin-alt' : 0,
  'offset-position'   : 0.5em,
  
) !default;

////////////////////////////////////////////////////////////////////////////////
// @Dropdown Mixins
////////////////////////////////////////////////////////////////////////////////

@mixin make-dropdown($options: ()) {
  $o: map-merge($dropdowns, $options);
  
  position: relative;
  display: block;
  width: 15rem;
  margin: 0;
  font-size: px-to-rem(14px);
  line-height: 1.25em;
  background: $white;
  background-clip: padding-box;
  border: 1px solid rgba($black, 0.1);
  box-shadow: 0 2px 6px rgba($black, 0.15);
  @include border-radius();
}

@mixin add-dropdown-style($options: (), $type : 'dropdown') {
  $o: map-merge($dropdowns, $options);
  
  @if ($type == 'dropdown') {
    
    padding: 0;
  
    > .dropdown-content,
    > .dropdown-menu {
      width: auto;
      margin: 0;
      background: none;
      border: 0 none;
      border-top: 1px solid rgba($black, 0.1);
      box-shadow: none;
      @include border-radius(0);
      
      &:first-child {
        border-top: 0 none;
        @include border-radius-top();
      }
      &:last-child {
        @include border-radius-bottom();
      }
    }
    
  } @else if ($type == 'dropdown-content') {
    
    padding: 1em;
    
    > * {
      margin: 0.5em 0;
    }
    > :first-child {
      margin-top: 0;
    }
    > :last-child {
      margin-bottom: 0;
    }
    
    // Block Links
    > a.block {
      display: block;
      margin: -0.5em;
      padding: 1em;
      color: $color;
      border: 0 none;
      @include border-radius();
      
      &:hover {
        background: rgba($black, 0.05);
      }
      
      > * {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
      > :first-child {
        margin-top: 0;
      }
      > :last-child {
        margin-bottom: 0;
      }
    }
    
  } @else if ($type == 'dropdown-menu') {
    
    list-style: none;
    padding: 0.5em;
    
    // Dropdown Menu Items
    li {
      position: relative;
      margin: 0;
      border-bottom: 1px solid rgba($black, 0.1);
      @include transition(background-color 0.25s linear);
    }
    li:hover {
      background: rgba($black, 0.05);
      background-clip: padding-box;
    }
    li:first-child {
      @include border-radius-top();
    }
    li:last-child {
      border-bottom: 0 none;
      @include border-radius-bottom();
    }
      
    li a {
      display: block;
      padding: 0.75em 1em;
      color: $color;
      border: 0 none;
    }
    
  } @else {
    @warn 'The output type "#{$type}" is not supported in `add-dropdown-style()`';
  }
  
}

@mixin make-dropdown-trigger($options: ()) {
  $o: map-merge($dropdowns, $options);
  
  // Base trigger styles
  position: relative;
  
  // Base target styles
  #{map-get($o, 'target')} {
    position: absolute;
    z-index: 100;
    opacity: 0;
    visibility: hidden;
    @include transition( transform, opacity, visibility );
    @include transition-duration(0.25s, 0.25s, 0.15s);
    @include transition-timing-function(ease-in-out);
    @include transition-delay(0.25s);
  }
  
  // Base target hover & active styles
  #{map-get($o, 'target-action')} {
    z-index: 105;
    opacity: 1;
    visibility: visible;
    @include transition( transform, opacity, visibility);
    @include transition-duration(0.25s, 0.25s, 0.25s);
    @include transition-timing-function(ease-in-out);
    @include transition-delay(none);
  }
}

@mixin add-dropdown-position($options: (), $anchor : 'bottom-left') {
  $o: map-merge($dropdowns, $options);
  
  // Bottom Left
  @if ($anchor == 'bottom-left') {
    #{map-get($o, 'target')} {
      margin: -1px 0 0 0;
      top: 100%;
      left: 0;
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, -1em, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: -1px 0 0 0;
      top: 100%;
      left: 0;
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Bottom Right
  } @else if ($anchor == 'bottom-right') {
    #{map-get($o, 'target')} {
      margin: -1px 0 0 0;
      top: 100%;
      left: auto;
      right: 0;
      bottom: auto;
      @include transform(translate3d(0, -1em, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: -1px 0 0 0;
      top: 100%;
      left: auto;
      right: 0;
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
    
  // Bottom Center
  } @else if ($anchor == 'bottom-center') {
    #{map-get($o, 'target')} {
      margin: -1px 0 0 0;
      top: 100%;
      left: 50%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-50%, -1em, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: -1px 0 0 0;
      top: 100%;
      left: 50%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-50%, 0, 0));
    }
  }
  
  // Top left
  @if ($anchor == 'top-left') {
    #{map-get($o, 'target')} {
      margin: 0 0 -1px 0;
      top: auto;
      left: 0;
      right: auto;
      bottom: 100%;
      @include transform(translate3d(0, 1em, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 -1px 0;
      top: auto;
      left: 0;
      right: auto;
      bottom: 100%;
      @include transform(translate3d(0, 0, 0));
    }
    
  // Top Right
  } @else if ($anchor == 'top-right') {
    #{map-get($o, 'target')} {
      margin: 0 0 -1px 0;
      top: auto;
      left: auto;
      right: 0;
      bottom: 100%;
      @include transform(translate3d(0, 1em, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 -1px 0;
      top: auto;
      left: auto;
      right: 0;
      bottom: 100%;
      @include transform(translate3d(0, 0, 0));
    }
    
  // Top Center
  } @else if ($anchor == 'top-center') {
    #{map-get($o, 'target')} {
      margin: 0 0 -1px 0;
      top: auto;
      left: 50%;
      right: auto;
      bottom: 100%;
      @include transform(translate3d(-50%, 1em, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 -1px 0;
      top: auto;
      left: 50%;
      right: auto;
      bottom: 100%;
      @include transform(translate3d(-50%, 0, 0));
    }
  }
  
  // Left Top
  @if ($anchor == 'left-top') {
    #{map-get($o, 'target')} {
      margin: 0 -1px 0 0;
      top: 0;
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d(1em, 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 -1px 0 0;
      top: 0;
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Left Bottom
  } @else if ($anchor == 'left-bottom') {
    #{map-get($o, 'target')} {
      margin: 0 -1px 0 0;
      top: auto;
      left: auto;
      right: 100%;
      bottom: 0;
      @include transform(translate3d(1em, 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 -1px 0 0;
      top: auto;
      left: auto;
      right: 100%;
      bottom: 0;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Left Center
  } @else if ($anchor == 'left-center') {
    #{map-get($o, 'target')} {
      margin: 0 -1px 0 0;
      top: 50%;
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d(1em, -50%, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 -1px 0 0;
      top: 50%;
      left: auto;
      right: 100%;
      bottom: auto;
      @include transform(translate3d(0, -50%, 0));
    }
  }
  
  // Right Top
  @if ($anchor == 'right-top') {
    #{map-get($o, 'target')} {
      margin: 0 0 0 -1px;
      top: 0;
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-1em, 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 0 -1px;
      top: 0;
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Right Bottom
  } @else if ($anchor == 'right-bottom') {
    #{map-get($o, 'target')} {
      margin: 0 0 0 -1px;
      top: auto;
      left: 100%;
      right: auto;
      bottom: 0;
      @include transform(translate3d(-1em, 0, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 0 -1px;
      top: auto;
      left: 100%;
      right: auto;
      bottom: 0;
      @include transform(translate3d(0, 0, 0));
    }
  
  // Right Center
  } @else if ($anchor == 'right-center') {
    #{map-get($o, 'target')} {
      margin: 0 0 0 -1px;
      top: 50%;
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(-1em, -50%, 0));
    }
    #{map-get($o, 'target-action')} {
      margin: 0 0 0 -1px;
      top: 50%;
      left: 100%;
      right: auto;
      bottom: auto;
      @include transform(translate3d(0, -50%, 0));
    }
  }
}

// Check if we should output modifier classes
@if (map-get($dropdowns, 'classes') == true) {

/*==============================================================================
  @Dropdowns - #{$filename}
==============================================================================*/

/**
 * General Dropdown Styles
 */
.dropdown,
.dropdown-content,
.dropdown-menu {
  @include make-dropdown();
}

/**
 * Dropdown
 */
.dropdown {
  @include add-dropdown-style($type: 'dropdown');
}

/**
 * Dropdown Content
 */
.dropdown-content {
  @include add-dropdown-style($type: 'dropdown-content');
}

/**
 * Dropdown Menu
 */
.dropdown-menu {
  @include add-dropdown-style($type: 'dropdown-menu');
}

/**
 * Custom Menu Dropdowns
 */
.menu.menu-hori ul ul {
  @include make-dropdown();
  @include add-dropdown-style($type: 'dropdown-menu');
}
.menu.menu-hori ul {
  @include make-dropdown-trigger(('target' : 'ul', 'target-action' : 'li:hover > ul'));
  @include add-dropdown-position(('target' : 'ul', 'target-action' : 'li:hover > ul'), $anchor: 'bottom-center');
  
  ul {
    @include add-dropdown-position(('target' : 'ul', 'target-action' : 'li:hover > ul'), $anchor: 'right-top');
  }
}

/*==============================================================================
  @Dropdown Triggers - #{$filename}
==============================================================================*/

.dropdown-trigger {
  display: inline-block;
}
.dropdown .dropdown-trigger {
  display: block;
}

/**
 * Dropdown Trigger
 */
.dropdown-trigger {
  @include make-dropdown-trigger();
  @include add-dropdown-position($anchor: 'bottom-left');
}

/**
 * Dropdown Menu Trigger
 */
.dropdown-menu {
  @include make-dropdown-trigger(('target' : '.dropdown-menu', 'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu'));
  @include add-dropdown-position(('target' : '.dropdown-menu', 'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu'), $anchor: 'left-top');
}

// Check if we should output modifier classes
@if (map-get($dropdowns, 'classes-position') == true) {

/*==============================================================================
  @Dropdown Anchor Positions - #{$filename}
==============================================================================*/

.anchor-bottom-left {
  @include add-dropdown-position($anchor: 'bottom-left');
}
.anchor-bottom-right {
  @include add-dropdown-position($anchor: 'bottom-right');
}
.anchor-bottom-center {
  @include add-dropdown-position($anchor: 'bottom-center');
}

.anchor-top-left {
  @include add-dropdown-position($anchor: 'top-left');
}
.anchor-top-right {
  @include add-dropdown-position($anchor: 'top-right');
}
.anchor-top-center {
  @include add-dropdown-position($anchor: 'top-center');
}

.anchor-left-top {
  @include add-dropdown-position($anchor: 'left-top');
}
.anchor-left-bottom {
  @include add-dropdown-position($anchor: 'left-bottom');
}
.anchor-left-center {
  @include add-dropdown-position($anchor: 'left-center');
}

.anchor-right-top {
  @include add-dropdown-position($anchor: 'right-top');
}
.anchor-right-bottom {
  @include add-dropdown-position($anchor: 'right-bottom');
}
.anchor-right-center {
  @include add-dropdown-position($anchor: 'right-center');
}

} // endif classes-position

} // endif classes
