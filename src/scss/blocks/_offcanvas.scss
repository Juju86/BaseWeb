// Set file variable
$filename: 'scss/custom/offcanvas.scss';

////////////////////////////////////////////////////////////////////////////////
// @Off-Canvas Map
////////////////////////////////////////////////////////////////////////////////

$offcanvas: (
  'output' : true,
  'class' : 'oc',

  'class-wrap'     : 'oc-wrap',
  'class-content'  : 'oc-content',
  'class-inner'    : 'oc-inner',
  'class-aside'    : 'oc-aside',
  'class-aside-id' : 'oc-aside-left',
  'class-active'   : 'oc-active',
  'class-delay'    : 'oc-delay',

  'screen-content' : rgba($black, 0.2),
  'screen-aside'   : rgba($black, 0.2),

  'transition' : 'slide-in-left',
  'transition-duration' : 0.5s,
  'width' : 280px,
  'wrap-height' : 100%,
  'aside-position' : fixed,

  'background-wrap' : null,
  'background-aside' : $white,
  'background-content' : null,

) !default;

// Extend default off-canvas map with overrides if they exist
@if variable-exists(override) {
  @if (map-has-key($override, 'offcanvas') == true) {
    $offcanvas: map-extend($offcanvas, map-get($override, 'offcanvas'), true);
  }
}

////////////////////////////////////////////////////////////////////////////////
// @Off-Canvas Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Off-Canvas
// Creates the base styles for off-canvas content
// @param $options
//   @type map
//   @default $offcanvas map
@mixin make-offcanvas($options: ()) {
  $o: map-merge($offcanvas, $options);

  // Base structure styles
  .#{map-get($o, 'class-wrap')} {
    height: map-get($o, 'wrap-height');
    @include scrollable();
  }
  .#{map-get($o, 'class-content')},
  .#{map-get($o, 'class-inner')},
  .#{map-get($o, 'class-aside')} {
  	height: 100%;
  }

  .#{map-get($o, 'class-wrap')} {
  	position: relative;
  	overflow: hidden;
    background: map-get($o, 'background-wrap');
  }
  .#{map-get($o, 'class-content')} {
  	position: relative;
  	left: 0;
  	z-index: 5;
  	transition: transform map-get($o, 'transition-duration');
    background: map-get($o, 'background-content');
  }
  .#{map-get($o, 'class-inner')} {
    position: relative;
    overflow-y: auto;
  }
  .#{map-get($o, 'class-aside')} {
  	position: map-get($o, 'aside-position');
  	top: 0;
  	z-index: 10;
  	visibility: hidden;
  	width: map-get($o, 'width');
    overflow-y: auto;
  	transition: all map-get($o, 'transition-duration');
    background: map-get($o, 'background-aside');
  }

  // Content screen
  @if (map-get($o, 'screen-content')) {
    .#{map-get($o, 'class-content')}:after {
    	position: absolute;
    	top: 0;
    	right: 0;
    	width: 0;
    	height: 0;
    	background: map-get($o, 'screen-content');
    	content: '';
    	opacity: 0;
    	transition: opacity map-get($o, 'transition-duration'), width 0.1s map-get($o, 'transition-duration'), height 0.1s map-get($o, 'transition-duration');
    }
    .#{map-get($o, 'class-active')} > .#{map-get($o, 'class-content')}:after {
    	width: 100%;
    	height: 100%;
    	opacity: 1;
    	transition: opacity map-get($o, 'transition-duration');
    }
  }

  // Aside screen
  @if (map-get($o, 'screen-aside')) {
    .#{map-get($o, 'class-aside')}:after {
    	position: absolute;
    	top: 0;
    	left: 0;
    	width: 100%;
    	height: 100%;
      background: map-get($o, 'screen-aside');
    	content: '';
    	opacity: 1;
    	transition: opacity map-get($o, 'transition-duration');
    }
    .#{map-get($o, 'class-active')} > .#{map-get($o, 'class-aside')}:after {
    	width: 0;
    	height: 0;
    	opacity: 0;
    	transition: opacity map-get($o, 'transition-duration'), width 0.1s map-get($o, 'transition-duration'), height 0.1s map-get($o, 'transition-duration');
    }
  }
}

// Add Off-Canvas Transition
// Creates transition styles for off-canvas elements
// @param $target
//   @type string
//   @options
//     'slide-in-left', 'slide-in-right'
//     'reveal-left', 'reveal-right'
//     'slide-along-left', 'slide-along-right'
//     'slide-out-left', 'slide-out-right'
//     'scale-down-left', 'scale-down-right'
//     'scale-up-left', 'scale-up-right'
//     'scale-rotate-left', 'scale-rotate-right'
//     'open-door-left', 'open-door-right'
//   @default $offcanvas('class-aside-left')
// @param $style
//   @type string
//   @default $offcanvas('transition')
// @param $options
//   @type map
//   @default $offcanvas map
@mixin add-offcanvas-transition($target: map-get($offcanvas, 'class-aside-id'), $style: map-get($offcanvas, 'transition'), $options: ()) {
  $o: map-merge($offcanvas, $options);

  // slide in left
  @if ($style == 'slide-in-left') {

    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	visibility: visible;
    	transform: translate3d(-100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

  // slide in right
  } @else if ($style == 'slide-in-right') {

    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	visibility: visible;
    	transform: translate3d(100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

  // reveal left
  } @else if ($style == 'reveal-left') {

    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(map-get($o, 'width'), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	z-index: 1;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

  // reveal right
  } @else if ($style == 'reveal-right') {

    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(-(map-get($o, 'width')), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	z-index: 1;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

  // slide along left
  } @else if ($style == 'slide-along-left') {

    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(map-get($o, 'width'), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	z-index: 1;
    	transform: translate3d(-50%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

  // slide along right
  } @else if ($style == 'slide-along-right') {

    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(-(map-get($o, 'width')), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	z-index: 1;
    	transform: translate3d(50%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

  // slide out right
  } @else if ($style == 'slide-out-left') {

    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(map-get($o, 'width'), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	z-index: 1;
    	transform: translate3d(50%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }

  // slide out right
  } @else if ($style == 'slide-out-right') {

    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(-(map-get($o, 'width')), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	z-index: 1;
    	transform: translate3d(-50%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }

  // scale down left
  } @else if ($style == 'scale-down-left') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    }
    .#{$target} .#{map-get($o, 'class-content')} {
    	transform-style: preserve-3d;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(0, 0, -(map-get($o, 'width')));
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	opacity: 1;
    	transform: translate3d(-100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

    @include add-offcanvas-wrap-height($target, $o);

  // scale down right
  } @else if ($style == 'scale-down-right') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    }
    .#{$target} .#{map-get($o, 'class-content')} {
    	transform-style: preserve-3d;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(0, 0, -(map-get($o, 'width')));
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	opacity: 1;
    	transform: translate3d(100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

    @include add-offcanvas-wrap-height($target, $o);

  // scale up left
  } @else if ($style == 'scale-up-left') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    	perspective-origin: 0% 50%;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(map-get($o, 'width'), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	z-index: 1;
    	opacity: 1;
    	transform: translate3d(0, 0, -(map-get($o, 'width')));
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }

    @include add-offcanvas-wrap-height($target, $o);

  // scale up right
  } @else if ($style == 'scale-up-right') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    	perspective-origin: 100% 50%;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(-(map-get($o, 'width')), 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	z-index: 1;
    	opacity: 1;
    	transform: translate3d(0, 0, -(map-get($o, 'width')));
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }

    @include add-offcanvas-wrap-height($target, $o);

  // scale rotate left
  } @else if ($style == 'scale-rotate-left') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    }
    .#{$target} .#{map-get($o, 'class-content')} {
    	transform-style: preserve-3d;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(100px, 0, -600px) rotateY(-20deg);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	opacity: 1;
    	transform: translate3d(-100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

    @include add-offcanvas-wrap-height($target, $o);

  // scale rotate right
  } @else if ($style == 'scale-rotate-right') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    }
    .#{$target} .#{map-get($o, 'class-content')} {
    	transform-style: preserve-3d;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: translate3d(-100px, 0, -600px) rotateY(20deg);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	opacity: 1;
    	transform: translate3d(100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

    @include add-offcanvas-wrap-height($target, $o);

  // open door left
  } @else if ($style == 'open-door-left') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    }
    .#{$target} .#{map-get($o, 'class-content')} {
    	transform-origin: 100% 50%;
    	transform-style: preserve-3d;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: rotateY(-10deg);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      left: 0;
    	opacity: 1;
    	transform: translate3d(-100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

    @include add-offcanvas-wrap-height($target, $o);

  // open door right
  } @else if ($style == 'open-door-right') {

    .#{$target}.#{map-get($o, 'class-wrap')} {
    	perspective: 1500px;
    }
    .#{$target} .#{map-get($o, 'class-content')} {
    	transform-origin: 0 50%;
    	transform-style: preserve-3d;
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {
    	transform: rotateY(10deg);
    }
    .#{$target}.#{map-get($o, 'class-aside')} {
      right: 0;
    	opacity: 1;
    	transform: translate3d(100%, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {
    	visibility: visible;
    	transition: transform map-get($o, 'transition-duration');
    	transform: translate3d(0, 0, 0);
    }
    .#{$target}.#{map-get($o, 'class-aside')}:after {
    	display: none;
    }

    @include add-offcanvas-wrap-height($target, $o);

  // transition doesn't exist
  } @else {
    @warn 'The off-canvas transition of `#{$style}` does not exist';
  }
}

// Add Off-Canvas Wrap Height
// Sets the oc-wrap height to 100% with delay. This is used for specific
// transitions which use 3D transforms.
// @param $target
//   @type string
// @param $options
//   @type map
//   @default $offcanvas map
@mixin add-offcanvas-wrap-height($target, $options: ()) {
  $o: map-merge($offcanvas, $options);

  .#{$target}.#{map-get($o, 'class-wrap')} {
    transition: height 0.1s map-get($o, 'transition-duration');
  }
  .#{$target}.#{map-get($o, 'class-delay')}.#{map-get($o, 'class-wrap')} {
    height: 100%;
  }
  .#{$target}.#{map-get($o, 'class-active')}.#{map-get($o, 'class-wrap')} {
    height: 100%;
    transition: none;
  }

}

// Check if we should output off-canvas
@if (map-get($offcanvas, 'output') == true) {
/*==============================================================================
  @Off-Canvas - #{$filename}
==============================================================================*/

@include make-offcanvas();

// Available transitions
// ---
// slide-in-left, slide-in-right
// reveal-left, reveal-right
// slide-along-left, slide-along-right
// slide-out-left, slide-out-right
// scale-down-left, scale-down-right
// scale-up-left, scale-up-right
// scale-rotate-left, scale-rotate-right
// open-door-left, open-door-right
// ---
// Example usage:
// @include add-offcanvas-transition('oc-aside-id', 'scale-rotate-left');
@if (map-get($offcanvas, 'transition')) {
  @include add-offcanvas-transition();
}

} // End @if output
