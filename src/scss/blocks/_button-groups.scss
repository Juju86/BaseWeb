// Set file variable
$filename: 'scss/blocks/_button-groups.scss';

// Dependencies
// @module Buttons Element - scss/elements/_buttons.scss

////////////////////////////////////////////////////////////////////////////////
// @Button Groups Map
////////////////////////////////////////////////////////////////////////////////

$button-groups: (
  'classes' : true,
  'class-group' : 'button-group',
  'border-width': 1px,
  'spacing' : 1em,

) !default;

// Extend default component map with overrides if they exist
@if variable-exists(override) {
  @if (map-has-key($override, 'button-groups') == true) {
    $button-groups: map-extend($button-groups, map-get($override, 'button-groups'), true);
  }
}

////////////////////////////////////////////////////////////////////////////////
// @Button Groups Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Button Group
// Creates the base styles for button groups.
// @param $options
//   @type map
//   @default $button-groups map
@mixin make-button-group($options: ()) {
  $o: map-merge($button-groups, $options);

  vertical-align: middle;
  margin: 0;
  @include clearfix();

  > .button {
    position: relative;
    z-index: 1;
    margin: 0;

    &:hover {
      z-index: 2;
    }
    &:focus {
      z-index: 3;
    }
    &:active {
      z-index: 4;
    }
    &.active {
      z-index: 5;
    }
  }
}

// Add Button Group Styles
// Adds button styles based on orientation and display type provided.
// @param $orientation
//   @type string 'horizontal' | 'vertical' | 'hori' | 'vert'
//   @default null
// @param $display
//   @type string 'inline' | 'block'
//   @default null
// @param $has
//   @type number
//   @default null
// @param $options
//   @type map
//   @default $button-groups map
@mixin add-button-group-style($orientation: null, $display: null, $options: ()) {
  $o: map-merge($button-groups, $options);

  // Inline or Block
  @if ($display == 'inline') {

    display: inline-block;
    float: none;

    + .#{map-get($o, 'class-group')} {
      margin-top: 0;
      margin-left: (map-get($o, 'spacing') * 0.75);
    }

  } @else if ($display == 'block') {

    display: block;
    float: none;

    + .#{map-get($o, 'class-group')} {
      margin-top: map-get($o, 'spacing');
      margin-left: 0;
    }

  }

  // Horizontal or Vertical
  @if (($orientation == 'horizontal') or ($orientation == 'hori')) {

    > .button {
      display: inline-block;
      float: left;
      border-radius: 0;
      border-width: map-get($o, 'border-width');

      + .button {
        margin-top: 0;
        margin-left: -(map-get($o, 'border-width'));
      }

      &:first-child {
        @include border-radius-top(0);
        @include border-radius-left(map-get($buttons, 'border-radius'));
      }
      &:last-child {
        @include border-radius-bottom(0);
        @include border-radius-right(map-get($buttons, 'border-radius'));
      }
    }

  } @else if (($orientation == 'vertical' ) or ($orientation == 'vert' )) {

    margin-right: 0;

    > .button {
      display: block;
      width: 100%;
      float: none;
      border-radius: 0;

      + .button {
        margin-top: -(map-get($o, 'border-width')); // Border width of buttons
        margin-left: 0;
      }

      &:first-child {
        @include border-radius-left(0);
        @include border-radius-top(map-get($buttons, 'border-radius'));
      }
      &:last-child {
        @include border-radius-right(0);
        @include border-radius-bottom(map-get($buttons, 'border-radius'));
      }
    }
  }
}

// Check if we should output modifier classes
@if (map-get($button-groups, 'classes') == true) {

/*==============================================================================
  @Button Groups - #{$filename}
==============================================================================*/

.#{map-get($button-groups, 'class-group')} {
  @include make-button-group();
  @include add-button-group-style('horizontal', 'inline');
}

/**
 * Button Group Modifiers
 */
.#{map-get($button-groups, 'class-group')}.block {
  @include add-button-group-style($display: 'block');
}
.#{map-get($button-groups, 'class-group')}.vertical {
  @include add-button-group-style($orientation: 'vertical');
}

} // endif classes
