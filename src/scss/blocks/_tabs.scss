// Set file variable
$filename: 'scss/blocks/_tabs.scss';

////////////////////////////////////////////////////////////////////////////////
// @Tabs Map
////////////////////////////////////////////////////////////////////////////////

$tabs: (
  'classes' : true,

  'class-wrapper' : 'tabs',
  'class-nav'     : 'tabs-nav',
  'class-content' : 'tabs-content',

) !default;

////////////////////////////////////////////////////////////////////////////////
// @Tabs Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Tabs
// Creates the base styles for a tabs block.
// @param $options
//   @type map
//   @default $tabs map
@mixin make-tabs($options: ()) {
  $o: map-merge($tabs, $options);

}

// Check if we should output modifier classes
@if (map-get($tabs, 'classes') == true) {

/*==============================================================================
  @Tabs - #{$filename}
==============================================================================*/

/**
 * Base: Tabs
 */
.tabs {
  position: relative;
  margin: 2em 0;

  .tabs-nav,
  .tabs-content {
    margin: 0;
  }
  .tabs-nav {
    z-index: 10;
  }
  .tabs-content {
    z-index: 5;
  }
}

.tabs-nav {
  margin: 2em 0;
  text-align: center;

  ul {
    display: flex;
    list-style: none;
    margin: 0;
  }
  ul li {
    flex: 1 0 auto;
    margin: 0;

    a {
      display: block;
      padding: 1em;
      border: none;
    }
  }
}

.tabs-content {
  margin: 2em 0;

  .tab-panel {
    display: none;
  }
  .tab-panel.active {
    display: block;
  }
}

/**
 * Style: Default
 */
.tabs-default .tabs-nav,
.tabs-nav.tabs-default {

  ul {
    background: #f5f5f5;
    border: 1px solid #e6e6e6;
    @include border-radius();
  }

  ul li {
    border-right: 1px solid #e6e6e6;
    @include transition();

    a {
      color: $color;

      &:hover {
        background: #e6e6e6;
        color: $color;
      }
    }
  }
  ul li:first-child {
    @include border-radius-left();
  }
  ul li:last-child {
    border-right: none;
    @include border-radius-right();
  }

  // Active State
  ul li.active {
    background: $white;

     a {
      color: $color;
      &:hover {
        background: $white;
      }
    }
  }
}

.tabs-default .tabs-content,
.tabs-content.tabs-default {
  padding: 1em 2em;
  border: 1px solid #e6e6e6;
  @include border-radius();
}

.tabs-default {
  .tabs-nav {
    ul {
      @include border-radius-bottom(0);
    }
    ul li {
      border-bottom: 1px solid transparent;
      margin-bottom: -1px;
    }
    ul li:first-child {
      @include border-radius-bottom-left(0);
    }
    ul li:last-child {
      @include border-radius-bottom-right(0);
    }
    ul li.active {
      border-bottom: 1px solid $white;
    }
  }
  .tabs-content {
    border-top: none;
    @include border-radius-top(0);
  }
}

/**
 * Style: Android
 */
.tabs-android .tabs-nav,
.tabs-nav.tabs-android {
  ul {
    border-bottom: 1px solid #e6e6e6;
  }
  ul li {
    border-bottom: 3px solid transparent;
    margin-bottom: -1px;

    a {
      color: $color-light;
      &:hover {
        color: $color-link;
      }
    }
  }
  // Active State
  ul li.active {
    border-bottom: 3px solid $color-link;

    a {
      color: $color;
      &:hover {
        color: $color-link;
      }
    }
  }
}

.tabs-android .tabs-content,
.tabs-content.tabs-android {
  padding: 1em 0;
}

/**
 * Modifier: Inline
 */
.tabs-nav.inline {
  ul {
    flex-wrap: wrap;
  }
  ul li {
    flex: 0 0 auto;

    a {
      padding: 1em 2em;
    }
  }
}
.tabs-default .tabs-nav.inline,
.tabs-nav.tabs-default.inline {
  ul li:last-child {
    border-right: 1px solid #e6e6e6;
  }
}

} // endif classes
