// Set file variable
$filename: 'scss/elements/_buttons.scss';

////////////////////////////////////////////////////////////////////////////////
// @Buttons Map
////////////////////////////////////////////////////////////////////////////////

$buttons: (
  'output' : true,
  'output-modifiers' : true,
  'class' : 'button',

  'display' : inline-block,
  'margin' : 0,
  'padding' : px-to-rem(12px) px-to-rem(24px),
  'vertical-align' : top,
  'font-family' : inherit,
  'font-size' : px-to-em(16px),
  'line-height' : px-to-rem(24px),
  'font-weight' : inherit,
  'text-decoration' : none,
  'background' : $bg-color,
  'background-clip' : border-box,
  'border' : 1px solid transparent,
  'border-radius' : $border-radius,
  'transition-property' : all,
  'transition-duration' : 0.75s,
  'transition-timing-function' : linear,

  'modifiers' : (
    'default' : (
      'color' : $color,
      'background' : $bg-color,
      'transition-duration' : 0.75s,
      'hover' : (
        'color' : $color,
        'background' : darken($bg-color, 5%),
        'border-color' : transparent,
        'transition-duration' : 0.1s,
      ),
      'focus' : (
        'background' : darken($bg-color, 5%),
        'transition-duration' : 0.1s,
      ),
      'active' : (
        'transition-duration' : 0,
      ),
    ),
    'primary' : (
      'selector' : '&.primary, &.blue',
      'color' : $white,
      'background' : $blue,
      'hover' : (
        'color' : $white,
        'background' : $blue-700,
      ),
    ),
    'secondary' : (
      'selector' : '&.secondary, &.gray',
      'color' : $white,
      'background' : $gray,
      'hover' : (
        'color' : $white,
        'background' : $gray-700,
      ),
    ),
    'success' : (
      'selector' : '&.success, &.green',
      'color' : $white,
      'background' : $green,
      'hover' : (
        'color' : $white,
        'background' : $green-700,
      ),
    ),
    'warning' : (
      'selector' : '&.warning, &.yellow',
      'color' : $color,
      'background' : $yellow,
      'hover' : (
        'color' : $color,
        'background' : $yellow-600,
      ),
    ),
    'danger' : (
      'selector' : '&.danger, &.red',
      'color' : $white,
      'background' : $red,
      'hover' : (
        'color' : $white,
        'background' : $red-700,
      ),
    ),
    'light': (
      'color': $color,
      'background': rgba($white, 0.75),
      'hover': (
        'color': $color,
        'background': rgba($white, 1),
      ),
    ),
    'dark': (
      'color': $white,
      'background': rgba($black, 0.5),
      'hover': (
        'color': $white,
        'background': rgba($black, 0.75),
      ),
    ),
    'small' : (
      'padding' : px-to-rem(6px) px-to-rem(14px),
      'font-size' : px-to-em(14px),
      'line-height' : px-to-rem(20px),
    ),
    'large' : (
      'padding' : px-to-rem(16px) px-to-rem(32px),
      'font-size' : px-to-em(20px),
      'line-height' : px-to-rem(26px),
    ),
    'block' : (
      'display' : block,
      'width' : 100%,
    ),
  ),

) !default;

// Extend default component map with overrides if they exist
@if variable-exists(override) {
  @if (map-has-key($override, 'buttons') == true) {
    $buttons: map-extend($buttons, map-get($override, 'buttons'), true);
  }
}

////////////////////////////////////////////////////////////////////////////////
// @Button Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Button
// Creates the base styles for a button modifer mixin or class. Usually applied
// directly through a base list class, mixin or an extend placeholder.
// @param $options
//   @type map
//   @default $buttons map
@mixin make-button($options: ()) {
  $o: map-extend($buttons, $options, true);

  cursor: pointer;

  @include add-styles($o);
  @include add-modifiers($o, 'default', false);

  @content;

}

// Check if we should output modifier classes
@if (map-get($buttons, 'output') == true) {

/*==============================================================================
  @Buttons - #{$filename}
==============================================================================*/

.#{map-get($buttons, 'class')} {
  @include make-button();
}

// Check if we should output notice modifiers
@if (map-get($buttons, 'output-modifiers') == true) {
  .#{map-get($buttons, 'class')} {
    @include add-modifiers($buttons);
  }
}

} // End @if output
