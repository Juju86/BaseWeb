// Set file variable
$filename: 'scss/elements/_icons.scss';

////////////////////////////////////////////////////////////////////////////////
// @Icons Map
////////////////////////////////////////////////////////////////////////////////

$icons: (
  'output' : true,
  'output-buttons' : true,
  'class' : 'icon',
  'class-symbols' : 'svg-symbols',

  'display' : inline-block,
  'width' : 1em,
  'height' : 1em,
  'margin-top' : -0.3em,
  'margin-bottom' : -0.1em,
  'font-size' : px-to-rem(24px),
  'vertical-align' : null,

  'stroke' : currentColor,
  'stroke-width' : 2px,
  'stroke-linecap' : round,
  'stroke-linejoin' : round,
  'fill' : none,

  'buttons' : (
    'gap' : 0.25em,
    'margin-top-small' : null,
    'margin-top-large' : -0.2em,
    'font-size-small' : px-to-rem(18px),
    'font-size-large' : px-to-rem(30px),
    'indent-small' : -0.125em,
    'indent' : -0.25em,
    'indent-large' : -0.35em
  )
) !default;

// Extend default component map with overrides if they exist
@if variable-exists(override) {
  @if map-has-key($override, 'icons') {
    $icons: map-extend($icons, map-get($override, 'icons'), true);
  }
}

////////////////////////////////////////////////////////////////////////////////
// @Icons Mixins
////////////////////////////////////////////////////////////////////////////////

// Hide SVG Symbols
// Adds styles for hiding your SVG symbols file
@mixin hide-svg-symbols() {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

// Make Icon
// Creates the base styles foricons.
// @param $options
//   @type map
//   @default $icons map
@mixin make-icon($options: ()) {
  $o: map-merge($icons, $options);

  @include add-styles($o);

  stroke: map-get($o, 'stroke');
  stroke-width: map-get($o, 'stroke-width');
  stroke-linecap: map-get($o, 'stroke-linecap');
  stroke-linejoin: map-get($o, 'stroke-linejoin');
  fill: map-get($o, 'fill');

}

// Add Icon Button
// Adds icon styles based on the context of a button.
// @param $context
//   @type string ('base', 'solo', 'left', 'right')
//   @default 'base'
// @param $options
//   @type map
//   @default $icons map
@mixin add-icon-button($context: 'base', $options: ()) {
  $o: map-extend($icons, $options, true);

  @if ($context == 'base') {

    .#{map-get($o, 'class')} {
      font-size: map-get($o, 'font-size');
      line-height: 1em;
      vertical-align: middle;
    }
    &.small .#{map-get($o, 'class')} {
      font-size: map-fetch($o, 'buttons', 'font-size-small');
      margin-top: map-fetch($o, 'buttons', 'margin-top-small');
    }
    &.large .#{map-get($o, 'class')} {
      font-size: map-fetch($o, 'buttons', 'font-size-large');
      margin-top: map-fetch($o, 'buttons', 'margin-top-large');
    }

  } @else if ($context == 'solo') {

    padding: nth(map-get($buttons, 'padding'), 1);
    &.small {
      padding: nth(map-fetch($buttons, 'modifiers', 'small', 'padding'), 1);
    }
    &.large {
      padding: nth(map-fetch($buttons, 'modifiers', 'large', 'padding'), 1);
    }

  } @else if ($context == 'left') {

    .#{map-get($o, 'class')} {
      margin-right: map-fetch($o, 'buttons', 'gap');
      margin-left: map-fetch($o, 'buttons', 'indent');
    }
    &.small .#{map-get($o, 'class')} {
      margin-left: map-fetch($o, 'buttons', 'indent-small');
    }
    &.large .#{map-get($o, 'class')} {
      margin-left: map-fetch($o, 'buttons', 'indent-large');
    }

  } @else if ($context == 'right') {

    .#{map-get($o, 'class')} {
      margin-left: map-fetch($o, 'buttons', 'gap');
      margin-right: map-fetch($o, 'buttons', 'indent');
    }
    &.small .#{map-get($o, 'class')} {
      margin-right: map-fetch($o, 'buttons', 'indent-small');
    }
    &.large .#{map-get($o, 'class')} {
      margin-right: map-fetch($o, 'buttons', 'indent-large');
    }

  }
}

// Check if we should output icons
@if map-get($icons, 'output') {

/*==============================================================================
  @Icons - #{$filename}
==============================================================================*/

@if (map-get($icons, 'class-symbols')) {
  .#{map-get($icons, 'class-symbols')} {
    @include hide-svg-symbols();
  }
}

.#{map-get($icons, 'class')} {
  @include make-icon();
}

// Check if we should output button modifiers
@if map-get($icons, 'output-buttons') {
  // Check if $buttons exists
  @if variable-exists(buttons) {
    .#{map-get($buttons, 'class')} {
      @include add-icon-button();
    }
    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')} {
      @include add-icon-button('solo');
    }
    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-left {
      @include add-icon-button('left');
    }
    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-right {
      @include add-icon-button('right');
    }
  }
} // End @if output-buttons

} // End @if output
