// Set file variable
$filename: 'scss/elements/_icons.scss';

// Required components warning
@if (variable-exists(buttons) == false) {
  @warn 'The icons element component requires the buttons element component!';
}

////////////////////////////////////////////////////////////////////////////////
// @Buttons Map
////////////////////////////////////////////////////////////////////////////////

$icons: (
  'classes' : true,
  'classes-button-icon' : true,

  'class' : 'icon',

  'size' : 1em,

  'margin-top' : -0.3em,
  'margin-bottom' : -0.1em,

  'font-size-small' : px-to-em(18px),
  'font-size' : px-to-em(24px),
  'font-size-large' : px-to-em(30px),

  'vertical-align' : null,
  'stroke-width' : null,
  'stroke' : null,
  'fill' : null,
) !default;

// Extend default component map with overrides if they exist
@if variable-exists(override) {
  @if (map-has-key($override, 'icons') == true) {
    $icons: map-extend($icons, map-get($override, 'icons'), true);
  }
}

////////////////////////////////////////////////////////////////////////////////
// @Button Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Icon
// Creates the base styles foricons.
// @param $options
//   @type map
//   @default $icons map
@mixin make-icon($options: ()) {
  $o: map-merge($icons, $options);

  display: inline-block;
  width: map-get($o, 'size');
  height: map-get($o, 'size');
  margin-top: map-get($o, 'margin-top');
  margin-bottom: map-get($o, 'margin-bottom');
  vertical-align: map-get($o, 'vertical-align');
  stroke-width: map-get($o, 'stroke-width');
  stroke: map-get($o, 'stroke');
  fill: map-get($o, 'fill');

}

// Check if we should output modifier classes
@if (map-get($icons, 'classes') == true) {

/*==============================================================================
  @Icons - #{$filename}
==============================================================================*/

.#{map-get($icons, 'class')} {
  @include make-icon();
}

// Check if we should output button icon classes
@if (map-get($icons, 'classes-button-icon') == true) {

/**
 * .button .icon
 */
.#{map-get($buttons, 'class')} {
  .#{map-get($icons, 'class')} {
    font-size: map-get($icons, 'font-size');
    line-height: 1em;
    vertical-align: middle;
  }
  &.small .#{map-get($icons, 'class')} {
    font-size: map-get($icons, 'font-size-small');
  }
  &.large .#{map-get($icons, 'class')} {
    font-size: map-get($icons, 'font-size-large');
    margin-top: -0.2em;
  }
}

/**
 * .button.button-icon
 */
.#{map-get($buttons, 'class')}.#{map-get($buttons, 'class')}-#{map-get($icons, 'class')} {
  padding: px-to-rem(12px);
  &.small {
    padding: px-to-rem(6px);
  }
  &.large {
    padding: px-to-rem(16px);
  }
}

/**
 * .button-icon-left
 * .button-icon-right
 */
.#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-left {
  .#{map-get($icons, 'class')} {
    margin-right: 0.25em;
    margin-left: -0.125em;
  }
  &.small .#{map-get($icons, 'class')} {
    margin-left: -0.125em;
  }
  &.large .#{map-get($icons, 'class')} {
    margin-left: -0.25em;
  }
}

.#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-right {
  .#{map-get($icons, 'class')} {
    margin-left: 0.25em;
    margin-right: -0.125em;
  }
  &.small .#{map-get($icons, 'class')} {
    margin-right: -0.125em;
  }
  &.large .#{map-get($icons, 'class')} {
    margin-right: -0.25em;
  }
}

} // endif classes-button-icon

} // endif classes
