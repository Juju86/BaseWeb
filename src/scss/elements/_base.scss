// Set file variable
$filename: 'scss/elements/_base.scss';

////////////////////////////////////////////////////////////////////////////////
// @Core Map Overrides
////////////////////////////////////////////////////////////////////////////////

// Extend default component map with overrides if they exist
@if variable-exists(override) {
  @if map-has-key($override, 'anchors') {
    $anchors: map-extend($anchors, map-get($override, 'anchors'), true);
  }
  @if map-has-key($override, 'headings') {
    $headings: map-extend($headings, map-get($override, 'headings'), true);
  }
  @if map-has-key($override, 'breakpoints') {
    $breakpoints: map-extend($breakpoints, map-get($override, 'breakpoints'), true);
  }
  @if map-has-key($override, 'grid') {
    $grid: map-extend($grid, map-get($override, 'grid'), true);
  }
}

/*==============================================================================
  @Base Styles - #{$filename}
==============================================================================*/

// Remove margins and padding from HTML and Body elements.
html, body {
  margin: 0;
  padding: 0;
}

// Prevents automatic text resizing on mobile devices.
html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

// Make HTML5 elements act like blocks.
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

html {
  // Set default box layout model to $box-sizing (border-box is default).
  // Source:
  //  - http://www.paulirish.com/2012/box-sizing-border-box-ftw/
  //  - https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
  box-sizing: $box-sizing;
}

// Apply a natural box layout model to all elements, while still allowing components to change.
*, *:before, *:after {
  box-sizing: inherit;
}

// Add custom text highlight color if a color is set in $bg-selection.
@if $bg-selection {
  ::selection {
    background: $bg-selection;
    text-shadow: none;
  }
}

// Check if we should output grid system
@if map-get($grid, 'output') {

/*==============================================================================
  @Grid System - #{$filename}
==============================================================================*/

// Check if we should output mobile grid system
@if map-get($grid, 'output-mobile') {
  @include build-grid-system('mobile');
}

@include media-min('medium') {
  @include build-grid-system();
}

} // End @if output

/*==============================================================================
  @Utility Classes - #{$filename}
==============================================================================*/

// Outputs our cleafix class if one is set in $class-clearfix.
@if $class-clearfix {
  .#{$class-clearfix} {
    @include add-clearfix();
  }
}

// Outputs our remove cleafix class if one is set in $class-remove-clearfix.
@if $class-remove-clearfix {
  .#{$class-remove-clearfix} {
    @include remove-clearfix();
  }
}

// Outputs our float-left class if one is set in $class-float-left.
@if $class-float-left {
  .#{$class-float-left} {
    float: left;
  }
}

// Outputs our float-right class if one is set in $class-float-right.
@if $class-float-right {
  .#{$class-float-right} {
    float: right;
  }
}

// Show and Hide classes
@if ($class-show) {
  .#{$class-show} {
    display: block !important;
  }
  .#{$class-show}-inline-block {
    display: inline-block !important;
  }
  .#{$class-show}-flex {
    display: flex !important;
  }
  .#{$class-show}-inline-flex {
    display: inline-flex !important;
  }
  .#{$class-show}-inherit {
    display: inherit !important;
  }
}

@if ($class-hide) {
  .#{$class-hide} {
    display: none !important;
  }
}

// Responsive Show and Hide Classes
@each $name, $value in $breakpoints {
  @if $class-show-hide-min or $class-show-hide-max {

    @include media-min($name) {
      @if ($class-show-hide-min) {
        .#{$class-show}-#{$name}-#{$class-show-hide-min} {
          display: none !important;
        }
      }
      @if ($class-show-hide-max) {
        .#{$class-hide}-#{$name}-#{$class-show-hide-max} {
          display: none !important;
        }
      }
    }
    @include media-max($name) {
      @if ($class-show-hide-min) {
        .#{$class-hide}-#{$name}-#{$class-show-hide-min} {
          display: none !important;
        }
      }
      @if ($class-show-hide-max) {
        .#{$class-show}-#{$name}-#{$class-show-hide-max} {
          display: none !important;
        }
      }
    }

  }
}
