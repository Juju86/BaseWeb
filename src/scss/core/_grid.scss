////////////////////////////////////////////////////////////////////////////////
// Grid Functions
////////////////////////////////////////////////////////////////////////////////

@function column_width( $-index, $-total-width : $grid-total-width, $-gutter-width: $grid-gutter-width, $-columns : $grid-columns ) {
  $-column-width: ($-total-width - ($-gutter-width * ($-columns - 1))) / $-columns;
  @return ($-column-width * $-index) + ($-gutter-width * ($-index - 1));
}

@function spacing_width( $-index, $-total-width : $grid-total-width, $-gutter-width: $grid-gutter-width, $-columns : $grid-columns ) {
  $-column-width : column_width( 1, $-total-width, $-gutter-width, $-columns );
  @return ($-column-width * $-index) + ($-gutter-width * $-index);
}

////////////////////////////////////////////////////////////////////////////////
// Semantic Grid Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Container
@mixin make-container( $-total-width : $grid-total-width, $-container-margin : $container-margin, $-container-padding : $container-padding, $-max-width : $container-max-width, $-min-width : $container-min-width, $-inc-class-container : $class-container ) {
  
  // Set the widths
  width: $-total-width;
  @if ($-min-width != none) {
    min-width: $-min-width;
  }
  @if ($-max-width != none) {
    max-width: $-max-width;
  }
  
  margin: 0 $-container-margin;
  padding: 0 $-container-padding;
  
  // Modifier Classes
  &.#{$-inc-class-container}-align-left {
    float: left;
  }
  &.#{$-inc-class-container}-align-right {
    float: right;
  }
  &.#{$-inc-class-container}-no-padding {
    padding: 0;
  }
  
  @include clearfix();
  
  @if ($global-box-sizing != border-box) {
    @include box-sizing( border-box );
  }
}

// Make Row
@mixin make-row($-inc-class-column : $class-column) {
  @include clearfix();
  
  // Row Modifiers
  &.#{$-inc-class-column}-center {
    text-align: center;
    
    > * {
      font-size: 0;
      line-height: 0;
    }
    .#{$-inc-class-column} {
      float: none;
      display: inline-block;
      font-size: $font-size;
      line-height: $line-height;
      text-align: left;
    }
  }
}

// Make Base Column (Does not include column width)
@mixin make-base-column( $-gutter-width : $grid-gutter-width ) {
  @if ($-gutter-width == mobile) {
    width: 100%;
    margin: 0;
  } @else {
    margin-left: $-gutter-width;
    &:first-child {
      margin-left: 0;
    }
  }
  float: left;
  min-height: 1px;
  
  @if ($global-box-sizing != border-box) {
    @include box-sizing( border-box );
  }
}

// Make Column
@mixin make-column( $-index, $-total-width : $grid-total-width, $-gutter-width: $grid-gutter-width, $-columns : $grid-columns ) {
  @include make-base-column;
  width: column_width( $-index, $-total-width, $-gutter-width, $-columns );
}

// Make Prefix
@mixin give-prefix( $-index, $-total-width : $grid-total-width, $-gutter-width: $grid-gutter-width, $-columns : $grid-columns ) {
  margin-left: (spacing_width( $-index, $-total-width, $-gutter-width, $-columns ) + $-gutter-width);
  &:first-child {
    margin-left: spacing_width( $-index, $-total-width, $-gutter-width, $-columns );
  }
}

// Make Suffix
@mixin give-suffix( $-index, $-total-width : $grid-total-width, $-gutter-width: $grid-gutter-width, $-columns : $grid-columns ) {
  margin-right: spacing_width( $-index, $-total-width, $-gutter-width, $-columns );
}

////////////////////////////////////////////////////////////////////////////////
// Class Based Grid System Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Mobile Grid System
// Outputs the styles for a mobile grid system where all columns are stacked
@mixin build-mobile-grid-system( $-class-container : $class-container, $-class-row : $class-row, $-class-column : $class-column ) {

  .#{$-class-container} {
    @include make-container( 100% );
  }
  
  .#{$-class-row} {
    @include make-row();
  }
  
  .#{$-class-column} {
    @include make-base-column( mobile );
  }
  
}

// Build Grid System
// Outputs all the classes and styles for the class based grid system
@mixin build-grid-system( $-total-width : $grid-total-width, $-gutter-width : $grid-gutter-width, $-columns : $grid-columns, $-container-margin : $container-margin, $-container-padding : $container-padding, $-max-width : $container-max-width, $-min-width : $container-min-width, $-inc-prefix : $class-prefix, $-inc-suffix : $class-suffix ) {
  
  .#{$class-container} {
    @include make-container( $-total-width, $-container-margin, $-container-padding, $-max-width, $-min-width );
  }
  
  .#{$class-row} {
    @include make-row();
  }
  
  .#{$class-column} {
    @include make-base-column( $-gutter-width );
  }
  
  @for $i from 1 through $-columns {
    .#{$class-column}-#{$i} {
      @extend .#{$class-column};
    }
    .#{$class-column}-#{$i} {
      width: column_width( $i, $-total-width, $-gutter-width, $-columns );
    }
  }
  
  @if ($-inc-prefix != none) {
    @for $i from 1 through $-columns {    
      .#{$class-prefix}-#{$i} {
        @include give-prefix( $i, $-total-width, $-gutter-width, $-columns );
      }
    }
  }
  
  @if ($-inc-suffix != none) {
    @for $i from 1 through $-columns {  
      .#{$class-suffix}-#{$i} {
        @include give-suffix( $i, $-total-width, $-gutter-width, $-columns );
      }
    }
  }
}
