<h1 class="docs-header">Lists</h1>
<p>Lists in HTML come in three flavors: unordered, ordered and description lists. BaseWeb has some pretty basic default styles for all three type and a variety of list mixins and classes for stylistic variation.</p>

<ul class="docs-list">
  
  <li>
    <h2 class="docs-header">Unordered Lists</h2>
    <p>The <code>&lt;ul&gt;</code> element represents a list of items, where the order of the items is not important. So if you changed the order, the meaning of the list would stay the same.</p>
    <pre><code>&lt;ul&gt;
  &lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;</code></pre>
    <div class="demo">
      <ul>
        <li>List Item</li>
        <li>List Item
          <ul>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
          </ul>
        </li>
        <li>List Item</li>
        <li>List Item</li>
        <li>List Item</li>
      </ul>
    </div>
  </li>
  
  <li>
    <h2 class="docs-header">Ordered Lists</h2>
    <p>The <code>&lt;ol&gt;</code> element represents a list of items, where the items have been intentionally ordered, such that changing the order would change the meaning of the list.</p>
    <pre><code>&lt;ol&gt;
  &lt;li&gt;...&lt;/li&gt;
&lt;/ol&gt;</code></pre>
    <div class="demo">
      <ol>
        <li>List item one</li>
        <li>List item two
          <ol>
            <li>Nested list item one</li>
            <li>Nested list item two</li>
            <li>Nested list item three</li>
          </ol>
        </li>
        <li>List item three</li>
        <li>List item four</li>
        <li>List item five</li>
      </ol>
    </div>
  </li>
  
  <li>
    <h2 class="docs-header">Description Lists</h2>
    <p>The <code>&lt;dl&gt;</code> element represents an association list consisting of zero or more name-value groups (a description list).</p>
    <pre><code>&lt;dl&gt;
  &lt;dt&gt;...&lt;/dt&gt;
  &lt;dd&gt;...&lt;/dd&gt;
&lt;/dl&gt;</code></pre>
    <div class="demo">
      <dl>
        <dt>Base</dt>
        <dd>The lowest part or edge of something, especially the part on which it rests or is supported.</dd>
        <dt>Web</dt>
        <dd>An information system on the Internet that allows documents to be connected to other documents by hypertext links, enabling the user to search for information by moving from one document to another.</dd>
      </dl>
    </div>
  </li>
  
</ul>

<h2 class="docs-header">List Variables</h2>
<p>List variables are encompassed within the <code>$list</code> map and are used throughout all list mixins to set default values.</p>

<ul class="docs-list docs-list-hover">
  <li>
    <code>$list('modifier-classes')</code>
    <code class="right value">true</code>
    <span class="block light">Whether or not we should output modifier classes. Set to `false` if you want to use the list modifier mixins semantically and/or reduce CSS output.</span>
  </li>
  <li>
    <code>$list('base')</code>
    <code class="right value">false</code>
    <span class="block light">Whether or not mixins should include base list styles. Set to false if you're using %list-base placeholder to apply base list styles to.</span>
  </li>
  <li><code>$list('nth')</code> <code class="right value">odd</code></li>
  <li>
    <code>$list('flush')</code>
    <code class="right value">false</code>
    <span class="block light">Whether or not a list should have left and right padding.</span>
  </li>

  <li><code>$list('padding')</code> <code class="right value">10px</code></li>
  
  <li><code>$list('background')</code> <code class="right value">none</code></li>
  <li><code>$list('background-stripe')</code> <code class="right value">rgba($black, 0.05)</code></li>
  <li><code>$list('background-hover')</code> <code class="right value">$yellow-pale</code></li>
  
  <li><code>$list('border')</code> <code class="right value">1px solid rgba($black, 0.1)</code></li>
  <li><code>$list('border-radius')</code> <code class="right value">$border-radius</code></li>
</ul>

<h2 class="docs-header">List Modifiers</h2>
<p>Lists are used to describe a wide range of content on the web. A lot of the time, you don't necessarily want a list to look like a standard list with bullets. BaseWeb provides some mixins and classes for creating commonly used styles for lists and effects.</p>

<ul class="docs-list">
  
  <li>
    <h3 class="docs-header">make-list-base</h3>
    <p>Creates the base styles for a list modifer mixin or class. Usually applied directly through a mixin or <code>%list-base</code> placeholder.</p>
    <pre class="docs-code"><code class="name">@mixin make-list-base()</code><code class="desc">@param $options
  @type map
  @default $list map</code></pre>
    <pre><code>// SCSS
%list-base {
  @include make-list-base();
}
.list-example-1 {
  @extend %list-base;
  ...
}
.list-example-2 {
  @extend %list-base;
  ...
}</code></pre>
  </li>
  
  <li>
    <h3 class="docs-header">make-list-rowed</h3>
    <p>Adds borders to a list that divide list items</p>
    <pre class="docs-code"><code class="name">@mixin make-list-rowed()</code><code class="desc">@param $options
  @type map
  @default $list map</code></pre>
    <pre><code>&lt;ul class=&quot;list-rowed&quot;&gt;...&lt;/ul&gt;</code></pre>
    <div class="demo">
      <ul class="list-rowed">
        <li>List Item</li>
        <li>List Item
          <ul>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
          </ul>
        </li>
        <li>List Item</li>
        <li>List Item</li>
        <li>List Item</li>
      </ul>
    </div>
    <p>In the case where you don't want to create left and right padding on a list, you can set <code>$table('flush')</code> to true, or use the <code>.list-flush</code> class to make the list flush to both sides.</p>
    <pre><code>// SCSS
.new-list-styles {
  @include make-list-rowed(('flush': true));
}
</code></pre>
    <pre><code>&lt;ul class=&quot;list-rowed list-flush&quot;&gt;...&lt;/ul&gt;</code></pre>
    <div class="demo">
      <ul class="list-rowed list-flush">
        <li>List Item</li>
        <li>List Item
          <ul>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
          </ul>
        </li>
        <li>List Item</li>
        <li>List Item</li>
        <li>List Item</li>
      </ul>
    </div>
  </li>
  
  <li>
    <h3 class="docs-header">make-list-bordered</h3>
    <p>Adds borders to a list that wraps the list and divides list items.</p>
    <pre class="docs-code"><code class="name">@mixin make-list-bordered()</code><code class="desc">@param $options
  @type map
  @default $list map</code></pre>
    <pre><code>&lt;ul class=&quot;list-bordered&quot;&gt;...&lt;/ul&gt;</code></pre>
    <div class="demo">
      <ul class="list-bordered">
        <li>List Item</li>
        <li>List Item
          <ul>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
          </ul>
        </li>
        <li>List Item</li>
        <li>List Item</li>
        <li>List Item</li>
      </ul>
    </div>
  </li>
  
  <li>
    <h3 class="docs-header">give-list-rounded</h3>
    <p>Gives a list rounded borders depending on parameters passed.</p>
    <pre class="docs-code"><code class="name">@mixin make-list-rounded()</code><code class="desc">@param $radius
  @type unit (pixel, percent)
  @default default ($list('border-radius'))
@param $options
  @type map
  @default $list map</code></pre>
    <pre><code>&lt;ul class=&quot;list-bordered list-rounded&quot;&gt;...&lt;/ul&gt;</code></pre>
    <div class="demo">
      <ul class="list-bordered list-rounded">
        <li>List Item</li>
        <li>List Item
          <ul>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
          </ul>
        </li>
        <li>List Item</li>
        <li>List Item</li>
        <li>List Item</li>
      </ul>
    </div>
  </li>
  
  <li>
    <h3 class="docs-header">give-list-stripes</h3>
    <p>Gives a list items alternating background colors.</p>
    <pre class="docs-code"><code class="name">@mixin make-list-stripes()</code><code class="desc">@param $nth
  @type nth (odd, even)
  @default default ($list('nth'))
@param $options
  @type map
  @default $list map</code></pre>
    <pre><code>&lt;ul class=&quot;list-rowed list-stripes&quot;&gt;...&lt;/ul&gt;</code></pre>
    <div class="demo">
      <ul class="list-rowed list-striped">
        <li>List Item</li>
        <li>List Item
          <ul>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
          </ul>
        </li>
        <li>List Item</li>
        <li>List Item</li>
        <li>List Item</li>
      </ul>
    </div>
  </li>
  
  <li>
    <h3 class="docs-header">give-list-hover</h3>
    <p>Gives list hover styles for list items.</p>
    <pre class="docs-code"><code class="name">@mixin make-list-hover()</code><code class="desc">@param $bg-hover
  @type color
  @default default ($list('background-hover'))
@param $options
  @type map
  @default $list map</code></pre>
    <pre><code>&lt;ul class=&quot;list-rowed list-hover&quot;&gt;...&lt;/ul&gt;</code></pre>
    <div class="demo">
      <ul class="list-rowed list-hover">
        <li>List Item</li>
        <li>List Item
          <ul>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
            <li>Nested List Item</li>
          </ul>
        </li>
        <li>List Item</li>
        <li>List Item</li>
        <li>List Item</li>
      </ul>
    </div>
  </li>
  
</ul>
  