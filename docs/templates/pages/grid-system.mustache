<h2 id="grid-system">Grid System</h2>

<p>BaseWeb is built with a very flexible grid system. Out of the box, you can use the default classes and settings to have a basic twelve column flexible grid. The basic things to know when using the base grid system is the markup structure. Here's an example:</p>

<div class="example">
  <div class="example-block example-desc">
    <p>There are three basic elements in the BaseWeb grid system: the container, row and column. These three elements are defined by the classes <code>.container</code>, <code>.row</code> and <code>.col .col-x</code> respectively. Columns require two classes, the base <code>.col</code> and the <code>.col-x</code> where <code>x</code> represents the number of columns to span.</p>
  </div><!-- .example-desc -->
  <div class="example-block example-output">
    
    <div class="container container-no-padding">
      <div class="row">
        <div class="col col-4"><p>.col-4</p></div>
        <div class="col col-4"><p>.col-4</p></div>
        <div class="col col-4"><p>.col-4</p></div>
      </div>
      <div class="row">
        <div class="col col-6"><p>.col-6</p></div>
        <div class="col col-6"><p>.col-6</p></div>
      </div>
      <div class="row">
        <div class="col col-2"><p>.col-2</p></div>
        <div class="col col-2"><p>.col-2</p></div>
        <div class="col col-2"><p>.col-2</p></div>
        <div class="col col-2"><p>.col-2</p></div>
        <div class="col col-2"><p>.col-2</p></div>
        <div class="col col-2"><p>.col-2</p></div>
      </div>
    </div>
    
  </div><!-- .example-output -->
  <div class="example-block example-code">
<pre><code class="language-markup">&lt;div class=&quot;container&quot;&gt;

  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col col-4&quot;&gt;...&lt;/div&gt;
    &lt;div class=&quot;col col-4&quot;&gt;...&lt;/div&gt;
    &lt;div class=&quot;col col-4&quot;&gt;...&lt;/div&gt;
  &lt;/div&gt;
  
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col col-6&quot;&gt;...&lt;/div&gt;
    &lt;div class=&quot;col col-6&quot;&gt;...&lt;/div&gt;
  &lt;/div&gt;
  
  ...
  
&lt;/div&gt;</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->

<p>The class based grid system is generated using the <a href="#build-grid-system" class="link-code"><code>build-grid-system()</code></a> mixin. By default it's going to generate all the classes for the container, row and columns based on the grid variables. You can also pass in custom grid variables manually to change grid parameters based on different media breakpoints.</p>

<p>There's also the mobile grid system mixin <a href="#build-mobile-grid-system" class="link-code"><code>build-mobile-grid-system()</code></a> that is available for easily making columns staked at 100% width.</p>

<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@include build-mobile-grid-system();

@include media-tablet {
  @include build-grid-system(740px);
}

@include media-desktop {
  @include build-grid-system(960px);
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->

<h2 id="semantic-grid">Semantic Grids</h2>

<p>The BaseWeb grid system also supports the use of semantic grids. That means you can define a grid without having to use grid classes and instead use mixins to define grid elements directly in your stylesheets.</p>

<div class="example">
  <div class="example-block example-output">
    
    <div class="demo-wrapper">
      <div class="demo-content">
        <div class="demo-aside">
          <p>@make-column(4);</p>
        </div>
        <div class="demo-article">
          <p>@make-column(8);</p>
        </div>
      </div>
    </div>
    
  </div><!-- .example-output -->
  <div class="example-block example-code">
<pre><code class="language-scss">.wrapper {
  @include make-container;
  
  .content {
    @include make-row;
    
    .aside {
      @include make-column(4);
    }
    
    .article {
      @include make-column(8);
    }
  }
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->

<h2 id="prefix-and-suffix">Prefix and Suffix</h2>

<p>You can also create spacing on columns using the prefix and suffix modifiers. These classes are used by adding the prefix and suffix class with the appropriate amount of column spacing you want to be added before or after a column.</p>

<div class="example">
  <div class="example-block example-output">
    
    <div class="container container-no-padding">
      <div class="row">
        <div class="col col-4 suffix-3"><p>.col-4</p></div>
        <div class="col col-3 prefix-2"><p>.col-3</p></div>
      </div>
      <div class="row">
        <div class="col col-5 prefix-4 suffix-3"><p>.col-5</p></div>
      </div>
    </div>
    
  </div><!-- .example-output -->
  <div class="example-block example-code">
<pre><code class="language-markup">&lt;div class=&quot;container&quot;&gt;

  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col col-4 suffix-3&quot;&gt;...&lt;/div&gt;
    &lt;div class=&quot;col col-3 prefix-2&quot;&gt;...&lt;/div&gt;
  &lt;/div&gt;
  
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col col-5 prefix-4 suffix-3&quot;&gt;...&lt;/div&gt;
  &lt;/div&gt;
  
&lt;/div&gt;</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->

<p>The semantic grid system equivalent would look something like this:</p>

<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">.aside {
  @include make-column(6);
  @include give-prefix(2);
}

.article {
  @include make-column(6);
  @include give-suffix(2);
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->

<h2 id="nested-columns">Nested Columns</h2>

<p>... Descriptions Needed ...</p>

<div class="example">
  <div class="example-block example-desc">
    <p>When using a fluid grid (percent based) the sum of columns in a row must equal the total column value <code>$grid-columns</code>. But when using a fixed grid (pixel based), the sum must equal the column span of it's parent <code>.col</code> element. If you want to mix fixed and fluid grids between breakpoints, it's best to use the <a href="#semantic-grid">semantic grid</a> method.</p>
  </div><!-- .example-desc -->
  <div class="example-block example-output">
    
    <div class="container container-no-padding">
    
      <div class="row">
        <div class="col col-6">
          <p>.col-6</p>
          <div class="row">
            <div class="col col-6"><p>.col-6</p></div>
            <div class="col col-6"><p>.col-6</p></div>
          </div>
        </div>
        
        <div class="col col-6">
          <p>.col-6</p>
          <div class="row">
            <div class="col col-4"><p>.col-4</p></div>
            <div class="col col-4"><p>.col-4</p></div>
            <div class="col col-4"><p>.col-4</p></div>
          </div>
        </div>
      </div>
      
    </div>
    
  </div><!-- .example-output -->
  <div class="example-block example-code">
<pre><code class="language-markup">&lt;div class=&quot;container&quot;&gt;
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col col-6&quot;&gt;
      ...
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;col col-6&quot;&gt;...&lt;/div&gt;
        &lt;div class=&quot;col col-6&quot;&gt;...&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col col-6&quot;&gt;
      ...
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;col col-4&quot;&gt;...&lt;/div&gt;
        &lt;div class=&quot;col col-4&quot;&gt;...&lt;/div&gt;
        &lt;div class=&quot;col col-4&quot;&gt;...&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->

<h2 id="media-queries">Media Queries</h2>

<p>... Descriptions Needed ...</p>

<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">// Small
@mixin media-small {
  @media screen and (max-width: $bp-small ) {
    @content;
  }
}

// Mobile
@mixin media-mobile {
  @media screen and (max-width: $bp-mobile ) {
    @content;
  }
}

// Tablet
@mixin media-tablet {
  @media screen and ( min-width: $bp-tablet ) {
    @content;
  }
}

// Desktop
@mixin media-desktop {
  @media screen and ( min-width: $bp-desktop ) {
    @content;
  }
}

// Large
@mixin media-large {
  @media screen and ( min-width: $bp-large ) {
    @content;
  }
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->

<h2 id="variables">Variables</h2>

<article id="grid-total-width" class="block block-variable" data-type="variable">
<h3>grid-total-width</h3>
<p>Defines the total width of your grid. If set to 100%, it behaves as a fluid grid. Giving it a pixel value makes it a fixed grid. e.g. Setting it to <code>960px</code> will make it behave like the <a href="http://960.gs/" target="_blank">960 grid system</a>.</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$grid-total-width
  type: unit (pixel, percentage)
  default: 100%</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="grid-gutter-width" class="block block-variable" data-type="variable">
<h3>grid-gutter-width</h3>
<p>Defines the space between each column. The value type must be the same as the <code>$grid-total-width</code>. So they both must be either percentages or pixels.</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$grid-gutter-width
  type: unit (pixel, percentage)
  default: 2%</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="grid-columns" class="block block-variable" data-type="variable">
<h3>grid-columns</h3>
<p>The maximum number of columns per row. This value must be an integer greater than zero.</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$grid-columns
  type: number (positive)
  default: 12</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="container-margin" class="block block-variable" data-type="variable">
<h3>container-margin</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$container-margin
  type: unit (pixel, percentage, auto)
  default: auto</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="container-padding" class="block block-variable" data-type="variable">
<h3>container-padding</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$container-padding
  type: unit (pixel, percentage)
  default: 20px</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="container-min-width" class="block block-variable" data-type="variable">
<h3>container-min-width</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$container-min-width
  type: ...
  default: none</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="container-max-width" class="block block-variable" data-type="variable">
<h3>container-max-width</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$container-max-width
  type: ...
  default: 1000px</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="class-container" class="block block-variable" data-type="variable">
<h3>class-container</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$class-container
  type: class name
  default: container</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="class-row" class="block block-variable" data-type="variable">
<h3>class-row</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$class-row
  type: class name
  default: row</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="class-column" class="block block-variable" data-type="variable">
<h3>class-column</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$class-column
  type: class name
  default: col</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="class-prefix" class="block block-variable" data-type="variable">
<h3>class-prefix</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$class-prefix
  type: class name
  default: prefix</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="class-suffix" class="block block-variable" data-type="variable">
<h3>class-suffix</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$class-suffix
  type: class name
  default: suffix</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="bp-small" class="block block-variable" data-type="variable">
<h3>bp-small</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$bp-small
  type: unit (pixel)
  default: 480px</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="bp-mobile" class="block block-variable" data-type="variable">
<h3>bp-mobile</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$bp-mobile
  type: unit (pixel)
  default: 760px</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="bp-tablet" class="block block-variable" data-type="variable">
<h3>bp-tablet</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$bp-tablet
  type: unit (pixel)
  default: 760px</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="bp-desktop" class="block block-variable" data-type="variable">
<h3>bp-desktop</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$bp-desktop
  type: unit (pixel)
  default: 990px</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="bp-large" class="block block-variable" data-type="variable">
<h3>bp-large</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">$bp-large
  type: unit (pixel)
  default: 1380px</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<hr>

<h2 id="functions">Functions</h2>

<article id="column_width" class="block block-function" data-type="function">
<h3>column_width</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@function column_width(
  $index,
  $grid-total-width,
  $grid-gutter-width,
  $grid-columns
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="spacing_width" class="block block-function" data-type="function">
<h3>spacing_width</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@function spacing_width(
  $index,
  $grid-total-width,
  $grid-gutter-width,
  $grid-columns
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<hr>

<h2 id="mixins">Mixins</h2>

<article id="make-container" class="block block-mixin" data-type="mixin">
<h3>make-container</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin make-container(
  $grid-total-width,
  
  $container-margin,
  $container-padding,
  $container-max-width,
  $container-min-width,
  
  $class-container
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="make-row" class="block block-mixin" data-type="mixin">
<h3>make-row</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin make-row(
  $class-column
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="make-base-column" class="block block-mixin" data-type="mixin">
<h3>make-base-column</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin make-base-column(
  $grid-gutter-width
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="make-column" class="block block-mixin" data-type="mixin">
<h3>make-column</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin make-column(
  $index,
  $grid-total-width,
  $grid-gutter-width,
  $grid-columns
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="give-prefix" class="block block-mixin" data-type="mixin">
<h3>give-prefix</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin give-prefix(
  $index,
  $grid-total-width,
  $grid-gutter-width,
  $grid-columns
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="give-suffix" class="block block-mixin" data-type="mixin">
<h3>give-suffix</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin give-suffix(
  $index,
  $grid-total-width,
  $grid-gutter-width,
  $grid-columns
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="build-mobile-grid-system" class="block block-mixin" data-type="mixin">
<h3>build-mobile-grid-system</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin build-mobile-grid-system(
  $class-container,
  $class-row,
  $class-column
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="build-grid-system" class="block block-mixin" data-type="mixin">
<h3>build-grid-system</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin build-grid-system(
  $grid-total-width,
  $grid-gutter-width,
  $grid-columns,
  
  $container-margin,
  $container-padding,
  $container-max-width,
  $container-min-width,
  
  $class-container,
  $class-row,
  $class-column,
  $class-prefix,
  $class-suffix
)</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="media-small" class="block block-mixin" data-type="mixin">
<h3>media-small</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin media-small {
  @content
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="media-mobile" class="block block-mixin" data-type="mixin">
<h3>media-mobile</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin media-mobile {
  @content
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="media-tablet" class="block block-mixin" data-type="mixin">
<h3>media-tablet</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin media-tablet {
  @content
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="media-desktop" class="block block-mixin" data-type="mixin">
<h3>media-desktop</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin media-desktop {
  @content
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<article id="media-large" class="block block-mixin" data-type="mixin">
<h3>media-large</h3>
<p>... Descriptions Needed ...</p>
<div class="example">
  <div class="example-block example-code">
<pre><code class="language-scss">@mixin media-large {
  @content
}</code></pre>
  </div><!-- .example-code -->
</div><!-- .example -->
</article>

<hr>
