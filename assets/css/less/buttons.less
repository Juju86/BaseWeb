////////////////////////////////////////////////////////////////////////////////
// Buttons
////////////////////////////////////////////////////////////////////////////////

////
// Buttons
////
// Type
@font-size-button: 13px;
// Default Styles
@button-default-color-start: #fefefe;
@button-default-color-end: #f5f5f5;
@button-default-styles: 'default'; // default, pill or square
// Spacing
@button-padding-top-bottom: (@padding / 2);
@button-padding-left-right: @padding;
@button-padding: @button-padding-top-bottom @button-padding-left-right;

////
// Button Mixins
////
// Base buttons styles
.base-btn() {
    font-family: @font-family;
    .font-sequence( @font-size-button );
    text-align: center;
    position: relative;
    display: inline-block;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    margin: 0;
    -webkit-font-smoothing: subpixel-antialiased;
    .transition(~"border-color linear 0.2s, background-position linear 0.2s");
    .btn-style(@button-default-styles);
}
////
// Button Color Mixin
.btn-color( @start-color, @end-color ) {
    // Add base button styles so we don't need two classes
    .base-btn();
    // Text Color
    .text-color() when (lightness(@end-color) >= 70%) {
        color: @color;
        text-shadow: 0 1px 0 rgba(255,255,255, 0.25);
    }
    .text-color() when (lightness(@end-color) < 70%) {
        color: @white;
        text-shadow: 0 1px 0 rgba(0,0,0, 0.4);
    }
    .text-color();
    // Border
    border: 1px solid;
    .border-color( @black, 0.25, #ccc );
    // Background
    #gradient > .vertical( @start-color, @end-color );
    background-repeat: repeat-x;
    // Shadow
    .box-shadow(~"0 1px 2px rgba(0,0,0, 0.1), 0 1px 0 rgba(255,255,255, 0.15) inset");
    ////
    // Hover
    &:hover {
        .text-color() when (lightness(@end-color) >= 70%) {
            color: @color;
            text-shadow: 0 1px 0 rgba(255,255,255, 0.25);
        }
        .text-color() when (lightness(@end-color) < 70%) {
            color: @white;
            text-shadow: 0 1px 0 rgba(0,0,0, 0.4);
        }
        .text-color();
        background-position: 0 -30px;
        .border-color( @black, 0.4, darken(@end-color, 10%) );
    }
    ////
    // Active
    &:active {
        background-color: darken(@end-color, 2%);
        background-image: none;
        .border-color( @black, 0.4, darken(@end-color, 10%) );
        .box-shadow(~"0 0 0 rgba(0,0,0, 0), 0 1px 3px rgba(0,0,0, 0.25) inset");
    }
    ////
    // Focus
    &:focus {
        outline: 4px solid rgba(255,242,0, 0.90);
        background-position: 0 -30px;
        .border-color( @black, 0.4, darken(@end-color, 10%) );
        .box-shadow(~"0 0 8px rgba(35,130,247, 0.4), 0 1px 0 rgba(255,255,255, 0.15) inset");
    }
}
////
// Resets button styles
.btn-color-reset() {
    background: none;
    box-shadow: none;
    text-shadow: none;
    border: 0 none;
    padding: 0;
    margin: 0;
    .border-radius(0);
}

////
// Button Styles
.btn-style( @style : 'default' ) {
    .build() when ( @style = 'default' ) {
        .border-radius();
        padding: @button-padding;
    }
    .build() when ( @style = 'pill' ) {
        .border-radius( 300px );
        padding-left: (@button-padding-left-right * 1.5);
        padding-right: (@button-padding-left-right * 1.5);
    }
    .build() when ( @style = 'square' ) {
        .border-radius(0);
        padding: @button-padding;
    }
    .build();
}

////
// Button Structure Mixins
.btn-block() {
    display: block;
    width: 100%;
    box-sizing: border-box;
    padding-top: (@button-padding-top-bottom * 2.5);
    padding-bottom: (@button-padding-top-bottom * 2.5);
}
// Inline
.btn-inline() {
    display: inline-block;
    width: auto;
    box-sizing: content-box;
    padding-top: @button-padding-top-bottom;
    padding-bottom: @button-padding-top-bottom;
}
// Small Mobile
.btn-mobile-small-block() {
    .btn-block();
    @media screen and (min-width: @media-small ) {
        .btn-inline();
    }
}
// Mobile
.btn-mobile-block() {
    .btn-block();
    @media screen and ( min-width: @media-tablet-min ) {
        .btn-inline();
    }
}

////
// Button Size Mixins
.btn-size-huge() {
    .font-sequence( (@font-size-button + 2) );
    padding: ( @button-padding-top-bottom * 3 ) ( @button-padding-left-right * 4 );
}
.btn-size-large() {
    .font-sequence( (@font-size-button + 1) );
    padding: ( @button-padding-top-bottom * 2 ) ( @button-padding-left-right * 2 );
}
.btn-size-small() {
    .font-sequence( (@font-size-button - 1) );
    padding: ( @button-padding-top-bottom / 2 ) ( @button-padding-left-right / 1.5 );
}
.btn-size-tiny() {
    .font-sequence( (@font-size-button - 2) );
    padding: ( @button-padding-top-bottom / 3 ) ( @button-padding-left-right / 1.5 );
}

////
// Color Mixins & Class Assignment
.btn {
    .btn-color( @button-default-color-start, @button-default-color-end );
}
.btn-black {
    .btn-color( @g6, @g5 );
}
.btn-faint {
    .btn-color( @white, @button-default-color-start );
}
// Solid Colors
.btn-blue {
    .btn-color( @blue-light, @blue-dark );
}
.btn-green {
    .btn-color( @green-light, @green-dark );
}
.btn-yellow {
    .btn-color( @yellow-light, @yellow-dark );
}
.btn-orange {
    .btn-color( @orange-light, @orange-dark );
}
.btn-red {
    .btn-color( @red-light, @red-dark );
}
.btn-violet {
    .btn-color( @violet-light, @violet-dark );
}
// Mix Colors
.btn-blue-green {
    .btn-color( mix(@blue-light, @green-light), mix(@blue-dark, @green-dark) );
}
.btn-yellow-green {
    .btn-color( mix(@green-light, @yellow-light), mix(@green-dark, @yellow-dark) );
}
.btn-yellow-orange {
    .btn-color( mix(@yellow-light, @orange-light), mix(@yellow-dark, @orange-dark) );
}
.btn-red-orange {
    .btn-color( mix(@orange-light, @red-light), mix(@orange-dark, @red-dark) );
}
.btn-red-violet {
    .btn-color( mix(@red-light, @violet-light), mix(@red-dark, @violet-dark) );
}
.btn-blue-violet {
    .btn-color( mix(@violet-light, @blue-light), mix(@violet-dark, @blue-dark) );
}   

////////////////////////////////////////////////////////////////////////////////
// Class Assignment
////////////////////////////////////////////////////////////////////////////////

////
// Semantic Classes
.btn-primary {
    .btn-blue();
}
.btn-secondary {
    .btn-black();
}
.btn-success {
    .btn-green();
}
.btn-warning {
    .btn-orange();
}
.btn-danger {
    .btn-red();
}
.btn-faint {
    .btn-faint();
}

////
// Size Class Assignment
.btn-huge  { .btn-size-huge();  }
.btn-large { .btn-size-large(); }
.btn-small { .btn-size-small(); }
.btn-tiny  { .btn-size-tiny();  }

////////////////////////////////////////////////////////////////////////////////
// Button Groups
////////////////////////////////////////////////////////////////////////////////

.btn-group {
    position: relative;
    display: inline-block;
    font-size: 0;
    white-space: nowrap;
    vertical-align: middle;
    .clearfix();
}
.btn-group > .btn {
    font-size: @font-size-button;
    position: relative;
    z-index: 5;
    border-radius: 0;
    margin-right: -1px;
}
.btn-group > .btn:first-child {
    .border-radius-left(4px);
}
.btn-group > .btn:last-child {
    .border-radius-right(4px);
    margin-right: 0;
}
.btn-group > .btn:hover,
.btn-group > .btn:active,
.btn-group > .btn:focus {
    z-index: 10;
}

////
// Vertical groups
.btn-group.vertical > .btn {
    display: block;
    border-radius: 0;
    margin-right: 0;
    margin-bottom: -1px;
}
.btn-group.vertical > .btn:first-child {
    .border-radius-top(4px);
}
.btn-group.vertical > .btn:last-child {
    .border-radius-bottom(4px);
    margin-bottom: 0;
}
