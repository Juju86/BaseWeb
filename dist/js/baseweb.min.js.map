{"version":3,"sources":["utility.js","dismissible.js","dropdowns.js","offcanvas.js","tabs.js"],"names":["utility","api","hasClass","el","c","toArray","classList","contains","addClass","forEach","add","removeClass","remove","toggleClass","toggle","closest","parentElement","s","array","push","Array","isArray","extend","i","length","arguments","deep","merge","obj","Object","prototype","prop","toString","call","extended","dismissible","u","classTrigger","classDismissible","runDismissible","event","target","settings","classHide","console","log","preventDefault","init","options","destroy","defaults","document","addEventListener","removeEventListener","showAll","selector","getDismissible","hideAll","items","querySelectorAll","dropdowns","classDropdown","classOnClick","classOnHover","triggers","triggersHover","runDropdownClick","is_active","trigger","is_trigger_child","classActive","showParents","parent","timer","clearTimeout","setTimeout","delay","offcanvas","classWrap","classAside","openOffCanvas","dataset","wrap","setAttribute","classDelay","closeOffCanvas","runOffcanvas","aside","tabs","getContent","nav","content","querySelector","classContent","id","runTabs","getAttribute"],"mappings":"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","file":"baseweb.min.js","sourcesContent":["var utility = (function () {\n\n  var api = {}\n\n  //\n  // Public Methods\n  //\n\n  /**\n   * Checks if an element has a class or not\n   * @param {Element} Element to check class(es) on\n   * @param {String} || {Array} Class(es) to check\n   * @returns {Boolean} Returns true if class exists on element, otherwise false\n   */\n  api.hasClass = function ( el, c ) {\n\n    c = api.toArray(c)\n\n    return c.every( function ( c ) {\n      return el.classList.contains(c)\n    })\n\n  } // End hasClass\n\n  /**\n   * Adds a class or classes to an element\n   * @param {Element} Element to add class(es) on\n   * @param {String} || {Array} Class(es) to add\n   */\n  api.addClass = function ( el, c ) {\n\n    c = api.toArray(c)\n\n    c.forEach( function ( c ) {\n      el.classList.add( c )\n    })\n\n  } // End addClass\n\n  /**\n   * Remove a class or classes from an element\n   * @param {Element} Element to remove class(es) from\n   * @param {String} || {Array} Class(es) to remove\n   */\n  api.removeClass = function ( el, c ) {\n\n    c = api.toArray(c)\n\n    c.forEach( function ( c ) {\n      el.classList.remove( c )\n    })\n\n  } // End removeClass\n\n  /**\n   * Toggle a class or classes on an element\n   * @param {Element} Element to toggle class(es) on\n   * @param {String} || {Array} Class(es) to toggle\n   */\n  api.toggleClass = function ( el, c ) {\n\n    c = api.toArray(c)\n\n    c.forEach( function ( c ) {\n      el.classList.toggle(c)\n    })\n\n  } // End toggleClass\n\n  /**\n   * Find the closest parent element based on class. This is different from the\n   * native .closest() method in that it doesn't check the current element.\n   * @param {Element} Element to start search on\n   * @param {String} || {Array} Class(es) to check for\n   * @return {Element} Closest parent element\n   */\n  api.closest = function ( el, c ) {\n    while ((el = el.parentElement) && !api.hasClass(el, c))\n    return el\n  } // End closest\n\n  /**\n   * Converts a string to an array. If an array is passed, it's returned as is.\n   * Anything else is returned as false.\n   * @param {String} || {Array} String to convert to an array\n   * @return {Array} Return the converted array\n   */\n  api.toArray = function( s ) {\n\n    var array = []\n\n    if (typeof s === 'string') {\n      array.push(s)\n    } else if (Array.isArray(s)) {\n      array = s\n    } else {\n      return false\n    }\n\n    return array\n\n  } // End toArray\n\n  /**\n   * Merge two or more objects. Returns a new object. Set the first argument\n   * to `true` for a deep or recursive merge.\n   * @param {Boolean} [Optional] If true, do a deep (or recursive) merge\n   * @param {Object} The objects to merge together each overriding the next\n   * @returns {Object} Merged values of defaults and options\n   */\n  api.extend = function () {\n\n    // Variables\n    var extended = {}\n    var deep = false\n    var i = 0\n    var length = arguments.length\n\n    // Check if a deep merge\n    if ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\n      deep = arguments[0]\n      i++\n    }\n\n    // Merge the object into the extended object\n    var merge = function ( obj ) {\n      for ( var prop in obj ) {\n        if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {\n          // If deep merge and property is an object, merge properties\n          if ( deep && Object.prototype.toString.call(obj[prop]) === '[object Object]' ) {\n            extended[prop] = extend( true, extended[prop], obj[prop] )\n          } else {\n            extended[prop] = obj[prop]\n          }\n        }\n      }\n    }\n\n    // Loop through each object and conduct a merge\n    for ( i = 0; i < length; i++ ) {\n      var obj = arguments[i]\n      merge(obj)\n    }\n\n    return extended\n\n  } // End extend\n\n  //\n  // Return Public APIs\n  //\n\n  return api\n\n})()\n","var dismissible = (function() {\n\n  var u = utility\n  var api = {}\n  var settings\n  var defaults = {\n    classTrigger : 'dismiss',\n    classDismissible : 'dismissible',\n    classHide : 'hide',\n  }\n\n  //\n  // Private Methods\n  //\n\n  var runDismissible = function () {\n\n    // Get the trigger\n    var trigger = event.target.closest('.' + settings.classTrigger)\n\n    // Exit if a trigger doesn't exist\n    if ( !trigger ) return\n\n    // Get the dismissible parent element\n    var dismissible = event.target.closest('.' + settings.classDismissible)\n\n    // Exit if a dismissible doesn't exist\n    if ( !dismissible ) return\n\n    // Add initial classes\n    if (dismissible) {\n      u.addClass(dismissible, settings.classHide)\n    } else {\n      console.log('Dismissible element was not found!')\n    }\n\n    // Prevent default behavior\n    event.preventDefault()\n\n  }\n\n  //\n  // Public Methods\n  //\n\n  api.init = function (options) {\n\n    // Destroy any previous initializations\n    api.destroy()\n\n    // Merge user options with the defaults\n    settings = u.extend( defaults, options || {} )\n\n    // Add event listener\n    document.addEventListener('click', runDismissible, false)\n\n  }\n\n  api.destroy = function () {\n\n    // Remove event listener\n    document.removeEventListener('click', runDismissible, false)\n\n    // Reset settings\n    settings = null\n\n  }\n\n  api.showAll = function (selector) {\n\n    // Get dismissible items\n    var dismissible = api.getDismissible(selector)\n\n    // Loop through and remove active class from dismissible items\n    dismissible.forEach(function (el) {\n      u.removeClass(el, settings.classHide)\n    })\n\n  }\n\n  api.hideAll = function (selector) {\n\n    // Get dismissible items\n    var dismissible = api.getDismissible(selector)\n\n    // Loop through and remove active class from dismissible items\n    dismissible.forEach(function (el) {\n      u.addClass(el, settings.classHide)\n    })\n\n  }\n\n  api.getDismissible = function (selector) {\n\n    // Initialize dismissible array\n    var dismissible = []\n\n    // Check if a selector was passed\n    if (selector) {\n      // Get selector items\n      var items = document.querySelectorAll(selector)\n      // Loop through selector items\n      items.forEach(function (el) {\n        // Get dismissible items\n        var items = el.querySelectorAll('.' + settings.classDismissible)\n        // Loop through dismissible items\n        items.forEach(function (el) {\n          // Save item to our array\n          dismissible.push(el)\n        })\n      })\n    } else {\n      // Search dismissible items on documents\n      dismissible = document.querySelectorAll('.' + settings.classDismissible)\n    }\n\n    // Return dismissible\n    return dismissible\n\n  }\n\n  //\n  // Return Public APIs\n  //\n\n  return api\n\n})()\n","var dropdowns = (function() {\n\n  var u = utility\n  var api = {}\n  var settings\n  var defaults = {\n    classTrigger: 'dropdown-trigger',\n    classDropdown: 'dropdown',\n    classOnClick: 'on-click',\n    classOnHover: 'on-hover',\n    classActive: 'active',\n    delay: 500,\n  }\n\n  var triggers = []\n  var triggersHover = []\n\n  //\n  // Private Methods\n  //\n\n  var runDropdownClick = function () {\n\n    // Get the trigger\n    var trigger = event.target.closest('.' + settings.classTrigger + '.' + settings.classOnClick)\n\n    // Check if parent element is a trigger\n    var is_trigger_child = u.hasClass(event.target.parentElement, [settings.classTrigger, settings.classOnClick])\n\n    // Initiate is active\n    var is_active\n\n    // Save the state of the current trigger\n    if ( trigger ) {\n      is_active = u.hasClass(trigger, settings.classActive)\n    }\n\n    // Hide all dropdowns that are click activated\n    hideAll()\n\n    // Exit if a trigger doesn't exist\n    if ( !trigger ) return\n\n    // Keep the parent dropdowns active\n    showParents(event.target)\n\n    // Add active class if item is not active\n    if (!is_active) {\n      u.addClass(trigger, settings.classActive)\n    } else {\n      // Remove active class if child of a trigger\n      if (is_trigger_child) {\n        u.removeClass(trigger, settings.classActive)\n      }\n    }\n\n    // Prevent default behavior if trigger is clicked\n    if (is_trigger_child) {\n      event.preventDefault()\n    }\n\n  }\n\n  // Hide all dropdowns that are click activated\n  var hideAll = function () {\n\n    triggers.forEach( function (el) {\n      u.removeClass(el, settings.classActive)\n    })\n\n  }\n\n  // Keep the parent dropdowns active\n  var showParents = function (el) {\n\n    var parent = u.closest(el, [settings.classTrigger, settings.classOnClick])\n\n    while (parent) {\n      u.addClass(parent, settings.classActive)\n      parent = u.closest(parent, settings.classTrigger)\n    }\n\n  }\n\n  //\n  // Public Methods\n  //\n\n  api.init = function (options) {\n\n    // Destroy any previous initializations\n    api.destroy()\n\n    // Merge user options with the defaults\n    settings = u.extend( defaults, options || {} )\n\n    // Get triggers and dropdowns\n    triggers = document.querySelectorAll('.' + settings.classTrigger)\n    triggersHover = document.querySelectorAll('.' + settings.classTrigger + '.' + settings.classOnHover)\n\n    // Add event listener to document\n    document.addEventListener('click', runDropdownClick, false)\n\n    // Loop through our hover triggers\n    triggersHover.forEach(function (el) {\n      // Init timer var\n      var timer\n\n      // Add on mouse over event listener to trigger\n      el.addEventListener('mouseover', function () {\n        // Get the trigger\n        var trigger = event.target.closest('.' + settings.classTrigger + '.' + settings.classOnHover)\n        // Clear our set timeout if set\n        clearTimeout(timer)\n        // Add the active class\n        u.addClass(trigger, settings.classActive)\n      }, false)\n\n      // Add on mouse leave event listener to trigger\n      el.addEventListener('mouseleave', function () {\n        var trigger = event.target.closest('.' + settings.classTrigger + '.' + settings.classOnHover)\n        // Set a delay before we remove active class\n        timer = setTimeout(function () {\n          // Remove the active class\n          u.removeClass(trigger, settings.classActive)\n        }, settings.delay)\n      }, false)\n\n    }) // End of hover triggers loop\n\n  }\n\n  api.destroy = function () {\n\n    // Remove listeners\n    document.removeEventListener('click', runDropdownClick, false)\n\n    // Reset settings\n    settings = null\n    triggers = []\n    triggersHover = []\n\n  }\n\n  //\n  // Return Public APIs\n  //\n\n  return api\n\n})()\n","var offcanvas = (function() {\n\n  var u = utility\n  var api = {}\n  var settings\n  var defaults = {\n    classTrigger : 'oc-trigger',\n    classWrap : 'oc-wrap',\n    classAside : 'oc-aside',\n    classActive : 'oc-active',\n    classDelay : 'oc-delay',\n    timer : 500,\n  }\n\n  //\n  // Private Methods\n  //\n\n  var openOffCanvas = function() {\n\n    // Get the trigger\n    var trigger = event.target.closest('.' + settings.classTrigger)\n    // Get the target data\n    var target = trigger.dataset.target\n    // Check if a target exists\n    if (target) {\n      // Get the wrap\n      var wrap = event.target.closest('.' + settings.classWrap)\n      // Check if a wrap exists\n      if (wrap) {\n        // Reset the wrap class\n        wrap.setAttribute('class', settings.classWrap)\n        // Add the target class\n        u.addClass(wrap, target)\n        // Add active and delay classes after a slight delay\n        setTimeout( function() {\n          u.addClass(wrap, [settings.classActive, settings.classDelay])\n        }, 25 )\n      }\n    } else {\n      // If there's not target data, it's a close button\n      closeOffCanvas()\n    }\n\n  }\n\n  var closeOffCanvas = function () {\n\n    // Get the wrap\n    var wrap = event.target.closest('.' + settings.classWrap)\n    // Check if a wrap exists\n    if (wrap) {\n      // Remove active class\n      u.removeClass(wrap, settings.classActive)\n      // Remove delay class after the set transition duration\n      setTimeout( function () {\n        u.removeClass(wrap, settings.classDelay)\n      }, settings.timer )\n    }\n\n  }\n\n  var runOffcanvas = function () {\n\n    // Get the trigger\n    var wrap = event.target.closest('.' + settings.classWrap)\n\n    // Exit if a wrap doesn't exist\n    if ( !wrap ) return\n\n    // Get the aside and trigger\n    var trigger = event.target.closest('.' + settings.classTrigger)\n    var aside = event.target.closest('.' + settings.classAside)\n\n    // If a trigger or aside doesn't exists, close our off-canvas\n    if ( !trigger && !aside ) closeOffCanvas()\n\n    // If a trigger was clicked\n    if ( trigger ) {\n      // Get the target\n      openOffCanvas()\n      // Prevent default behavior\n      event.preventDefault()\n    }\n\n  }\n\n  //\n  // Public Methods\n  //\n\n  api.init = function (options) {\n\n    // Destroy any previous initializations\n    api.destroy()\n\n    // Merge user options with the defaults\n    settings = u.extend( defaults, options || {} )\n\n    // Add event listener to trigger\n    document.addEventListener('click', runOffcanvas, false)\n\n  }\n\n  api.destroy = function () {\n\n    // Remove listener\n    document.removeEventListener('click', runOffcanvas, false)\n\n    // Reset settings\n    settings = null\n\n  }\n\n  //\n  // Return Public APIs\n  //\n\n  return api\n\n})()\n","var tabs = (function() {\n\n  var u = utility\n  var api = {}\n  var settings\n  var defaults = {\n    classTrigger : 'tabs-nav',\n    classWrap : 'tabs',\n    classContent : 'tabs-content',\n    classActive : 'active',\n  }\n\n  //\n  // Private Methods\n  //\n\n  var getContent = function (wrap, nav) {\n\n    // Init content variable\n    var content\n\n    // Check if a wrap exists\n    if (wrap) {\n      // Query the wrap for the content\n      content = wrap.querySelector('.' + settings.classContent)\n    } else {\n      // Set the content ID\n      var id = nav.dataset.content\n      // Check if a content ID exists\n      if (id) {\n        // Query the document for the content\n        content = document.querySelector('#' + id)\n      } else {\n        // Set to null if no content is found\n        content = null\n      }\n    }\n\n    // Return the content variable\n    return content\n\n  }\n\n  var runTabs = function () {\n\n    // Get the trigger\n    var trigger = event.target.closest('.' + settings.classTrigger)\n\n    // Exit if a trigger doesn't exist\n    if ( !trigger ) return\n\n    // Is the clicked item already active?\n    var is_active = u.hasClass(event.target.parentElement, settings.classActive)\n\n    // If it's not active\n    if (!is_active) {\n\n      // Tabs wrap nav and content\n      var wrap = event.target.closest('.' + settings.classWrap)\n      var content = getContent(wrap, trigger)\n\n      // Get target\n      var target = event.target.getAttribute('href')\n\n      // Remove active classes from nav and content\n      u.removeClass(trigger.querySelector('.' + settings.classActive), settings.classActive)\n      u.removeClass(content.querySelector('.' + settings.classActive), settings.classActive)\n\n      // Set tab nav and content item to active\n      u.addClass(event.target.parentElement, settings.classActive)\n      u.addClass(content.querySelector(target), settings.classActive)\n\n    } // End if is_active\n\n    // Prevent default behavior\n    event.preventDefault()\n\n  }\n\n  //\n  // Public Methods\n  //\n\n  api.init = function (options) {\n\n    // Destroy any previous initializations\n    api.destroy()\n\n    // Merge user options with the defaults\n    settings = u.extend( defaults, options || {} )\n\n    // Add event listener\n    document.addEventListener('click', runTabs, false)\n\n  }\n\n  api.destroy = function () {\n\n    // Remove event listener\n    document.removeEventListener('click', runTabs, false)\n\n    // Reset settings\n    settings = null\n\n  }\n\n  //\n  // Return Public APIs\n  //\n\n  return api\n\n})()\n"]}