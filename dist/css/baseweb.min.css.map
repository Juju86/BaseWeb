{"version":3,"sources":["core/_colophon.scss","elements/_base.scss","core/_settings.scss","core/_palette.scss","core/_grid.scss","core/_media.scss","core/_mixins.scss","baseweb.css","elements/_typography.scss","core/_functions.scss","elements/_lists.scss","elements/_blockquotes.scss","elements/_code.scss","elements/_tables.scss","elements/_images.scss","elements/_rules.scss","elements/_forms.scss","elements/_buttons.scss","elements/_icons.scss","elements/_videos.scss","elements/_close.scss","blocks/_button-groups.scss","blocks/_notices.scss","blocks/_breadcrumbs.scss","blocks/_dropdowns.scss","blocks/_tabs.scss","blocks/_offcanvas.scss","blocks/_tooltips.scss","blocks/_badges.scss"],"names":[],"mappings":"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brXgB,CasXjB,AAIH,gBAEI,oBbtXgB,CauXjB,AAHH,kDAOI,ab3XgB,Ca4XjB,AARH,iBAUI,wBbpYgB,CaqYjB,AAOH,aAEI,oBb1nBa,Ca2nBd,AAEH,yCAII,ab7nBa,Ca8nBd,AAEH,cAEI,wBb3oBa,Ca4oBd,AAIH,cAEI,oBb7oBa,Ca8oBd,AAHH,4CAOI,ab9oBa,Ca+oBd,AARH,eAUI,wBb1pBa,Ca2pBd,AAOH,cAEI,oBb3jBc,Ca4jBf,AAEH,4CAII,ab9jBc,Ca+jBf,AAEH,eAEI,wBb5kBc,Ca6kBf,AAIH,eAEI,oBb9kBc,Ca+kBf,AAHH,+CAOI,ab/kBc,CaglBf,AARH,gBAUI,wBb3lBc,Ca4lBf,ACliBH,QX+EQ,iCAAA,AWxNuB,gCADF,AXyNrB,0CWvN+B,AXuN/B,mBAAA,AHiGU,2Bc7Tc,AX4NxB,6BW3N0B,AX2N1B,kBJtOW,AIsOX,cW/FN,AduMgB,ecvMD,AX+FT,qBWtOkB,AXsOlB,oBWlOiB,AXkOjB,cG/GwB,AH+GxB,oBAAA,AW/NiB,mBX+NjB,AG/FyB,SQtInB,AXqON,sBG/FyB,AH+FzB,qBW9NkB,AX8NlB,yBAAA,AWjN2B,wBARN,AXyNrB,kCAAA,AWvN+B,kBAZf,CAsJvB,AXuFO,cAIM,yBAAA,AW3NsB,adqTlB,CGvFT,AAPD,4BAIM,gCAAA,AW1NsB,mBAFQ,AX4N9B,uBW1NsB,CX6N3B,AAPD,eAIM,8BWnNmB,AXmNnB,qBWnNmB,CXsNxB,AAsDH,6BAvEE,mBAAA,AHpIU,UA+PN,CGlDL,AA/DC,yCAIM,mBAAA,AHhJI,UA6PN,CG1GH,AAsDH,+BAvEE,mBAAA,AHqGU,UAsBN,CGlDL,AA/DC,2CAIM,mBAAA,AHyFI,UAoBN,CG1GH,AAsDH,8BAvEE,mBAAA,AHpDW,UA+KP,CGlDL,AA/DC,0CAIM,mBAAA,AHhEK,UA6KP,CG1GH,AAsDH,+BAvEE,mBAAA,AHQY,aAgGF,CG/BX,AA/DC,2CAIM,mBAAA,AHLM,aA+FF,CGvFT,AAsDH,2BAvEE,mBAAA,AHxOS,UAmWL,CGlDL,AA/DC,uCAIM,mBAAA,AHpPG,UAiWL,CG1GH,AAsDH,cAvEE,+BAAA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","file":"baseweb.min.css","sourcesContent":["/*!\n * BaseWeb\n * A fresh front-end development framework\n * @version 2.6.4\n *\n * @author Sebastian Nitu\n * @url https://github.com/sebnitu/BaseWeb\n * @url http://sebnitu.com\n *\n * Copyright (c) 2017 Sebastian Nitu (MIT Licensed)\n */\n","// Set file variable\n$filename: 'scss/elements/_base.scss';\n\n/*==============================================================================\n  @Base Styles - #{$filename}\n==============================================================================*/\n\n// Remove margins and padding from HTML and Body elements.\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\n\n// Prevents automatic text resizing on mobile devices.\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\n\n// Make HTML5 elements act like blocks.\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nhtml {\n  // Set default box layout model to $box-sizing (border-box is default).\n  // Source:\n  //  - http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n  //  - https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n  box-sizing: $box-sizing;\n}\n\n// Apply a natural box layout model to all elements, while still allowing components to change.\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n// Add custom text highlight color if a color is set in $bg-selection.\n@if $bg-selection {\n  ::selection {\n    background: $bg-selection;\n    text-shadow: none;\n  }\n}\n\n// Check if we should output grid system\n@if map-get($grid, 'output') {\n\n/*==============================================================================\n  @Grid System - #{$filename}\n==============================================================================*/\n\n// Check if we should output mobile grid system\n@if map-get($grid, 'output-mobile') {\n  @include build-grid-system('mobile');\n}\n\n@include media-min('medium') {\n  @include build-grid-system();\n}\n\n} // End @if output\n\n/*==============================================================================\n  @Utility Classes - #{$filename}\n==============================================================================*/\n\n// Outputs our cleafix class if one is set in $class-clearfix.\n@if $class-clearfix {\n  .#{$class-clearfix} {\n    @include add-clearfix();\n  }\n}\n\n// Outputs our remove cleafix class if one is set in $class-remove-clearfix.\n@if $class-remove-clearfix {\n  .#{$class-remove-clearfix} {\n    @include remove-clearfix();\n  }\n}\n\n// Outputs our float-left class if one is set in $class-float-left.\n@if $class-float-left {\n  .#{$class-float-left} {\n    float: left;\n  }\n}\n\n// Outputs our float-right class if one is set in $class-float-right.\n@if $class-float-right {\n  .#{$class-float-right} {\n    float: right;\n  }\n}\n\n// Show and Hide classes\n@if ($class-show) {\n  .#{$class-show} {\n    display: block !important;\n  }\n  .#{$class-show}-inline-block {\n    display: inline-block !important;\n  }\n  .#{$class-show}-flex {\n    display: flex !important;\n  }\n  .#{$class-show}-inline-flex {\n    display: inline-flex !important;\n  }\n  .#{$class-show}-inherit {\n    display: inherit !important;\n  }\n}\n\n@if ($class-hide) {\n  .#{$class-hide} {\n    display: none !important;\n  }\n}\n\n// Responsive Show and Hide Classes\n@each $name, $value in $breakpoints {\n  @if $class-show-hide-min or $class-show-hide-max {\n\n    @include media-min($name) {\n      @if ($class-show-hide-min) {\n        .#{$class-show}-#{$name}-#{$class-show-hide-min} {\n          display: none !important;\n        }\n      }\n      @if ($class-show-hide-max) {\n        .#{$class-hide}-#{$name}-#{$class-show-hide-max} {\n          display: none !important;\n        }\n      }\n    }\n    @include media-max($name) {\n      @if ($class-show-hide-min) {\n        .#{$class-hide}-#{$name}-#{$class-show-hide-min} {\n          display: none !important;\n        }\n      }\n      @if ($class-show-hide-max) {\n        .#{$class-show}-#{$name}-#{$class-show-hide-max} {\n          display: none !important;\n        }\n      }\n    }\n\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Settings\n////////////////////////////////////////////////////////////////////////////////\n\n// Property defaults\n// @desc The default values used for various CSS properties.\n// @type property values\n\n$bg-color: $gray-100 !default;\n$bg-selection: rgba($green, 0.25) !default;\n\n$border-color: rgba($black, 0.10) !default;\n$border-radius: 3px !default;\n\n$box-sizing: border-box !default;\n$box-shadow: 0 1px 3px rgba($black, 0.1) !default;\n\n$transition-property: all !default;\n$transition-duration: 0.25s !default;\n$transition-timing-function: linear !default;\n$transition-delay: 0.25s !default;\n$transition: $transition-property $transition-duration $transition-timing-function !default;\n\n// Utility classes\n// @desc Used to output various global utility classes.\n// @type string or null\n\n$class-clearfix: 'clearfix' !default;\n$class-remove-clearfix: 'remove-clearfix' !default;\n\n$class-float-left: 'float-left' !default;\n$class-float-right: 'float-right' !default;\n\n$class-show: 'show' !default;\n$class-hide: 'hide' !default;\n$class-show-hide-min: 'down' !default;\n$class-show-hide-max: 'up' !default;\n\n// Typography settings\n// @desc Default values for typography properties.\n// @type property values\n\n$font-family-sans: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Helvetica Neue\", Arial, sans-serif !default;\n$font-family-serif: georgia, \"Times New Roman\", times, serif !default;\n$font-family-mono: Menlo, Monaco, Consolas, \"Courier New\", monospace !default;\n\n$base-font-family: $font-family-sans !default;\n$base-font-size: 16px !default;\n$base-line-height: 1.5em !default;\n$base-font-weight: font-weight('normal') !default;\n\n$color: $gray-800 !default;\n$color-light: $gray !default;\n$color-dark: $gray-900 !default;\n\n// Text output options\n// @desc Whether or not to output default text element styles and/or modifiers.\n// @type boolean\n\n$text-elements: true !default;\n$text-modifiers: true !default;\n\n// Anchors Map\n// @desc Default styles for anchor elements.\n// @type map\n\n$anchors: (\n  'output' : true,\n  'color' : $blue,\n  'border-bottom' : 1px solid rgba($black, 0.1),\n  'text-decoration' : none,\n  'hover' : (\n    'color' : $blue-700,\n    'border-color' : inherit,\n  ),\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'anchors') {\n    $anchors: map-extend($anchors, map-get($override, 'anchors'), true);\n  }\n}\n\n// Anchors Shorthands\n$anchor-color: map-get($anchors, 'color') !default;\n$anchor-hover-color: map-fetch($anchors, 'hover', 'color') !default;\n\n// Headings Map\n// @desc Default styles for heading elements.\n// @type map\n\n$headings: (\n  'output' : true,\n  'margin' : 1rem 0,\n  'font-family' : inherit,\n  'line-height' : 1.25em,\n  'font-weight' : font-weight('semi-bold'),\n  'color' : $color-dark,\n  'anchors' : (\n    'output' : true,\n    'color' : $color-dark,\n    'border' : none,\n    'hover' : (\n      'color' : $blue,\n    ),\n  ),\n  'scale' : (\n    'h1' : 2.5em,\n    'h2' : 2em,\n    'h3' : 1.75em,\n    'h4' : 1.5em,\n    'h5' : 1.25em,\n    'h6' : 1em,\n  ),\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'headings') {\n    $headings: map-extend($headings, map-get($override, 'headings'), true);\n  }\n}\n\n// Headings Shorthands\n$heading-color: map-get($headings, 'color') !default;\n$heading-anchor-color: map-fetch($headings, 'anchors', 'color') !default;\n$heading-anchor-hover-color: map-fetch($headings, 'anchors', 'hover', 'color') !default;\n\n// Add Styles Map\n// @desc Default settings used in the add-styles mixin.\n// @type map\n\n$add-styles: (\n  'output-base' : true,\n  'output-pseudo' : true,\n  'properties' : (\n    'cursor',\n    'display',\n    'float',\n    'width',\n    'height',\n    'margin',\n    'margin-top',\n    'margin-left',\n    'margin-right',\n    'margin-bottom',\n    'padding',\n    'padding-top',\n    'padding-left',\n    'padding-right',\n    'padding-bottom',\n    'vertical-align',\n    'content',\n    'font-family',\n    'font-size',\n    'line-height',\n    'font-weight',\n    'text-align',\n    'text-indent',\n    'white-space',\n    'letter-spacing',\n    'overflow',\n    'color',\n    'text-shadow',\n    'text-decoration',\n    'background',\n    'background-color',\n    'background-clip',\n    'box-shadow',\n    'border',\n    'border-top',\n    'border-left',\n    'border-right',\n    'border-bottom',\n    'border-color',\n    'border-radius',\n    'transition',\n    'transition-property',\n    'transition-duration',\n    'transition-timing-function',\n    'transition-duration',\n  ),\n  'pseudo-classes' : (\n    'hover',\n    'focus',\n    'active',\n    'visited',\n  ),\n) !default;\n","////////////////////////////////////////////////////////////////////////////////\n// @Colors\n////////////////////////////////////////////////////////////////////////////////\n\n// Red\n$red-50:  #FFEBEE !default;\n$red-100: #FFCDD2 !default;\n$red-200: #EF9A9A !default;\n$red-300: #E57373 !default;\n$red-400: #EF5350 !default;\n$red-500: #F44336 !default;\n$red-600: #E53935 !default;\n$red-700: #D32F2F !default;\n$red-800: #C62828 !default;\n$red-900: #B71C1C !default;\n$red: $red-500 !default;\n\n// Red Accent\n$red-a100: #FF8A80 !default;\n$red-a200: #FF5252 !default;\n$red-a400: #FF1744 !default;\n$red-a700: #D50000 !default;\n$red-a: $red-a200 !default;\n\n// Pink\n$pink-50:  #FCE4EC !default;\n$pink-100: #F8BBD0 !default;\n$pink-200: #F48FB1 !default;\n$pink-300: #F06292 !default;\n$pink-400: #EC407A !default;\n$pink-500: #E91E63 !default;\n$pink-600: #D81B60 !default;\n$pink-700: #C2185B !default;\n$pink-800: #AD1457 !default;\n$pink-900: #880E4F !default;\n$pink: $pink-500 !default;\n\n// Pink Accent\n$pink-a100: #FF80AB !default;\n$pink-a200: #FF4081 !default;\n$pink-a400: #F50057 !default;\n$pink-a700: #C51162 !default;\n$pink-a: $pink-a200 !default;\n\n// Purple\n$purple-50:  #F3E5F5 !default;\n$purple-100: #E1BEE7 !default;\n$purple-200: #CE93D8 !default;\n$purple-300: #BA68C8 !default;\n$purple-400: #AB47BC !default;\n$purple-500: #9C27B0 !default;\n$purple-600: #8E24AA !default;\n$purple-700: #7B1FA2 !default;\n$purple-800: #6A1B9A !default;\n$purple-900: #4A148C !default;\n$purple: $purple-500 !default;\n\n// Purple Accent\n$purple-a100: #EA80FC !default;\n$purple-a200: #E040FB !default;\n$purple-a400: #D500F9 !default;\n$purple-a700: #AA00FF !default;\n$purple-a: $purple-a200 !default;\n\n// Deep Purple\n$deep-purple-50:  #EDE7F6 !default;\n$deep-purple-100: #D1C4E9 !default;\n$deep-purple-200: #B39DDB !default;\n$deep-purple-300: #9575CD !default;\n$deep-purple-400: #7E57C2 !default;\n$deep-purple-500: #673AB7 !default;\n$deep-purple-600: #5E35B1 !default;\n$deep-purple-700: #512DA8 !default;\n$deep-purple-800: #4527A0 !default;\n$deep-purple-900: #311B92 !default;\n$deep-purple: $deep-purple-500 !default;\n\n// Deep Blue Accent\n$deep-purple-a100: #B388FF !default;\n$deep-purple-a200: #7C4DFF !default;\n$deep-purple-a400: #651FFF !default;\n$deep-purple-a700: #6200EA !default;\n$deep-purple-a: $deep-purple-a200 !default;\n\n// Indigo\n$indigo-50:  #E8EAF6 !default;\n$indigo-100: #C5CAE9 !default;\n$indigo-200: #9FA8DA !default;\n$indigo-300: #7986CB !default;\n$indigo-400: #5C6BC0 !default;\n$indigo-500: #3F51B5 !default;\n$indigo-600: #3949AB !default;\n$indigo-700: #303F9F !default;\n$indigo-800: #283593 !default;\n$indigo-900: #1A237E !default;\n$indigo: $indigo-500 !default;\n\n// Indigo Accent\n$indigo-a100: #8C9EFF !default;\n$indigo-a200: #536DFE !default;\n$indigo-a400: #3D5AFE !default;\n$indigo-a700: #304FFE !default;\n$indigo-a: $indigo-a200 !default;\n\n// Blue\n$blue-50:  #E3F2FD !default;\n$blue-100: #BBDEFB !default;\n$blue-200: #90CAF9 !default;\n$blue-300: #64B5F6 !default;\n$blue-400: #42A5F5 !default;\n$blue-500: #2196F3 !default;\n$blue-600: #1E88E5 !default;\n$blue-700: #1976D2 !default;\n$blue-800: #1565C0 !default;\n$blue-900: #0D47A1 !default;\n$blue: $blue-500 !default;\n\n// Blue Accent\n$blue-a100: #82B1FF !default;\n$blue-a200: #448AFF !default;\n$blue-a400: #2979FF !default;\n$blue-a700: #2962FF !default;\n$blue-a: $blue-a200 !default;\n\n// Light Blue\n$light-blue-50:  #E1F5FE !default;\n$light-blue-100: #B3E5FC !default;\n$light-blue-200: #81D4FA !default;\n$light-blue-300: #4FC3F7 !default;\n$light-blue-400: #29B6F6 !default;\n$light-blue-500: #03A9F4 !default;\n$light-blue-600: #039BE5 !default;\n$light-blue-700: #0288D1 !default;\n$light-blue-800: #0277BD !default;\n$light-blue-900: #01579B !default;\n$light-blue: $light-blue-500 !default;\n\n// Light Blue Accent\n$light-blue-a100: #80D8FF !default;\n$light-blue-a200: #40C4FF !default;\n$light-blue-a400: #00B0FF !default;\n$light-blue-a700: #0091EA !default;\n$light-blue-a: $light-blue-a200 !default;\n\n// Cyan\n$cyan-50:  #E0F7FA !default;\n$cyan-100: #B2EBF2 !default;\n$cyan-200: #80DEEA !default;\n$cyan-300: #4DD0E1 !default;\n$cyan-400: #26C6DA !default;\n$cyan-500: #00BCD4 !default;\n$cyan-600: #00ACC1 !default;\n$cyan-700: #0097A7 !default;\n$cyan-800: #00838F !default;\n$cyan-900: #006064 !default;\n$cyan: $cyan-500 !default;\n\n// Cyan Accent\n$cyan-a100: #84FFFF !default;\n$cyan-a200: #18FFFF !default;\n$cyan-a400: #00E5FF !default;\n$cyan-a700: #00B8D4 !default;\n$cyan-a: $cyan-a200 !default;\n\n// Teal\n$teal-50:  #E0F2F1 !default;\n$teal-100: #B2DFDB !default;\n$teal-200: #80CBC4 !default;\n$teal-300: #4DB6AC !default;\n$teal-400: #26A69A !default;\n$teal-500: #009688 !default;\n$teal-600: #00897B !default;\n$teal-700: #00796B !default;\n$teal-800: #00695C !default;\n$teal-900: #004D40 !default;\n$teal: $teal-500 !default;\n\n// Teal Accent\n$teal-a100: #A7FFEB !default;\n$teal-a200: #64FFDA !default;\n$teal-a400: #1DE9B6 !default;\n$teal-a700: #00BFA5 !default;\n$teal-a: $teal-a200 !default;\n\n// Green\n$green-50:  #E8F5E9 !default;\n$green-100: #C8E6C9 !default;\n$green-200: #A5D6A7 !default;\n$green-300: #81C784 !default;\n$green-400: #66BB6A !default;\n$green-500: #4CAF50 !default;\n$green-600: #43A047 !default;\n$green-700: #388E3C !default;\n$green-800: #2E7D32 !default;\n$green-900: #1B5E20 !default;\n$green: $green-500 !default;\n\n// Green Accent\n$green-a100: #B9F6CA !default;\n$green-a200: #69F0AE !default;\n$green-a400: #00E676 !default;\n$green-a700: #00C853 !default;\n$green-a: $green-a200 !default;\n\n// Light Green\n$light-green-50:  #F1F8E9 !default;\n$light-green-100: #DCEDC8 !default;\n$light-green-200: #C5E1A5 !default;\n$light-green-300: #AED581 !default;\n$light-green-400: #9CCC65 !default;\n$light-green-500: #8BC34A !default;\n$light-green-600: #7CB342 !default;\n$light-green-700: #689F38 !default;\n$light-green-800: #558B2F !default;\n$light-green-900: #33691E !default;\n$light-green: $light-green-500 !default;\n\n// Light Green Accent\n$light-green-a100: #CCFF90 !default;\n$light-green-a200: #B2FF59 !default;\n$light-green-a400: #76FF03 !default;\n$light-green-a700: #64DD17 !default;\n$light-green-a: $light-green-a200 !default;\n\n// Lime\n$lime-50:  #F9FBE7 !default;\n$lime-100: #F0F4C3 !default;\n$lime-200: #E6EE9C !default;\n$lime-300: #DCE775 !default;\n$lime-400: #D4E157 !default;\n$lime-500: #CDDC39 !default;\n$lime-600: #C0CA33 !default;\n$lime-700: #AFB42B !default;\n$lime-800: #9E9D24 !default;\n$lime-900: #827717 !default;\n$lime: $lime-500 !default;\n\n// Lime Accent\n$lime-a100: #F4FF81 !default;\n$lime-a200: #EEFF41 !default;\n$lime-a400: #C6FF00 !default;\n$lime-a700: #AEEA00 !default;\n$lime-a: $lime-a200 !default;\n\n// Yellow\n$yellow-50:  #FFFDE7 !default;\n$yellow-100: #FFF9C4 !default;\n$yellow-200: #FFF59D !default;\n$yellow-300: #FFF176 !default;\n$yellow-400: #FFEE58 !default;\n$yellow-500: #FFEB3B !default;\n$yellow-600: #FDD835 !default;\n$yellow-700: #FBC02D !default;\n$yellow-800: #F9A825 !default;\n$yellow-900: #F57F17 !default;\n$yellow: $yellow-500 !default;\n\n// Yellow Accent\n$yellow-a100: #FFFF8D !default;\n$yellow-a200: #FFFF00 !default;\n$yellow-a400: #FFEA00 !default;\n$yellow-a700: #FFD600 !default;\n$yellow-a: $yellow-a200 !default;\n\n// Amber\n$amber-50:  #FFF8E1 !default;\n$amber-100: #FFECB3 !default;\n$amber-200: #FFE082 !default;\n$amber-300: #FFD54F !default;\n$amber-400: #FFCA28 !default;\n$amber-500: #FFC107 !default;\n$amber-600: #FFB300 !default;\n$amber-700: #FFA000 !default;\n$amber-800: #FF8F00 !default;\n$amber-900: #FF6F00 !default;\n$amber: $amber-500 !default;\n\n// Amber Accent\n$amber-a100: #FFE57F !default;\n$amber-a200: #FFD740 !default;\n$amber-a400: #FFC400 !default;\n$amber-a700: #FFAB00 !default;\n$amber-a: $amber-a200 !default;\n\n// Orange\n$orange-50:  #FFF3E0 !default;\n$orange-100: #FFE0B2 !default;\n$orange-200: #FFCC80 !default;\n$orange-300: #FFB74D !default;\n$orange-400: #FFA726 !default;\n$orange-500: #FF9800 !default;\n$orange-600: #FB8C00 !default;\n$orange-700: #F57C00 !default;\n$orange-800: #EF6C00 !default;\n$orange-900: #E65100 !default;\n$orange: $orange-500 !default;\n\n// Orange Accent\n$orange-a100: #FFD180 !default;\n$orange-a200: #FFAB40 !default;\n$orange-a400: #FF9100 !default;\n$orange-a700: #FF6D00 !default;\n$orange-a: $orange-a200 !default;\n\n// Deep Orange\n$deep-orange-50:  #FBE9E7 !default;\n$deep-orange-100: #FFCCBC !default;\n$deep-orange-200: #FFAB91 !default;\n$deep-orange-300: #FF8A65 !default;\n$deep-orange-400: #FF7043 !default;\n$deep-orange-500: #FF5722 !default;\n$deep-orange-600: #F4511E !default;\n$deep-orange-700: #E64A19 !default;\n$deep-orange-800: #D84315 !default;\n$deep-orange-900: #BF360C !default;\n$deep-orange: $deep-orange-500 !default;\n\n// Deep Orange Accent\n$deep-orange-a100: #FF9E80 !default;\n$deep-orange-a200: #FF6E40 !default;\n$deep-orange-a400: #FF3D00 !default;\n$deep-orange-a700: #DD2C00 !default;\n$deep-orange-a: $deep-orange-a200 !default;\n\n// Brown\n$brown-50:  #EFEBE9 !default;\n$brown-100: #D7CCC8 !default;\n$brown-200: #BCAAA4 !default;\n$brown-300: #A1887F !default;\n$brown-400: #8D6E63 !default;\n$brown-500: #795548 !default;\n$brown-600: #6D4C41 !default;\n$brown-700: #5D4037 !default;\n$brown-800: #4E342E !default;\n$brown-900: #3E2723 !default;\n$brown: $brown-500 !default;\n\n// Gray\n$gray-50:  #FAFAFA !default;\n$gray-100: #F5F5F5 !default;\n$gray-200: #EEEEEE !default;\n$gray-300: #E0E0E0 !default;\n$gray-400: #BDBDBD !default;\n$gray-500: #9E9E9E !default;\n$gray-600: #757575 !default;\n$gray-700: #616161 !default;\n$gray-800: #424242 !default;\n$gray-900: #212121 !default;\n$gray: $gray-500 !default;\n\n// Blue Gray\n$blue-gray-50:  #ECEFF1 !default;\n$blue-gray-100: #CFD8DC !default;\n$blue-gray-200: #B0BEC5 !default;\n$blue-gray-300: #90A4AE !default;\n$blue-gray-400: #78909C !default;\n$blue-gray-500: #607D8B !default;\n$blue-gray-600: #546E7A !default;\n$blue-gray-700: #455A64 !default;\n$blue-gray-800: #37474F !default;\n$blue-gray-900: #263238 !default;\n$blue-gray: $blue-gray-500 !default;\n\n// Black & White\n$black: #000 !default;\n$white: #fff !default;\n\n////////////////////////////////////////////////////////////////////////////////\n// @Social Colors Map\n////////////////////////////////////////////////////////////////////////////////\n\n$social: (\n  'twitter'     : #00aced,\n  'facebook'    : #3b5998,\n  'google'      : #dd4b39,\n  'googleplus'  : #dd4b39,\n  'pinterest'   : #cb2027,\n  'linkedin'    : #007bb6,\n  'youtube'     : #bb0000,\n  'vimeo'       : #1ab7ea,\n  'tumblr'      : #32506d,\n  'instagram'   : #bc2a8d,\n  'flickr'      : #ff0084,\n  'dribbble'    : #ea4c89,\n  'quora'       : #a82400,\n  'foursquare'  : #0072b1,\n  'forrst'      : #5B9A68,\n  'vk'          : #45668e,\n  'wordpress'   : #21759b,\n  'stumbleupon' : #EB4823,\n  'yahoo'       : #7B0099,\n  'blogger'     : #fb8f3d,\n  'soundcloud'  : #ff3a00,\n) !default;\n","// Set file variable\n$filename: 'scss/core/_grid.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Grid Map\n////////////////////////////////////////////////////////////////////////////////\n\n$grid: (\n  'output' : true,\n  'output-mobile' : true,\n\n  'class-container' : 'container',\n  'class-row' : 'row',\n  'class-column' : 'col',\n  'class-column-left' : 'col-left',\n  'class-column-right' : 'col-right',\n  'class-prefix' : 'prefix',\n  'class-suffix' : 'suffix',\n\n  'type' : 'normal',\n\n  'total-width' : 100%,\n  'gutter-width' : 0,\n  'inner-gutter-width' : 1.5rem,\n\n  'columns' : 12,\n  'column-float' : left,\n\n  'container-margin' : 0 auto,\n  'container-padding' : 0 1.5rem,\n  'container-min-width' : none,\n  'container-max-width' : 75rem,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'grid') {\n    $grid: map-extend($grid, map-get($override, 'grid'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Grid Functions\n////////////////////////////////////////////////////////////////////////////////\n\n// Column Width\n// A function that returns the width of a column span.\n// @param $index\n//   @type integer\n//   @desc The number of column span you want returned.\n// @param $options\n//   @type map\n//   @default $grid map\n// @return unit (pixel, percentage)\n@function column-width($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  $column-width: (map-get($o, 'total-width') - (map-get($o, 'gutter-width') * (map-get($o, 'columns') - 1))) / map-get($o, 'columns');\n  @return ($column-width * $index) + (map-get($o, 'gutter-width') * ($index - 1));\n}\n\n// Spacing Width\n// A function that returns the spacing of a column span.\n// @param $index\n//   @type integer\n//   @desc The number of column spacing you want returned.\n// @param $options\n//   @type map\n//   @default $grid map\n// @return unit (pixel, percentage)\n@function spacing-width($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  $column-width : column-width( 1, $o );\n  @return ($column-width * $index) + (map-get($o, 'gutter-width') * $index);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Semantic Grid Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Container\n// Outputs all the styles needed to make an element a grid container.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-container($options: ()) {\n  $o: map-merge($grid, $options);\n  box-sizing: border-box;\n  @if (map-get($o, 'type') == 'mobile') {\n    width: 100%;\n    @if (map-get($o, 'container-min-width')) {\n      min-width: none;\n    }\n    @if (map-get($o, 'container-max-width')) {\n      max-width: none;\n    }\n    margin: 0;\n    padding: map-get($o, 'container-padding');\n  } @else {\n    width: map-get($o, 'total-width');\n    @if (map-get($o, 'container-min-width')) {\n      min-width: map-get($o, 'container-min-width');\n    }\n    @if (map-get($o, 'container-max-width')) {\n      max-width: map-get($o, 'container-max-width');\n    }\n    margin: map-get($o, 'container-margin');\n    padding: map-get($o, 'container-padding');\n    @include add-clearfix();\n  }\n}\n\n// Make Row\n// Outputs all the styles needed to make an element a grid row.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-row($options: ()) {\n  $o: map-merge($grid, $options);\n  box-sizing: border-box;\n  @if (map-get($o, 'type') == 'mobile') {\n    width: 100%;\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      margin-left: 0;\n      margin-right: 0;\n    }\n  } @else {\n    width: auto;\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      margin-left: -(map-get($o, 'inner-gutter-width') / 2);\n      margin-right: -(map-get($o, 'inner-gutter-width') / 2);\n    }\n    @include add-clearfix();\n  }\n}\n\n// Make Base Column\n// Creates the base styles for a column but excludes setting the width.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-column-base($options: ()) {\n  $o: map-merge($grid, $options);\n  box-sizing: border-box;\n  @if (map-get($o, 'type') == 'mobile') {\n    width: 100%;\n    float: none;\n    @if (map-get($o, 'gutter-width') != 0) {\n      margin-left: 0;\n    }\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      padding-left: 0;\n      padding-right: 0;\n    }\n  } @else {\n    min-height: 1px;\n    float: map-get($o, 'column-float');\n    &.#{map-get($o, 'class-column-left')} {\n      float: left;\n    }\n    &.#{map-get($o, 'class-column-right')} {\n      float: right;\n    }\n    @if (map-get($o, 'gutter-width') != 0) {\n      margin-left: map-get($o, 'gutter-width');\n      &:first-child {\n        margin-left: 0;\n      }\n    }\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      padding-left: (map-get($o, 'inner-gutter-width') / 2);\n      padding-right: (map-get($o, 'inner-gutter-width') / 2);\n    }\n  }\n}\n\n// Make Column\n// Creates all the styles for a column and sets its width.\n// @param $index\n//   @type integer\n//   @desc The number of column span you want set.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin make-column($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  @include make-column-base($o);\n  width: column-width($index, $o);\n}\n\n// Add Prefix\n// Creates the base styles for a column and sets its width.\n// @param $index\n//   @type integer\n//   @desc The number of column prefix spacing you want set.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin add-prefix($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  @if (map-get($o, 'gutter-width') != 0) {\n    margin-left: (spacing-width($index, $o) + map-get($o, 'gutter-width'));\n    &:first-child {\n      margin-left: spacing-width($index, $o);\n    }\n  } @else {\n    margin-left: spacing-width($index, $o);\n  }\n}\n\n// Add Suffix\n// Creates the base styles for a spacing suffix.\n// @param $index\n//   @type integer\n//   @desc The number of column suffix spacing you want set.\n// @param $options\n//   @type map\n//   @default $grid map\n@mixin add-suffix($index, $options: ()) {\n  $o: map-merge($grid, $options);\n  margin-right: spacing-width($index, $o);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Build Grid Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Build Grid System\n// Outputs all the classes and styles for the class based grid system.\n// @param $grid-type | $options\n//   @type string | map\n//   @default $grid map\n@mixin build-grid-system($options: 'normal') {\n  $o: null;\n\n  // Check if options is map or not\n  // If it's a map, merge it with our global grid map\n  // Else set options as our grid type\n  @if (type-of($options) == map) {\n    $o: map-merge($grid, $options);\n  } @else {\n    $o: map-merge( $grid, ('type': $options));\n  }\n\n  // Output our container class\n  .#{map-get($o, 'class-container')} {\n    @include make-container($o);\n  }\n\n  // Output our row class\n  .#{map-get($o, 'class-row')} {\n    @include make-row($o);\n  }\n\n  // Output our column class\n  .#{map-get($o, 'class-column')} {\n    @include make-column-base($o);\n  }\n\n  // Check that this is not a mobile grid type\n  @if (map-get($o, 'type') != 'mobile') {\n\n    @if (map-get($o, 'gutter-width') != 0) {\n      .#{map-get($o, 'class-column')}-no-gutter {\n        margin-left: 0;\n      }\n    }\n    @if (map-get($o, 'inner-gutter-width') != 0) {\n      .#{map-get($o, 'class-column')}-no-inner-gutter {\n        padding-left: 0;\n        padding-right: 0;\n      }\n    }\n\n    // Output our column classes\n    @for $i from 1 through map-get($o, 'columns') {\n      .#{map-get($o, 'class-column')}-#{$i} {\n        width: column-width( $i, $o );\n      }\n    }\n\n    // Output our prefix classes if a class name is set\n    @if (map-get($o, 'class-prefix')) {\n      @for $i from 1 through (map-get($o, 'columns') - 1) {\n        .#{map-get($o, 'class-prefix')}-#{$i} {\n          @include add-prefix( $i, $o );\n        }\n      }\n    }\n\n    // Output our suffix classes if a class name is set\n    @if (map-get($o, 'class-suffix')) {\n      @for $i from 1 through (map-get($o, 'columns') - 1) {\n        .#{map-get($o, 'class-suffix')}-#{$i} {\n          @include add-suffix( $i, $o );\n        }\n      }\n    }\n  } // End if not mobile\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Media Queries\n////////////////////////////////////////////////////////////////////////////////\n\n// Local Breakpoints Map\n// @type map\n$tweakpoints: () !default;\n\n// Global Breakpoints Map\n// @type map\n$breakpoints: (\n  'small'  : 480px,\n  'medium' : 760px,\n  'large'  : 990px,\n  'huge'   : 1380px\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'breakpoints') {\n    $breakpoints: map-extend($breakpoints, map-get($override, 'breakpoints'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Media Query Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Media Min\n// A media query mixin that deifnes a query using min-width. You can pass in the\n// key to the `$teakpoints()` or `$breakpoints()` maps to access that value, or\n// pass a value to create your media query.\n// @param $point\n//   @type map key | unit (pixel, em, rem)\n// @param @content (passed in brackets)\n//   @type style block\n@mixin media-min($point) {\n  @if map-has-key($tweakpoints, $point) {\n    @media (min-width: map-get($tweakpoints, $point)) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $point) {\n    @media (min-width: map-get($breakpoints, $point)) {\n      @content;\n    }\n  } @else {\n    @if (type-of($point) == number) {\n      @media (min-width: $point) {\n        @content;\n      }\n    }\n  }\n}\n\n// Media Max\n// A media query mixin that deifnes a query using max-width. You can pass in the\n// key to the `$teakpoints()` or `$breakpoints()` maps to access that value, or\n// pass a value to create your media query. This mixin will shave a pixel off\n// your breakpoint value so that it never overlaps with a breakpoint that might\n// be used in the `media-min` mixin except when a value is passed directly.\n// @param $point\n//   @type map key | unit (pixel, em, rem)\n// @param @content (passed in brackets)\n//   @type style block\n@mixin media-max($point) {\n  @if map-has-key($tweakpoints, $point) {\n    @media (max-width: (map-get($tweakpoints, $point) - 1)) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $point) {\n    @media (max-width: (map-get($breakpoints, $point) - 1)) {\n      @content;\n    }\n  } @else {\n    @if (type-of($point) == number) {\n      @media (max-width: $point) {\n        @content;\n      }\n    }\n  }\n}\n\n// Retina Media Query\n// Media query mixin can be used for setting styles specifically to retina\n// screens. Used when setting higher resolution background images.\n// @param @content (passed in brackets)\n//   @type style block\n@mixin media-retina() {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Add Clearfix\n// Allows you to apply a clearfix to an element that contains floats.\n@mixin add-clearfix() {\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n\n// Remove Clearfix\n// Removes the clearfix styles from an element. This is typically used when a\n// clearfix is inherited on an element and you'd like it removed.\n@mixin remove-clearfix() {\n  &:after {\n    content: none;\n    display: none;\n    clear: none;\n  }\n}\n\n// Add Float Modifiers\n// Adds the float modifier classes to an element.\n// @param $left\n//   @type class name\n//   @default $class-float-left\n// @param $right\n//   @type class name\n//   @default $class-float-right\n@mixin add-float-modifiers($left: $class-float-left, $right: $class-float-right) {\n  @if $left {\n    &.#{$left} {\n      float: left;\n    }\n  }\n  @if $right {\n    &.#{$right} {\n      float: right;\n    }\n  }\n}\n\n// Add Size\n// Shorthand for adding width and height dimensions to an element. If you only\n// pass in a width, the height will be set to equal the width and create a\n// square. If either the width or height are unit-less, it defaults to pixels.\n// @param $width\n//   @type unit (number, pixel, percentage)\n// @param $height\n//   @type unit (number, pixel, percentage, false)\n//   @default false -> $width\n@mixin add-size(\n    $width,\n    $height : false\n  ) {\n  @if ($width != auto) {\n    @if ($width != none) {\n      @if unitless($width) {\n        $width: 1px * $width;\n      }\n    }\n  }\n  @if ($height != auto) {\n    @if ($height != none) {\n      @if ($height != false) {\n        @if unitless($height) {\n          $height: 1px * $height;\n        }\n      } @else {\n        $height: $width;\n      }\n    }\n  }\n  width: $width;\n  height: $height;\n}\n\n// Vertical Center\n// Centers an element vertically within its parent. Parent element may need to\n// have transform-style set to `preserve-3d` to prevent half pixel bluring.\n// @param $percent\n//   @type unit (percentage)\n//   @default 50%\n@mixin add-vertical-center($percent: 50%) {\n  position: relative;\n  top: $percent;\n  transform: translateY(-$percent);\n}\n\n\n// Scrollable\n// Makes touch devices use momentum-based scrolling for the given element.\n@mixin add-scrollable() {\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  transition: top linear 0.2s, bottom linear 0.2s;\n}\n\n// Make Triangle\n// Creates the base styles for creating CSS triangles.\n@mixin make-triangle() {\n  content: '';\n  display: inline-block;\n  width: 0;\n  height: 0;\n  border: none;\n  border-style: solid;\n  border-color: transparent;\n}\n\n// Add Triangle Styles\n// Uses the \"0x0\" element with borders trick to draw arrow size, color and direction.\n// @param $size\n//   @type unit (pixel, em, rem)\n// @param $color\n//   @type color\n// @param $direction\n//   @desc The direction that the triangle will point.\n//   @type string\n//   @options 'up', 'right', 'down', 'left', 'up-right', 'up-left', 'down-right', 'down-left'\n@mixin add-triangle-styles( $size, $color, $direction ) {\n  border-color: transparent;\n  @if ($direction == 'up') {\n    border-width: 0 $size $size $size;\n    border-bottom-color: $color;\n  } @else if ($direction == 'right') {\n    border-width: $size 0 $size $size;\n    border-left-color: $color;\n  } @else if ($direction == 'down') {\n    border-width: $size $size 0 $size;\n    border-top-color: $color;\n  } @else if ($direction == 'left') {\n    border-width: $size $size $size 0;\n    border-right-color: $color;\n  } @else if ($direction == 'up right' or $direction == 'right up') {\n    border-width: $size;\n    border-top-color: $color;\n    border-right-color: $color;\n  } @else if ($direction == 'up left' or $direction == 'left up') {\n    border-width: $size;\n    border-top-color: $color;\n    border-left-color: $color;\n  } @else if ($direction == 'down right' or $direction == 'right down') {\n    border-width: $size;\n    border-bottom-color: $color;\n    border-right-color: $color;\n  } @else if ($direction == 'down left' or $direction == 'left down') {\n    border-width: $size;\n    border-bottom-color: $color;\n    border-left-color: $color;\n  } @else {\n    @warn \"#{$direction} is not a valid direction for @mixin triangle\";\n  }\n}\n\n// Add Truncate Text\n// Truncates text with an ellipsis. Element this is applied to must be block\n// or inline-block.\n// @param $display\n//   @type display property (block, inline-block)\n//   @default block\n@mixin add-text-truncate( $display : block ) {\n  @if ($display == inline-block or $display == block) {\n    display: $display;\n  }\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// Add Hide text\n// Hides text from an element. This is most commonly used as an image\n// replacement technique for hiding text in an element to reveal a\n// background image.\n@mixin add-text-hide() {\n  font-size: 0;\n  line-height: 0;\n  text-indent: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n// Make Anchor\n// Creates the base anchor styles using the $anchors map for defaults.\n// @param $options\n//   @type map\n//   @default $anchors map\n@mixin make-anchor($options: ()) {\n  $o: map-extend($anchors, $options, true);\n  @include add-styles($o);\n}\n\n// Build Headings\n// Creates the base styles for headings using the $headings map for defaults.\n// @param $options\n//   @type map\n//   @default $headings map\n@mixin build-headings($options: ()) {\n  $o: map-extend($headings, $options, true);\n\n  h1, h2, h3, h4, h5, h6,\n  .h1, .h2, .h3, .h4, .h5, .h6 {\n    @include add-styles($o);\n\n    @if map-fetch($o, 'anchors', 'output') {\n      a {\n        @include make-anchor(map-get($o, 'anchors'));\n      }\n    }\n  }\n\n  @if map-has-key($o, 'scale') {\n    @each $heading, $size in map-get($o, 'scale') {\n      #{$heading}, .#{$heading} {\n        font-size: $size;\n      }\n    }\n  }\n}\n\n// Add Styles\n// Output styles from a component map based on the approved properties and pseudo-classes.\n// @param $input\n//   @desc The styles object to inject properties from\n//   @type map\n//   @default ()\n// @param $settings\n//   @desc Output options and approved pseudo classes and properties\n//   @type map\n//   @default $add-styles\n@mixin add-styles($input: (), $settings: ()) {\n  $s: map-merge($add-styles, $settings);\n\n  // Check if we should output base modifier styles\n  @if map-get($s, 'output-base') {\n    // Loop through properties and set them if they exist\n    @each $prop in map-get($s, 'properties') {\n      @if (map-has-key($input, $prop)) {\n        #{$prop}: map-get($input, $prop);\n      }\n    }\n  }\n\n  // Check if we should output pseudo-class styles\n  @if map-get($s, 'output-pseudo') {\n    // Loop through pseudo-classes and see if they exist in $input\n    @each $pseudo in map-get($s, 'pseudo-classes') {\n      @if (map-has-key($input, $pseudo)) {\n        &:#{$pseudo} {\n          // Loop through properties and set them if they exist\n          @each $prop in map-get($s, 'properties') {\n            @if (map-has-key(map-get($input, $pseudo), $prop)) {\n              #{$prop}: map-fetch($input, $pseudo, $prop);\n            }\n          }\n        }\n      }\n    }\n  }\n\n}\n\n// Add Modifiers\n// Output an array of modifiers for flat components.\n// @param $input\n//   @desc The styles object with optional modifiers to inject properties from\n//   @type map\n//   @default ()\n// @param $key\n//   @desc Specific key to putput from modifiers or null for all\n//   @type String, null\n//   @default null\n// @param $selector\n//   @desc Whether or not to putput a selector\n//   @type boolean\n//   @default true\n// @param $settings\n//   @desc Simply passed on to add-styles()\n//   @type map\n//   @default $add-styles\n@mixin add-modifiers($input: (), $key: null, $selector: true, $settings: ()) {\n  $s: map-merge($add-styles, $settings);\n\n  // Grab the modifier map if it exists\n  @if (map-has-key($input, 'modifiers')) {\n    $input: map-get($input, 'modifiers');\n  }\n\n  // If an output is passed, re-map the input to the selected key.\n  // Also, we don't want to output the default modifier class.\n  @if ($key) {\n    @each $name, $map in $input {\n      @if ($key == $name) {\n        $input: ($name: $map);\n      }\n    }\n  } @else {\n    $input: map-remove($input, 'default');\n  }\n\n  // Loop through our input modifiers\n  @each $name, $map in $input {\n\n    @if ($selector) {\n      @if (map-has-key($map, 'selector')) {\n        $selector: map-get($map, 'selector');\n      } @else {\n        $selector: '&.' + $name;\n      }\n      #{$selector} {\n        @include add-styles($map, $settings);\n      }\n    } @else {\n      @include add-styles($map, $settings);\n    }\n\n  }\n\n}\n","/*!\n * BaseWeb\n * A fresh front-end development framework\n * @version 2.6.4\n *\n * @author Sebastian Nitu\n * @url https://github.com/sebnitu/BaseWeb\n * @url http://sebnitu.com\n *\n * Copyright (c) 2017 Sebastian Nitu (MIT Licensed)\n */\n/*==============================================================================\n  @Base Styles - scss/elements/_base.scss\n==============================================================================*/\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\n\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n::selection {\n  background: rgba(76, 175, 80, 0.25);\n  text-shadow: none;\n}\n\n/*==============================================================================\n  @Grid System - scss/elements/_base.scss\n==============================================================================*/\n.container {\n  box-sizing: border-box;\n  width: 100%;\n  min-width: none;\n  max-width: none;\n  margin: 0;\n  padding: 0 1.5rem;\n}\n\n.row {\n  box-sizing: border-box;\n  width: 100%;\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.col {\n  box-sizing: border-box;\n  width: 100%;\n  float: none;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n@media (min-width: 760px) {\n  .container {\n    box-sizing: border-box;\n    width: 100%;\n    min-width: none;\n    max-width: 75rem;\n    margin: 0 auto;\n    padding: 0 1.5rem;\n  }\n  .container:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n  .row {\n    box-sizing: border-box;\n    width: auto;\n    margin-left: -0.75rem;\n    margin-right: -0.75rem;\n  }\n  .row:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n  .col {\n    box-sizing: border-box;\n    min-height: 1px;\n    float: left;\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n  }\n  .col.col-left {\n    float: left;\n  }\n  .col.col-right {\n    float: right;\n  }\n  .col-no-inner-gutter {\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .col-1 {\n    width: 8.333%;\n  }\n  .col-2 {\n    width: 16.667%;\n  }\n  .col-3 {\n    width: 25%;\n  }\n  .col-4 {\n    width: 33.333%;\n  }\n  .col-5 {\n    width: 41.667%;\n  }\n  .col-6 {\n    width: 50%;\n  }\n  .col-7 {\n    width: 58.333%;\n  }\n  .col-8 {\n    width: 66.667%;\n  }\n  .col-9 {\n    width: 75%;\n  }\n  .col-10 {\n    width: 83.333%;\n  }\n  .col-11 {\n    width: 91.667%;\n  }\n  .col-12 {\n    width: 100%;\n  }\n  .prefix-1 {\n    margin-left: 8.333%;\n  }\n  .prefix-2 {\n    margin-left: 16.667%;\n  }\n  .prefix-3 {\n    margin-left: 25%;\n  }\n  .prefix-4 {\n    margin-left: 33.333%;\n  }\n  .prefix-5 {\n    margin-left: 41.667%;\n  }\n  .prefix-6 {\n    margin-left: 50%;\n  }\n  .prefix-7 {\n    margin-left: 58.333%;\n  }\n  .prefix-8 {\n    margin-left: 66.667%;\n  }\n  .prefix-9 {\n    margin-left: 75%;\n  }\n  .prefix-10 {\n    margin-left: 83.333%;\n  }\n  .prefix-11 {\n    margin-left: 91.667%;\n  }\n  .suffix-1 {\n    margin-right: 8.333%;\n  }\n  .suffix-2 {\n    margin-right: 16.667%;\n  }\n  .suffix-3 {\n    margin-right: 25%;\n  }\n  .suffix-4 {\n    margin-right: 33.333%;\n  }\n  .suffix-5 {\n    margin-right: 41.667%;\n  }\n  .suffix-6 {\n    margin-right: 50%;\n  }\n  .suffix-7 {\n    margin-right: 58.333%;\n  }\n  .suffix-8 {\n    margin-right: 66.667%;\n  }\n  .suffix-9 {\n    margin-right: 75%;\n  }\n  .suffix-10 {\n    margin-right: 83.333%;\n  }\n  .suffix-11 {\n    margin-right: 91.667%;\n  }\n}\n\n/*==============================================================================\n  @Utility Classes - scss/elements/_base.scss\n==============================================================================*/\n.clearfix:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.remove-clearfix:after {\n  content: none;\n  display: none;\n  clear: none;\n}\n\n.float-left {\n  float: left;\n}\n\n.float-right {\n  float: right;\n}\n\n.show {\n  display: block !important;\n}\n\n.show-inline-block {\n  display: inline-block !important;\n}\n\n.show-flex {\n  display: flex !important;\n}\n\n.show-inline-flex {\n  display: inline-flex !important;\n}\n\n.show-inherit {\n  display: inherit !important;\n}\n\n.hide {\n  display: none !important;\n}\n\n@media (min-width: 480px) {\n  .show-small-down {\n    display: none !important;\n  }\n  .hide-small-up {\n    display: none !important;\n  }\n}\n\n@media (max-width: 479px) {\n  .hide-small-down {\n    display: none !important;\n  }\n  .show-small-up {\n    display: none !important;\n  }\n}\n\n@media (min-width: 760px) {\n  .show-medium-down {\n    display: none !important;\n  }\n  .hide-medium-up {\n    display: none !important;\n  }\n}\n\n@media (max-width: 759px) {\n  .hide-medium-down {\n    display: none !important;\n  }\n  .show-medium-up {\n    display: none !important;\n  }\n}\n\n@media (min-width: 990px) {\n  .show-large-down {\n    display: none !important;\n  }\n  .hide-large-up {\n    display: none !important;\n  }\n}\n\n@media (max-width: 989px) {\n  .hide-large-down {\n    display: none !important;\n  }\n  .show-large-up {\n    display: none !important;\n  }\n}\n\n@media (min-width: 1380px) {\n  .show-huge-down {\n    display: none !important;\n  }\n  .hide-huge-up {\n    display: none !important;\n  }\n}\n\n@media (max-width: 1379px) {\n  .hide-huge-down {\n    display: none !important;\n  }\n  .show-huge-up {\n    display: none !important;\n  }\n}\n\n/*==============================================================================\n  @Typography - scss/elements/_typography.scss\n===============================================================================*/\nhtml {\n  font-size: 16px;\n}\n\nbody {\n  font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Helvetica Neue\", Arial, sans-serif;\n  font-size: 16px;\n  line-height: 1.5em;\n  font-weight: 400;\n  color: #424242;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n\na {\n  color: #2196F3;\n  text-decoration: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\na:hover {\n  color: #1976D2;\n  border-color: inherit;\n}\n\nh1, h2, h3, h4, h5, h6,\n.h1, .h2, .h3, .h4, .h5, .h6 {\n  margin: 1rem 0;\n  font-family: inherit;\n  line-height: 1.25em;\n  font-weight: 600;\n  color: #212121;\n}\n\nh1 a, h2 a, h3 a, h4 a, h5 a, h6 a,\n.h1 a, .h2 a, .h3 a, .h4 a, .h5 a, .h6 a {\n  color: #212121;\n  text-decoration: none;\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\nh1 a:hover, h2 a:hover, h3 a:hover, h4 a:hover, h5 a:hover, h6 a:hover,\n.h1 a:hover, .h2 a:hover, .h3 a:hover, .h4 a:hover, .h5 a:hover, .h6 a:hover {\n  color: #2196F3;\n  border-color: inherit;\n}\n\nh1, .h1 {\n  font-size: 2.5em;\n}\n\nh2, .h2 {\n  font-size: 2em;\n}\n\nh3, .h3 {\n  font-size: 1.75em;\n}\n\nh4, .h4 {\n  font-size: 1.5em;\n}\n\nh5, .h5 {\n  font-size: 1.25em;\n}\n\nh6, .h6 {\n  font-size: 1em;\n}\n\np {\n  margin: 1em 0;\n}\n\nstrong {\n  font-weight: bold;\n}\n\nem {\n  font-style: italic;\n}\n\nsmall {\n  font-size: 0.8em;\n}\n\nmark {\n  background: rgba(255, 255, 0, 0.5);\n}\n\ncite {\n  font-style: italic;\n}\n\nabbr[title],\nabbr[data-original-title] {\n  cursor: help;\n  text-decoration: underline dotted;\n}\n\n.text-lead {\n  font-size: 1.5em;\n  line-height: 1.4em;\n  color: #212121;\n  font-weight: 300;\n}\n\n.text-lead a {\n  text-decoration: none;\n}\n\n.text-small {\n  font-size: 0.8em;\n  line-height: 1.5em;\n}\n\n.text-soften {\n  font-weight: 400;\n  color: #9E9E9E;\n}\n\n.text-harden {\n  font-weight: bold;\n  color: #212121;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-justify {\n  text-align: justify;\n}\n\n.text-nowrap {\n  white-space: nowrap;\n}\n\n.text-lowercase {\n  text-transform: lowercase;\n}\n\n.text-uppercase {\n  text-transform: uppercase;\n}\n\n.text-capitalize {\n  text-transform: capitalize;\n}\n\n/*==============================================================================\n  @Lists - scss/elements/_lists.scss\n==============================================================================*/\nul, ol {\n  margin: 1em 0 1em 2em;\n  padding: 0;\n}\n\nul ul, ul ol, ul li, ol ul, ol ol, ol li {\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n/**\n * Unordered Lists\n */\nul, ul ul ul ul {\n  list-style: disc;\n}\n\nul ul {\n  list-style: circle;\n}\n\nul ul ul {\n  list-style: disc;\n}\n\n/**\n * Ordered Lists\n */\nol, ol ol ol ol {\n  list-style: decimal;\n}\n\nol ol {\n  list-style: lower-alpha;\n}\n\nol ol ol {\n  list-style: lower-roman;\n}\n\n/**\n * Description Lists\n */\ndl {\n  margin: 1em 0;\n}\n\ndl dt {\n  margin: 1em 0 0;\n  font-weight: bold;\n  color: #212121;\n}\n\ndl dd {\n  margin: 0 0 1em 1em;\n}\n\n/*==============================================================================\n  @List Modifiers - scss/elements/_lists.scss\n==============================================================================*/\n/**\n * Base Table Styles\n */\n.list {\n  list-style: none;\n  margin: 1rem 0;\n}\n\n.list > li {\n  margin: 0;\n  padding: 1rem;\n  background-clip: padding-box;\n}\n\n.list > li:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.list.flush > li {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n/**\n * Border Modifiers\n */\n.list.rowed > li {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.list.rowed > li:first-child {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.list.bordered {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.list.bordered > li {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.list.bordered > li:last-child {\n  border-bottom: 0 none;\n}\n\n.list.linked > li {\n  padding: 0;\n}\n\n.list.linked > li > a {\n  display: block;\n  padding: 1rem;\n  background-clip: padding-box;\n  text-decoration: none;\n}\n\n.list.linked > li > a:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n/**\n * Miscellaneous Modifiers\n */\n.list.rounded {\n  border-radius: 3px;\n}\n\n.list.rounded > li:first-child {\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n}\n\n.list.rounded > li:last-child {\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n.list.striped > li:nth-of-type(odd) {\n  background-color: rgba(0, 0, 0, 0.025);\n}\n\n.list.hover > li {\n  transition: background-color 0.25s linear;\n}\n\n.list.hover > li:hover {\n  background-color: #FFFDE7;\n}\n\n/*==============================================================================\n  @Blockquotes - scss/elements/_blockquotes.scss\n==============================================================================*/\nblockquote {\n  margin: 1rem 0;\n  padding: 0.5em 1.5em;\n  background: #F5F5F5;\n  border-radius: 3px;\n}\n\nblockquote footer,\nblockquote .blockquote-footer {\n  display: block;\n  position: relative;\n  margin: 1rem 0;\n  font-size: 100%;\n}\n\n@media (min-width: 760px) {\n  blockquote {\n    padding: 1em 2em;\n  }\n}\n\n/*==============================================================================\n  @Code - scss/elements/_code.scss\n==============================================================================*/\ncode, pre {\n  background: #F5F5F5;\n  font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  font-size: 1em;\n  line-height: 1.5em;\n  border-radius: 3px;\n}\n\ncode {\n  display: inline;\n  margin: 0;\n  padding: 0;\n  white-space: nowrap;\n  line-height: inherit;\n  color: #F44336;\n  background: none;\n}\n\npre {\n  margin: 1.5rem 0;\n  padding: 0.75rem;\n  overflow: auto;\n  color: #212121;\n}\n\npre code {\n  display: block;\n  margin: 0;\n  padding: 0.75rem;\n  overflow: auto;\n  white-space: pre;\n  font-size: 100%;\n  color: inherit;\n  background: none;\n  border: 0 none;\n}\n\npre.max-height {\n  max-height: 400px;\n}\n\n/*==============================================================================\n  @Tables - scss/elements/_tables.scss\n==============================================================================*/\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n  max-width: 100%;\n  margin: 1rem 0;\n  overflow: auto;\n}\n\ntable tr {\n  vertical-align: top;\n}\n\ntable th {\n  color: #212121;\n  font-weight: bold;\n  text-align: left;\n}\n\n/*==============================================================================\n  @Table Modifiers - scss/elements/_tables.scss\n==============================================================================*/\n/**\n * Base Modifiers Styles\n */\n.table {\n  margin: 2em 0;\n  background: none;\n  border-collapse: separate;\n}\n\n.table td, .table th {\n  padding: 0.5em 0.75em;\n}\n\n/**\n * Border Variations\n */\n.table.rowed td, .table.rowed th {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.table.rowed thead:first-child tr:first-child td, .table.rowed thead:first-child tr:first-child th,\n.table.rowed tfoot:first-child tr:first-child td,\n.table.rowed tfoot:first-child tr:first-child th,\n.table.rowed tbody:first-child tr:first-child td,\n.table.rowed tbody:first-child tr:first-child th {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.table.columned td, .table.columned th {\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.table.columned tr td:first-child, .table.columned tr th:first-child {\n  border-left: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.table.bordered td, .table.bordered th {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.table.bordered thead:first-child tr:first-child td, .table.bordered thead:first-child tr:first-child th,\n.table.bordered tfoot:first-child tr:first-child td,\n.table.bordered tfoot:first-child tr:first-child th,\n.table.bordered tbody:first-child tr:first-child td,\n.table.bordered tbody:first-child tr:first-child th {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.table.bordered td, .table.bordered th {\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.table.bordered tr td:first-child, .table.bordered tr th:first-child {\n  border-left: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n/**\n * Padding Variations\n */\n.table.condensed td, .table.condensed th {\n  padding: 0.25em 0.5em;\n}\n\n.table.expanded td, .table.expanded th {\n  padding: 1em 1.25em;\n}\n\n/**\n * Miscellaneous Modifiers\n */\n.table.rounded {\n  border-radius: 3px;\n}\n\n.table.rounded thead:first-child tr:first-child td:first-child, .table.rounded thead:first-child tr:first-child th:first-child,\n.table.rounded tfoot:first-child tr:first-child td:first-child,\n.table.rounded tfoot:first-child tr:first-child th:first-child,\n.table.rounded tbody:first-child tr:first-child td:first-child,\n.table.rounded tbody:first-child tr:first-child th:first-child {\n  border-top-left-radius: 3px;\n}\n\n.table.rounded thead:first-child tr:first-child td:last-child, .table.rounded thead:first-child tr:first-child th:last-child,\n.table.rounded tfoot:first-child tr:first-child td:last-child,\n.table.rounded tfoot:first-child tr:first-child th:last-child,\n.table.rounded tbody:first-child tr:first-child td:last-child,\n.table.rounded tbody:first-child tr:first-child th:last-child {\n  border-top-right-radius: 3px;\n}\n\n.table.rounded thead:last-child tr:last-child td:first-child, .table.rounded thead:last-child tr:last-child th:first-child,\n.table.rounded tfoot:last-child tr:last-child td:first-child,\n.table.rounded tfoot:last-child tr:last-child th:first-child,\n.table.rounded tbody:last-child tr:last-child td:first-child,\n.table.rounded tbody:last-child tr:last-child th:first-child {\n  border-bottom-left-radius: 3px;\n}\n\n.table.rounded thead:last-child tr:last-child td:last-child, .table.rounded thead:last-child tr:last-child th:last-child,\n.table.rounded tfoot:last-child tr:last-child td:last-child,\n.table.rounded tfoot:last-child tr:last-child th:last-child,\n.table.rounded tbody:last-child tr:last-child td:last-child,\n.table.rounded tbody:last-child tr:last-child th:last-child {\n  border-bottom-right-radius: 3px;\n}\n\n.table.striped tbody tr:nth-of-type(odd) td, .table.striped tbody tr:nth-of-type(odd) th {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.table.striped-horizontal tbody tr:nth-of-type(odd) td, .table.striped-horizontal tbody tr:nth-of-type(odd) th {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.table.striped-vertical tr td:nth-of-type(odd),\n.table.striped-vertical tr th:nth-of-type(odd) {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.table.hover tbody tr td {\n  transition: background-color 0.25s linear;\n}\n\n.table.hover tbody tr:hover td {\n  background-color: #FFFDE7;\n}\n\n/**\n * Table Alignment Modifiers\n */\n.table.valign-baseline tr {\n  vertical-align: baseline;\n}\n\n.table.valign-top tr {\n  vertical-align: top;\n}\n\n.table.valign-middle tr {\n  vertical-align: middle;\n}\n\n.table.valign-bottom tr {\n  vertical-align: bottom;\n}\n\n.table.align-left tr td, .table.align-left tr th {\n  text-align: left;\n}\n\n.table.align-center tr td, .table.align-center tr th {\n  text-align: center;\n}\n\n.table.align-right tr td, .table.align-right tr th {\n  text-align: right;\n}\n\n/**\n * Responsive Tables\n */\n.table-responsive {\n  margin: 2em 0;\n}\n\n.table-responsive > table {\n  margin: 0;\n}\n\n@media (max-width: 759px) {\n  .table-responsive {\n    overflow: auto;\n  }\n  .table-responsive > table td,\n  .table-responsive > table th {\n    white-space: nowrap;\n  }\n}\n\n/*==============================================================================\n  @Images - scss/elements/_images.scss\n==============================================================================*/\nimg {\n  display: block;\n  margin: 1rem 0;\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Alignment Modifiers\n */\nimg.align-center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\np img.align-center {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nimg.align-left {\n  float: left;\n  margin: 1rem 1.5rem 1rem 0;\n}\n\np img.align-left {\n  margin-top: 0;\n}\n\nimg.align-right {\n  float: right;\n  margin: 1rem 0 1rem 1.5rem;\n}\n\np img.align-right {\n  margin-top: 0;\n}\n\n/**\n * Stylistic Modifiers\n */\nimg.rounded {\n  border-radius: 3px;\n}\n\nimg.circle {\n  border-radius: 50%;\n}\n\nimg.polaroid {\n  background: #fff;\n  background-clip: padding-box;\n  padding: 0.5rem;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n/*==============================================================================\n  @Rules - scss/elements/_rules.scss\n==============================================================================*/\nhr {\n  display: block;\n  height: 0;\n  width: 100%;\n  clear: both;\n  margin: 2rem 0;\n  padding: 0;\n  background: none;\n  border: 0 none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n/**\n * Stylistic Modifiers\n */\nhr.dotted {\n  border-bottom: 1px dotted rgba(0, 0, 0, 0.25);\n}\n\nhr.dashed {\n  border-bottom: 1px dashed rgba(0, 0, 0, 0.25);\n}\n\nhr.double {\n  border-bottom: 3px double rgba(0, 0, 0, 0.1);\n}\n\n/*==============================================================================\n  @Form Structure - scss/elements/_forms.scss\n==============================================================================*/\n/**\n * Form Structure Elements\n */\nform {\n  margin: 2.25rem 0;\n  font-size: 1em;\n  line-height: 1.5em;\n}\n\n/**\n * Fieldset\n */\nfieldset {\n  margin: 1.5rem 0;\n  padding: 0;\n  border: 0 none;\n}\n\n/**\n * Legends\n */\nlegend {\n  display: inline-block;\n  margin: -0.75rem 0.75rem;\n  padding: 0 0.75rem;\n  font-size: 1.375em;\n  line-height: 1.5em;\n  font-weight: bold;\n  color: #212121;\n  border: 0 none;\n}\n\nform .row {\n  margin-bottom: 0.75rem;\n}\n\nform .row:last-child {\n  margin-bottom: 0;\n}\n\nform .col {\n  margin-bottom: 0.75rem;\n}\n\nform .col:last-child {\n  margin-bottom: 0;\n}\n\n@media (min-width: 760px) {\n  form .col {\n    margin-bottom: 0;\n  }\n}\n\n/*==============================================================================\n  @Form Groups - scss/elements/_forms.scss\n==============================================================================*/\n/**\n * Form Group\n */\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group:last-child {\n  margin-bottom: 0;\n}\n\n.form-group.inline {\n  margin-right: -0.75rem;\n  margin-bottom: 0.75rem;\n}\n\n.form-group.inline:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.form-group.inline:last-child {\n  margin-bottom: -0.75rem;\n}\n\n.form-group.inline > * {\n  float: left;\n  width: auto;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n}\n\n.form-group.inline > *.float-right {\n  float: right;\n}\n\n.form-group.inline .form-group,\n.form-group.inline .input-group {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0.75rem 0 0;\n}\n\n.form-group.inline .form-group:last-child,\n.form-group.inline .input-group:last-child {\n  margin-right: 0;\n}\n\n/**\n * Header Group\n */\n.form-header {\n  margin-bottom: 1.5rem;\n  color: #9E9E9E;\n}\n\n.form-header:last-child {\n  margin-bottom: 0;\n}\n\n.form-header h1, .form-header h2, .form-header h3, .form-header h4, .form-header h5, .form-header h6 {\n  margin: 0.5rem 0;\n  font-size: 1.4em;\n  line-height: 1.2em;\n}\n\n.form-header p {\n  margin: 0.5rem 0;\n  color: #9E9E9E;\n}\n\n/**\n * Action Group\n */\n.form-action {\n  margin-bottom: 1.5rem;\n}\n\n.form-action:last-child {\n  margin-bottom: 0;\n}\n\n.form-action:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.form-action .button,\n.form-action .input-align {\n  float: left;\n  margin: 0 0.75rem 0 0;\n}\n\n.form-action .button:last-child,\n.form-action .input-align:last-child {\n  margin-right: 0;\n}\n\n.form-action .button.float-right,\n.form-action .input-align.float-right {\n  float: right;\n}\n\n.form-action .input-align {\n  margin-top: 0.75rem;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-color: transparent;\n}\n\n.form-action.form-action-center {\n  text-align: center;\n}\n\n.form-action.form-action-center .button,\n.form-action.form-action-center .input-align {\n  display: inline-block;\n  float: none;\n}\n\n/**\n * Input Group\n */\n.input-group {\n  margin-bottom: 1.5rem;\n}\n\n.input-group:last-child {\n  margin-bottom: 0;\n}\n\n.input-group.inline {\n  margin-right: -0.75rem;\n  margin-bottom: 0.75rem;\n}\n\n.input-group.inline:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.input-group.inline:last-child {\n  margin-bottom: -0.75rem;\n}\n\n.input-group.inline > * {\n  float: left;\n  width: auto;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n}\n\n.input-group.inline > *.float-right {\n  float: right;\n}\n\n/*==============================================================================\n  @Form Elements - scss/elements/_forms.scss\n==============================================================================*/\n/**\n * Labels\n */\nlabel {\n  display: inline-block;\n  margin: 0 0 0.5rem 0;\n  font-size: 1em;\n  line-height: 1.5em;\n  font-weight: 600;\n  color: #212121;\n}\n\nlabel:last-child {\n  margin-bottom: 0;\n}\n\nlabel.sub {\n  font-weight: normal;\n}\n\nlabel.hide {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n\nlabel.block {\n  display: block;\n  padding-top: 0.75rem;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-color: transparent;\n}\n\nlabel.inline {\n  display: inline-block;\n  padding-top: 0.75rem;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-color: transparent;\n}\n\n.inline label.block,\n.inline label.inline {\n  padding-bottom: 0.75rem;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-color: transparent;\n}\n\n/**\n * Base Inputs\n */\n.input,\n.checkbox,\n.radio,\n.choice {\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 0 0 0.75rem 0;\n}\n\n.input:last-child,\n.checkbox:last-child,\n.radio:last-child,\n.choice:last-child {\n  margin-bottom: 0;\n}\n\n/**\n * Text Inputs\n */\n.input {\n  padding: 0.75em;\n  font-family: inherit;\n  font-size: 1em;\n  line-height: 1.5em;\n  color: #424242;\n  background-color: rgba(255, 255, 255, 0.5);\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  box-shadow: 0 1px 3px transparent, inset 0 1px 3px rgba(0, 0, 0, 0.05);\n  box-sizing: border-box;\n  border-radius: 3px;\n  transition: border-color 0.25s, background-color 0.25s, box-shadow 0.25s;\n}\n\n.input::-webkit-input-placeholder {\n  color: #aaa;\n}\n\n.input::-moz-placeholder {\n  color: #aaa;\n}\n\n.input:-moz-placeholder {\n  color: #aaa;\n}\n\n.input:-ms-input-placeholder {\n  color: #aaa;\n}\n\n.input::placeholder {\n  color: #aaa;\n}\n\n.input:focus {\n  outline: none;\n  background-color: white;\n  border: 1px solid #2196f3;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05), inset 0 1px 3px transparent;\n}\n\n.input.disabled, .input[readonly], .input[disabled] {\n  opacity: 0.5;\n  background: rgba(0, 0, 0, 0.05);\n}\n\n/**\n * Checkbox, Radio & Choice Classes\n */\n.checkbox,\n.radio,\n.choice {\n  cursor: pointer;\n  color: #424242;\n  font-weight: normal;\n}\n\n.checkbox.disabled,\n.radio.disabled,\n.choice.disabled {\n  opacity: 0.5;\n}\n\n.choice {\n  padding: 0.75em 0.75em 0.75em 2.25em;\n  background: rgba(0, 0, 0, 0.05);\n  border: 1px solid transparent;\n  box-shadow: none;\n  border-radius: 3px;\n}\n\n.choice input[type=\"checkbox\"],\n.choice input[type=\"radio\"] {\n  position: absolute;\n  top: auto;\n  margin: 5px 0 0 -20px;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  position: relative;\n  top: -1px;\n  margin: 0 5px 0 0;\n}\n\n/**\n * Other Inputs\n */\ninput[type=\"file\"],\ninput[type=\"range\"] {\n  display: block;\n  margin: 0 0 0.75rem 0;\n}\n\ninput[type=\"range\"] {\n  width: 100%;\n}\n\ninput[type=\"search\"] {\n  -webkit-appearance: none;\n}\n\ninput[type=\"color\"].input {\n  width: 3.125rem;\n  height: 3.125rem;\n  padding: 0.25em;\n}\n\n/**\n * Textarea\n */\ntextarea.input {\n  height: auto;\n  max-width: 100%;\n}\n\n/**\n * Select\n */\nselect.input {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='4'><polygon fill='#212121' points='0,0 3,4 3,4 6,0 '/></svg>\");\n  background-position: 100% center;\n  background-repeat: no-repeat;\n  padding-right: 30px;\n}\n\nselect[multiple].input,\nselect[size].input {\n  height: auto;\n  padding: 0.75em;\n  background-image: none;\n}\n\n/*==============================================================================\n  @Form Utilities - scss/elements/_forms.scss\n==============================================================================*/\n/**\n * Notes\n */\n.note {\n  margin-bottom: 0.75rem;\n  font-size: 1em;\n  color: #9E9E9E;\n}\n\n.note:last-child {\n  margin-bottom: 0;\n}\n\n.note p {\n  margin: 0 0 0.75rem 0;\n}\n\n.note p:last-child {\n  margin-bottom: 0;\n}\n\nlabel + .note {\n  margin-top: 0;\n}\n\n.form-group + .note,\n.input-group + .note {\n  margin-top: -0.75rem;\n}\n\n/**\n * Required Classes\n */\n.req {\n  color: #F44336;\n}\n\n/**\n * Inline Inputs\n */\nlabel.inline,\n.button.inline,\n.input.inline,\n.checkbox.inline,\n.radio.inline,\n.choice.inline,\n.inline label,\n.inline .button,\n.inline .input,\n.inline .checkbox,\n.inline .radio,\n.inline .choice {\n  float: left;\n  width: auto;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n}\n\nlabel.inline.float-right,\n.button.inline.float-right,\n.input.inline.float-right,\n.checkbox.inline.float-right,\n.radio.inline.float-right,\n.choice.inline.float-right,\n.inline label.float-right,\n.inline .button.float-right,\n.inline .input.float-right,\n.inline .checkbox.float-right,\n.inline .radio.float-right,\n.inline .choice.float-right {\n  float: right;\n}\n\n/**\n * Disabled\n */\n.disabled input[type=\"file\"],\n.disabled input[type=\"range\"],\n.disabled input[type=\"checkbox\"],\n.disabled input[type=\"radio\"],\n.disabled .input,\n.disabled .checkbox,\n.disabled .radio,\n.disabled .choice,\nfieldset[disabled] input[type=\"file\"],\nfieldset[disabled] input[type=\"range\"],\nfieldset[disabled] input[type=\"checkbox\"],\nfieldset[disabled] input[type=\"radio\"],\nfieldset[disabled] .input,\nfieldset[disabled] .checkbox,\nfieldset[disabled] .radio,\nfieldset[disabled] .choice {\n  opacity: 0.5;\n}\n\n.disabled .input,\nfieldset[disabled] .input {\n  background: rgba(0, 0, 0, 0.05);\n}\n\n/*==============================================================================\n  @Validation States - scss/elements/_forms.scss\n==============================================================================*/\n/**\n * Success\n */\n.input.success {\n  border-color: #4CAF50;\n}\n\n.checkbox.success,\n.radio.success,\n.note.success {\n  color: #1B5E20;\n}\n\n.choice.success {\n  background-color: #E8F5E9;\n}\n\n.success .input {\n  border-color: #4CAF50;\n}\n\n.success .checkbox,\n.success .radio,\n.success .note {\n  color: #1B5E20;\n}\n\n.success .choice {\n  background-color: #E8F5E9;\n}\n\n/**\n * Warning\n */\n.input.warning {\n  border-color: #FBC02D;\n}\n\n.checkbox.warning,\n.radio.warning,\n.note.warning {\n  color: #FBC02D;\n}\n\n.choice.warning {\n  background-color: #FFF9C4;\n}\n\n.warning .input {\n  border-color: #FBC02D;\n}\n\n.warning .checkbox,\n.warning .radio,\n.warning .note {\n  color: #FBC02D;\n}\n\n.warning .choice {\n  background-color: #FFF9C4;\n}\n\n/**\n * Error\n */\n.input.error {\n  border-color: #F44336;\n}\n\n.checkbox.error,\n.radio.error,\n.note.error {\n  color: #B71C1C;\n}\n\n.choice.error {\n  background-color: #FFEBEE;\n}\n\n.error .input {\n  border-color: #F44336;\n}\n\n.error .checkbox,\n.error .radio,\n.error .note {\n  color: #B71C1C;\n}\n\n.error .choice {\n  background-color: #FFEBEE;\n}\n\n/**\n * Active\n */\n.input.active {\n  border-color: #2196F3;\n}\n\n.checkbox.active,\n.radio.active,\n.note.active {\n  color: #0D47A1;\n}\n\n.choice.active {\n  background-color: #E3F2FD;\n}\n\n.active .input {\n  border-color: #2196F3;\n}\n\n.active .checkbox,\n.active .radio,\n.active .note {\n  color: #0D47A1;\n}\n\n.active .choice {\n  background-color: #E3F2FD;\n}\n\n/*==============================================================================\n  @Buttons - scss/elements/_buttons.scss\n==============================================================================*/\n.button {\n  cursor: pointer;\n  display: inline-block;\n  margin: 0;\n  padding: 0.75rem 1.5rem;\n  vertical-align: top;\n  font-family: inherit;\n  font-size: 1em;\n  line-height: 1.5rem;\n  font-weight: inherit;\n  text-decoration: none;\n  background: #F5F5F5;\n  background-clip: border-box;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  transition-property: all;\n  transition-duration: 0.75s;\n  transition-timing-function: linear;\n  transition-duration: 0.75s;\n  color: #424242;\n  background: #F5F5F5;\n  transition-duration: 0.75s;\n  transition-duration: 0.75s;\n}\n\n.button:hover {\n  color: #424242;\n  background: #e8e8e8;\n  border-color: transparent;\n  transition-duration: 0.1s;\n  transition-duration: 0.1s;\n}\n\n.button:focus {\n  background: #e8e8e8;\n  transition-duration: 0.1s;\n  transition-duration: 0.1s;\n}\n\n.button:active {\n  transition-duration: 0;\n  transition-duration: 0;\n}\n\n.button.primary, .button.blue {\n  color: #fff;\n  background: #2196F3;\n}\n\n.button.primary:hover, .button.blue:hover {\n  color: #fff;\n  background: #1976D2;\n}\n\n.button.secondary, .button.gray {\n  color: #fff;\n  background: #9E9E9E;\n}\n\n.button.secondary:hover, .button.gray:hover {\n  color: #fff;\n  background: #616161;\n}\n\n.button.success, .button.green {\n  color: #fff;\n  background: #4CAF50;\n}\n\n.button.success:hover, .button.green:hover {\n  color: #fff;\n  background: #388E3C;\n}\n\n.button.warning, .button.yellow {\n  color: #424242;\n  background: #FFEB3B;\n}\n\n.button.warning:hover, .button.yellow:hover {\n  color: #424242;\n  background: #FDD835;\n}\n\n.button.danger, .button.red {\n  color: #fff;\n  background: #F44336;\n}\n\n.button.danger:hover, .button.red:hover {\n  color: #fff;\n  background: #D32F2F;\n}\n\n.button.light {\n  color: #424242;\n  background: rgba(255, 255, 255, 0.75);\n}\n\n.button.light:hover {\n  color: #424242;\n  background: white;\n}\n\n.button.dark {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.button.dark:hover {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.75);\n}\n\n.button.small {\n  padding: 0.375rem 0.875rem;\n  font-size: 0.875em;\n  line-height: 1.25rem;\n}\n\n.button.large {\n  padding: 1rem 2rem;\n  font-size: 1.25em;\n  line-height: 1.625rem;\n}\n\n.button.block {\n  display: block;\n  width: 100%;\n}\n\n/*==============================================================================\n  @Icons - scss/elements/_icons.scss\n==============================================================================*/\n.svg-symbols {\n  border: 0 !important;\n  clip: rect(0 0 0 0) !important;\n  height: 1px !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 1px !important;\n}\n\n.icon {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  margin-top: -0.3em;\n  margin-bottom: -0.1em;\n  font-size: 1.5rem;\n  stroke: currentColor;\n  stroke-width: 2px;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  fill: none;\n}\n\n.button .icon {\n  font-size: 1.5rem;\n  line-height: 1em;\n  vertical-align: middle;\n}\n\n.button.small .icon {\n  font-size: 1.125rem;\n}\n\n.button.large .icon {\n  font-size: 1.875rem;\n  margin-top: -0.2em;\n}\n\n.button-icon {\n  padding: 0.75rem;\n}\n\n.button-icon.small {\n  padding: 0.375rem;\n}\n\n.button-icon.large {\n  padding: 1rem;\n}\n\n.button-icon-left .icon {\n  margin-right: 0.25em;\n  margin-left: -0.25em;\n}\n\n.button-icon-left.small .icon {\n  margin-left: -0.125em;\n}\n\n.button-icon-left.large .icon {\n  margin-left: -0.35em;\n}\n\n.button-icon-right .icon {\n  margin-left: 0.25em;\n  margin-right: -0.25em;\n}\n\n.button-icon-right.small .icon {\n  margin-right: -0.125em;\n}\n\n.button-icon-right.large .icon {\n  margin-right: -0.35em;\n}\n\n/*==============================================================================\n  @Video - scss/elements/_videos.scss\n==============================================================================*/\n.video-wrapper {\n  position: relative;\n  display: block;\n  height: 0;\n  margin: 2em 0;\n  padding-bottom: 56.25%;\n  overflow: hidden;\n}\n\n.video-wrapper .video-item,\n.video-wrapper embed,\n.video-wrapper iframe,\n.video-wrapper object,\n.video-wrapper video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border: 0 none;\n}\n\n/**\n * Video Ratios\n */\n.video-wrapper.ratio-16x9 {\n  padding-bottom: 56.25%;\n}\n\n.video-wrapper.ratio-4x3 {\n  padding-bottom: 75%;\n}\n\n.video-wrapper.ratio-3x2 {\n  padding-bottom: 66.667%;\n}\n\n/*==============================================================================\n  @Close - scss/elements/_close.scss\n==============================================================================*/\n.close {\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0.125em;\n  font-size: 1rem;\n  border: none;\n  border-radius: 5em;\n  transition: all 0.25s linear;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.25);\n}\n\n.close:hover {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.close .icon {\n  margin: 0;\n  font-size: 1em;\n}\n\n.close.inverted {\n  color: #424242;\n  background: rgba(255, 255, 255, 0.5);\n}\n\n.close.inverted:hover {\n  color: #424242;\n  background: white;\n}\n\n.close.danger {\n  background: #F44336;\n}\n\n.close.danger:hover {\n  background: #D32F2F;\n}\n\n/*==============================================================================\n  @Button Groups - scss/blocks/_button-groups.scss\n==============================================================================*/\n.button-group {\n  display: inline-flex;\n  flex-flow: row;\n}\n\n.button-group > .button {\n  border-radius: 0;\n}\n\n.button-group > .button + .button {\n  margin-top: 0;\n  margin-left: 0.25em;\n}\n\n.button-group > .button:first-child {\n  border-radius: 3px 0 0 3px;\n}\n\n.button-group > .button:last-child {\n  border-radius: 0 3px 3px 0;\n}\n\n.button-group > .button {\n  position: relative;\n  z-index: 1;\n  flex: 1 1 auto;\n  margin: 0;\n}\n\n.button-group > .button:hover {\n  z-index: 2;\n}\n\n.button-group > .button:focus {\n  z-index: 3;\n}\n\n.button-group > .button:active {\n  z-index: 4;\n}\n\n.button-group > .button.active {\n  z-index: 5;\n}\n\n.button-group > .button.static {\n  flex-grow: 0;\n}\n\n/**\n * Button Group Modifiers\n */\n.button-group.inline {\n  display: inline-flex;\n}\n\n.button-group.block {\n  display: flex;\n}\n\n.button-group.hori,\n.button-group.horizontal {\n  flex-flow: row;\n}\n\n.button-group.hori > .button,\n.button-group.horizontal > .button {\n  border-radius: 0;\n}\n\n.button-group.hori > .button + .button,\n.button-group.horizontal > .button + .button {\n  margin-top: 0;\n  margin-left: 0.25em;\n}\n\n.button-group.hori > .button:first-child,\n.button-group.horizontal > .button:first-child {\n  border-radius: 3px 0 0 3px;\n}\n\n.button-group.hori > .button:last-child,\n.button-group.horizontal > .button:last-child {\n  border-radius: 0 3px 3px 0;\n}\n\n.button-group.vert,\n.button-group.vertical {\n  flex-flow: column;\n}\n\n.button-group.vert > .button,\n.button-group.vertical > .button {\n  border-radius: 0;\n}\n\n.button-group.vert > .button + .button,\n.button-group.vertical > .button + .button {\n  margin-top: 0.25em;\n  margin-left: 0;\n}\n\n.button-group.vert > .button:first-child,\n.button-group.vertical > .button:first-child {\n  border-radius: 3px 3px 0 0;\n}\n\n.button-group.vert > .button:last-child,\n.button-group.vertical > .button:last-child {\n  border-radius: 0 0 3px 3px;\n}\n\n/*==============================================================================\n  @Notices - scss/blocks/_notice.scss\n==============================================================================*/\n.notice {\n  margin: 2em 0;\n  padding: 0.25em 1.25em;\n  font-size: 1em;\n  line-height: 1.5em;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n  color: #424242;\n  background: #F5F5F5;\n}\n\n.notice.inverted {\n  color: #fff;\n  background: #424242;\n}\n\n.notice.info {\n  background: #E3F2FD;\n}\n\n.notice.info.inverted {\n  color: #fff;\n  background: #2196F3;\n}\n\n.notice.success {\n  background: #E8F5E9;\n}\n\n.notice.success.inverted {\n  color: #fff;\n  background: #4CAF50;\n}\n\n.notice.warning {\n  background: #FFF9C4;\n}\n\n.notice.warning.inverted {\n  color: #424242;\n  background: #FFEB3B;\n}\n\n.notice.danger {\n  background: #FFEBEE;\n}\n\n.notice.danger.inverted {\n  color: #fff;\n  background: #F44336;\n}\n\n.notice.inline {\n  display: inline;\n  margin: 0;\n  padding: 0 0.25em;\n}\n\n.notice .close {\n  float: right;\n  margin: 1em 0 1em 1em;\n  padding: 0.25em;\n  font-size: 1em;\n}\n\n.notice.inverted .close {\n  color: #424242;\n  background: rgba(255, 255, 255, 0.5);\n}\n\n.notice.inverted .close:hover {\n  color: #424242;\n  background: white;\n}\n\n.notice.warning.inverted .close {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.25);\n}\n\n.notice.warning.inverted .close:hover {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.5);\n}\n\n/*==============================================================================\n  @Breadcrumb - scss/blocks/_breadcrumb.scss\n==============================================================================*/\n.breadcrumb {\n  display: block;\n  margin: 1em 0;\n  font-size: 1em;\n}\n\n.breadcrumb .current {\n  color: #9E9E9E;\n}\n\n.breadcrumb ul,\n.breadcrumb ol {\n  margin: 0;\n  list-style: none;\n}\n\n.breadcrumb ul:after,\n.breadcrumb ol:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.breadcrumb li {\n  float: left;\n  margin: 0;\n}\n\n.breadcrumb li:after {\n  padding: 0 0.75em;\n  content: \"/\";\n  color: #BDBDBD;\n}\n\n.breadcrumb li:last-child:after {\n  content: none;\n}\n\n/*==============================================================================\n  @Dropdowns - scss/blocks/_dropdowns.scss\n==============================================================================*/\n/**\n * General Dropdown Styles\n */\n.dropdown,\n.dropdown-content,\n.dropdown-menu {\n  position: relative;\n  display: block;\n  width: 16rem;\n  margin: 0;\n  font-size: 0.875rem;\n  line-height: 1.35em;\n  background: #fff;\n  background-clip: padding-box;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n  border-radius: 3px;\n}\n\n/**\n * Dropdown\n */\n.dropdown {\n  padding: 0;\n}\n\n.dropdown > .dropdown-content,\n.dropdown > .dropdown-menu {\n  width: auto;\n  margin: 0;\n  background: none;\n  border: none;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: none;\n  border-radius: 0;\n}\n\n.dropdown > .dropdown-content:first-child,\n.dropdown > .dropdown-menu:first-child {\n  border-top: none;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n}\n\n.dropdown > .dropdown-content:last-child,\n.dropdown > .dropdown-menu:last-child {\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n/**\n * Dropdown Content\n */\n.dropdown-content {\n  padding: 1em;\n}\n\n.dropdown-content > * {\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.dropdown-content > :first-child {\n  margin-top: 0;\n}\n\n.dropdown-content > :last-child {\n  margin-bottom: 0;\n}\n\n.dropdown-content > hr {\n  margin: 1em 0;\n}\n\n.dropdown-content > a.block {\n  display: block;\n  margin: -0.5em;\n  padding: 1em;\n  color: #424242;\n  text-decoration: none;\n  border: none;\n  border-radius: 3px;\n}\n\n.dropdown-content > a.block:hover {\n  background: rgba(0, 0, 0, 0.05);\n  color: #424242;\n}\n\n.dropdown-content > a.block > * {\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.dropdown-content > a.block > :first-child {\n  margin-top: 0;\n}\n\n.dropdown-content > a.block > :last-child {\n  margin-bottom: 0;\n}\n\n.dropdown-content > .button {\n  display: block;\n}\n\n/**\n * Dropdown Menu\n */\n.dropdown-menu {\n  list-style: none;\n  padding: 0.5em;\n}\n\n.dropdown-menu li {\n  position: relative;\n  margin: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.dropdown-menu li:hover {\n  background: rgba(0, 0, 0, 0.05);\n  background-clip: padding-box;\n}\n\n.dropdown-menu li:hover > a {\n  color: #424242;\n}\n\n.dropdown-menu li.active > a {\n  color: #9E9E9E;\n}\n\n.dropdown-menu li.active:hover {\n  background: none;\n}\n\n.dropdown-menu li:first-child {\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n}\n\n.dropdown-menu li:last-child {\n  border-bottom: none;\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n.dropdown-menu a {\n  display: block;\n  padding: 0.75em 1em;\n  color: #424242;\n  border: none;\n  text-decoration: none;\n}\n\n/*==============================================================================\n  @Dropdown Triggers - scss/blocks/_dropdowns.scss\n==============================================================================*/\n.dropdown-trigger {\n  position: relative;\n}\n\n.dropdown-trigger .dropdown {\n  position: absolute;\n  z-index: 100;\n  display: none;\n}\n\n.dropdown-trigger:not(.on-click):not(.on-hover):hover > .dropdown, .dropdown-trigger.active > .dropdown {\n  display: block;\n}\n\n.dropdown-trigger:hover > .dropdown {\n  z-index: 105;\n}\n\n.dropdown-trigger .dropdown {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n  right: auto;\n  bottom: auto;\n}\n\n.dropdown-menu {\n  position: relative;\n}\n\n.dropdown-menu .dropdown-menu {\n  position: absolute;\n  z-index: 100;\n  display: none;\n}\n\n.dropdown-menu > li:hover > .dropdown-menu, .dropdown-menu.active > li > .dropdown-menu {\n  display: block;\n}\n\n.dropdown-menu:hover > .dropdown {\n  z-index: 105;\n}\n\n.dropdown-menu .dropdown-menu {\n  margin: -1px 0 0 -1px;\n  top: -0.5em;\n  left: 100%;\n  right: auto;\n  bottom: auto;\n}\n\n/*==============================================================================\n  @Dropdown Anchor Positions - scss/blocks/_dropdowns.scss\n==============================================================================*/\n.anchor-bottom-left .dropdown {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n  right: auto;\n  bottom: auto;\n}\n\n.anchor-bottom-right .dropdown {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: auto;\n  right: 0;\n  bottom: auto;\n}\n\n.anchor-bottom-center .dropdown {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  transform: translate3d(-50%, 0, 0);\n}\n\n.anchor-top-left .dropdown {\n  margin: 0 0 -1px 0;\n  top: auto;\n  left: 0;\n  right: auto;\n  bottom: 100%;\n}\n\n.anchor-top-right .dropdown {\n  margin: 0 0 -1px 0;\n  top: auto;\n  left: auto;\n  right: 0;\n  bottom: 100%;\n}\n\n.anchor-top-center .dropdown {\n  margin: 0 0 -1px 0;\n  top: auto;\n  left: 50%;\n  right: auto;\n  bottom: 100%;\n  transform: translate3d(-50%, 0, 0);\n}\n\n.anchor-left-top .dropdown {\n  margin: 0 -1px 0 0;\n  top: 0;\n  left: auto;\n  right: 100%;\n  bottom: auto;\n}\n\n.anchor-left-bottom .dropdown {\n  margin: 0 -1px 0 0;\n  top: auto;\n  left: auto;\n  right: 100%;\n  bottom: 0;\n}\n\n.anchor-left-center .dropdown {\n  margin: 0 -1px 0 0;\n  top: 50%;\n  left: auto;\n  right: 100%;\n  bottom: auto;\n  transform: translate3d(0, -50%, 0);\n}\n\n.anchor-right-top .dropdown {\n  margin: 0 0 0 -1px;\n  top: 0;\n  left: 100%;\n  right: auto;\n  bottom: auto;\n}\n\n.anchor-right-bottom .dropdown {\n  margin: 0 0 0 -1px;\n  top: auto;\n  left: 100%;\n  right: auto;\n  bottom: 0;\n}\n\n.anchor-right-center .dropdown {\n  margin: 0 0 0 -1px;\n  top: 50%;\n  left: 100%;\n  right: auto;\n  bottom: auto;\n  transform: translate3d(0, -50%, 0);\n}\n\n/*==============================================================================\n  @Tabs - scss/blocks/_tabs.scss\n==============================================================================*/\n/**\n * Base styles for tab wrapper, nav and content\n */\n.tabs {\n  position: relative;\n  margin: 2em 0;\n}\n\n.tabs .tabs-nav,\n.tabs .tabs-content {\n  margin: 0;\n}\n\n.tabs .tabs-nav {\n  z-index: 10;\n}\n\n.tabs .tabs-content {\n  z-index: 5;\n}\n\n.tabs-nav {\n  margin: 2em 0;\n  text-align: center;\n}\n\n.tabs-nav ul {\n  display: flex;\n  list-style: none;\n  margin: 0;\n}\n\n.tabs-nav ul li {\n  flex: 1 0 auto;\n  margin: 0;\n}\n\n.tabs-nav a {\n  display: block;\n  padding: 1em;\n  border: none;\n  text-decoration: none;\n}\n\n.tabs-nav.inline ul {\n  flex-wrap: wrap;\n}\n\n.tabs-nav.inline ul li {\n  flex: 0 0 auto;\n}\n\n.tabs-nav.inline ul li a {\n  padding: 1em 2em;\n}\n\n.tabs-content {\n  margin: 2em 0;\n}\n\n.tabs-content .tabs-panel {\n  display: none;\n}\n\n.tabs-content .tabs-panel.active {\n  display: block;\n}\n\n/**\n * Tabs Style: Fold\n */\n.style-fold .tabs-nav ul,\n.tabs-nav.style-fold ul {\n  background: #F5F5F5;\n  border: 1px solid #E0E0E0;\n  border-radius: 3px;\n}\n\n.style-fold .tabs-nav ul li,\n.tabs-nav.style-fold ul li {\n  border-right: 1px solid #E0E0E0;\n}\n\n.style-fold .tabs-nav ul li:first-child,\n.tabs-nav.style-fold ul li:first-child {\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n\n.style-fold .tabs-nav ul li:last-child,\n.tabs-nav.style-fold ul li:last-child {\n  border-right: none;\n  border-top-right-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n.style-fold .tabs-nav a,\n.tabs-nav.style-fold a {\n  color: #424242;\n}\n\n.style-fold .tabs-nav a:hover,\n.tabs-nav.style-fold a:hover {\n  background: #EEEEEE;\n  color: #424242;\n}\n\n.style-fold .tabs-nav ul li.active,\n.tabs-nav.style-fold ul li.active {\n  background: #fff;\n}\n\n.style-fold .tabs-nav .active a,\n.tabs-nav.style-fold .active a {\n  color: #424242;\n}\n\n.style-fold .tabs-nav .active a:hover,\n.tabs-nav.style-fold .active a:hover {\n  background: #fff;\n}\n\n.style-fold .tabs-nav.inline ul li:last-child,\n.tabs-nav.style-fold.inline ul li:last-child {\n  border-right: 1px solid #E0E0E0;\n}\n\n.style-fold .tabs-nav ul {\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.style-fold .tabs-nav ul li {\n  border-bottom: 1px solid transparent;\n  margin-bottom: -1px;\n}\n\n.style-fold .tabs-nav ul li:first-child {\n  border-bottom-left-radius: 0;\n}\n\n.style-fold .tabs-nav ul li:last-child {\n  border-bottom-right-radius: 0;\n}\n\n.style-fold .tabs-nav ul li.active {\n  border-bottom: 1px solid #fff;\n}\n\n.style-fold .tabs-content {\n  padding: 1em 2em;\n  border: 1px solid #E0E0E0;\n  border-top: none;\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n/**\n * Tabs Style: Line\n */\n.style-line .tabs-nav ul,\n.tabs-nav.style-line ul {\n  border-bottom: 1px solid #E0E0E0;\n}\n\n.style-line .tabs-nav ul li,\n.tabs-nav.style-line ul li {\n  border-bottom: 3px solid transparent;\n  margin-bottom: -1px;\n}\n\n.style-line .tabs-nav a,\n.tabs-nav.style-line a {\n  color: #9E9E9E;\n}\n\n.style-line .tabs-nav a:hover,\n.tabs-nav.style-line a:hover {\n  color: #2196F3;\n  text-decoration: none;\n}\n\n.style-line .tabs-nav ul li.active,\n.tabs-nav.style-line ul li.active {\n  border-bottom: 3px solid #2196F3;\n}\n\n.style-line .tabs-nav .active a,\n.tabs-nav.style-line .active a {\n  color: #424242;\n}\n\n.style-line .tabs-nav .active a:hover,\n.tabs-nav.style-line .active a:hover {\n  color: #2196F3;\n}\n\n.style-line .tabs-content {\n  padding: 1em 2em;\n  border: 1px solid #E0E0E0;\n  border-top: none;\n}\n\n/*==============================================================================\n  @Off-Canvas - scss/custom/offcanvas.scss\n==============================================================================*/\n.oc-wrap {\n  height: 100%;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  transition: top linear 0.2s, bottom linear 0.2s;\n}\n\n.oc-content,\n.oc-inner,\n.oc-aside {\n  height: 100%;\n}\n\n.oc-wrap {\n  position: relative;\n  overflow: hidden;\n}\n\n.oc-content {\n  position: relative;\n  left: 0;\n  z-index: 5;\n  transition: transform 0.5s;\n}\n\n.oc-inner {\n  position: relative;\n  overflow-y: auto;\n}\n\n.oc-aside {\n  position: fixed;\n  top: 0;\n  z-index: 10;\n  visibility: hidden;\n  width: 280px;\n  overflow-y: auto;\n  transition: all 0.5s;\n  background: #fff;\n}\n\n.oc-content:after {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  background: rgba(0, 0, 0, 0.2);\n  content: '';\n  opacity: 0;\n  transition: opacity 0.5s, width 0.1s 0.5s, height 0.1s 0.5s;\n}\n\n.oc-active > .oc-content:after {\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  transition: opacity 0.5s;\n}\n\n.oc-aside:after {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  content: '';\n  opacity: 1;\n  transition: opacity 0.5s;\n}\n\n.oc-active > .oc-aside:after {\n  width: 0;\n  height: 0;\n  opacity: 0;\n  transition: opacity 0.5s, width 0.1s 0.5s, height 0.1s 0.5s;\n}\n\n.oc-aside-left.oc-aside {\n  left: 0;\n  visibility: visible;\n  transform: translate3d(-100%, 0, 0);\n}\n\n.oc-aside-left.oc-active .oc-aside-left.oc-aside {\n  visibility: visible;\n  transform: translate3d(0, 0, 0);\n}\n\n.oc-aside-left.oc-aside:after {\n  display: none;\n}\n\n/*==============================================================================\n  @Tooltips - scss/blocks/_tooltips.scss\n==============================================================================*/\n/**\n * Base styles for tooltips\n */\n.tooltip {\n  position: relative;\n}\n\n.tooltip:after {\n  content: attr(data-tooltip);\n  pointer-events: none;\n  position: absolute;\n  z-index: 100;\n  display: block;\n  max-width: 30em;\n  padding: 0.5em 1em;\n  background: rgba(66, 66, 66, 0.9);\n  border-radius: 3px;\n  font-size: 0.75rem;\n  line-height: 1.5em;\n  color: #fff;\n  opacity: 0;\n  transition: opacity 0.2s, transform 0.2s;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n/**\n * Default Tooltip Position\n */\n.tooltip:after {\n  top: auto;\n  left: 50%;\n  right: auto;\n  bottom: 100%;\n  transform: translate(-50%, 0);\n}\n\n.tooltip:hover:after, .tooltip:focus:after {\n  opacity: 1;\n  transform: translate(-50%, -0.5em);\n}\n\n/**\n * Tooltip Positions\n */\n.tooltip-top:after {\n  top: auto;\n  left: 50%;\n  right: auto;\n  bottom: 100%;\n  transform: translate(-50%, 0);\n}\n\n.tooltip-top:hover:after,\n.tooltip-top:focus:after {\n  opacity: 1;\n  transform: translate(-50%, -0.5em);\n}\n\n.tooltip-top-left:after {\n  top: auto;\n  left: 0;\n  right: auto;\n  bottom: 100%;\n  transform: translate(0, 0);\n}\n\n.tooltip-top-left:hover:after,\n.tooltip-top-left:focus:after {\n  opacity: 1;\n  transform: translate(0, -0.5em);\n}\n\n.tooltip-top-right:after {\n  top: auto;\n  left: auto;\n  right: 0;\n  bottom: 100%;\n  transform: translate(0, 0);\n}\n\n.tooltip-top-right:hover:after,\n.tooltip-top-right:focus:after {\n  opacity: 1;\n  transform: translate(0, -0.5em);\n}\n\n.tooltip-left:after {\n  top: 50%;\n  left: auto;\n  right: 100%;\n  bottom: auto;\n  transform: translate(0, -50%);\n}\n\n.tooltip-left:hover:after,\n.tooltip-left:focus:after {\n  transform: translate(-0.5em, -50%);\n}\n\n.tooltip-left-top:after {\n  top: 0;\n  left: auto;\n  right: 100%;\n  bottom: auto;\n  transform: translate(0, 0);\n}\n\n.tooltip-left-top:hover:after,\n.tooltip-left-top:focus:after {\n  transform: translate(-0.5em, 0);\n}\n\n.tooltip-left-bottom:after {\n  top: auto;\n  left: auto;\n  right: 100%;\n  bottom: 0;\n  transform: translate(0, 0);\n}\n\n.tooltip-left-bottom:hover:after,\n.tooltip-left-bottom:focus:after {\n  transform: translate(-0.5em, 0);\n}\n\n.tooltip-right:after {\n  top: auto;\n  left: 100%;\n  right: auto;\n  bottom: 50%;\n  transform: translate(0, 50%);\n}\n\n.tooltip-right:hover:after,\n.tooltip-right:focus:after {\n  transform: translate(0.5em, 50%);\n}\n\n.tooltip-right-top:after {\n  top: 0;\n  left: 100%;\n  right: auto;\n  bottom: auto;\n  transform: translate(0, 0);\n}\n\n.tooltip-right-top:hover:after,\n.tooltip-right-top:focus:after {\n  transform: translate(0.5em, 0);\n}\n\n.tooltip-right-bottom:after {\n  top: auto;\n  left: 100%;\n  right: auto;\n  bottom: 0;\n  transform: translate(0, 0);\n}\n\n.tooltip-right-bottom:hover:after,\n.tooltip-right-bottom:focus:after {\n  transform: translate(0.5em, 0);\n}\n\n.tooltip-bottom:after {\n  top: 100%;\n  left: auto;\n  right: 50%;\n  bottom: auto;\n  transform: translate(50%, 0);\n}\n\n.tooltip-bottom:hover:after,\n.tooltip-bottom:focus:after {\n  opacity: 1;\n  transform: translate(50%, 0.5em);\n}\n\n.tooltip-bottom-left:after {\n  top: 100%;\n  left: 0;\n  right: auto;\n  bottom: auto;\n  transform: translate(0, 0);\n}\n\n.tooltip-bottom-left:hover:after,\n.tooltip-bottom-left:focus:after {\n  opacity: 1;\n  transform: translate(0, 0.5em);\n}\n\n.tooltip-bottom-right:after {\n  top: 100%;\n  left: auto;\n  right: 0;\n  bottom: auto;\n  transform: translate(0, 0);\n}\n\n.tooltip-bottom-right:hover:after,\n.tooltip-bottom-right:focus:after {\n  opacity: 1;\n  transform: translate(0, 0.5em);\n}\n\n/*==============================================================================\n  @Badges - scss/blocks/_badge.scss\n==============================================================================*/\n.badge {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.25rem 0.75rem;\n  font-size: 0.9em;\n  border: none;\n  border-radius: 3px;\n  transition: all 0.25s linear;\n  color: #424242;\n  background: rgba(0, 0, 0, 0.05);\n}\n\n.badge.dot {\n  font-size: 0;\n  line-height: 0;\n  text-indent: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.badge > .icon {\n  margin: 0 0.25rem 0 0;\n  font-size: 1rem;\n}\n\n.badge.badge-icon {\n  padding: 0.5rem;\n}\n\n.badge.badge-icon > .icon {\n  margin: 0;\n}\n\n.badge > img {\n  margin: -0.25rem 0.75rem -0.25rem -0.75rem;\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n\n.badge.pill > img {\n  border-radius: 3rem;\n  margin-right: 0.5rem;\n}\n\na.badge:hover {\n  color: #424242;\n  background: rgba(0, 0, 0, 0.15);\n}\n\n.badge.inverted {\n  color: #fff;\n  background: #9E9E9E;\n}\n\n.badge.active {\n  color: #fff;\n  background: #2196F3;\n}\n\n.badge.blue {\n  color: #2196F3;\n  background: #E3F2FD;\n}\n\n.badge.blue.inverted {\n  color: #fff;\n  background: #2196F3;\n}\n\n.badge.green {\n  color: #4CAF50;\n  background: #E8F5E9;\n}\n\n.badge.green.inverted {\n  color: #fff;\n  background: #4CAF50;\n}\n\n.badge.yellow {\n  color: #424242;\n  background: #FFF9C4;\n}\n\n.badge.yellow.inverted {\n  color: #424242;\n  background: #FFEB3B;\n}\n\n.badge.red {\n  color: #F44336;\n  background: #FFEBEE;\n}\n\n.badge.red.inverted {\n  color: #fff;\n  background: #F44336;\n}\n\n.badge.light {\n  color: #424242;\n  background: rgba(255, 255, 255, 0.75);\n}\n\n.badge.dark {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.badge.square {\n  border-radius: 0;\n}\n\n.badge.pill {\n  border-radius: 3rem;\n}\n\n.badge.dot {\n  display: inline-block;\n  width: 8px;\n  height: 8px;\n  padding: 0;\n  vertical-align: top;\n  font-size: 0;\n  line-height: 0;\n  text-indent: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  border-radius: 3rem;\n}\n\n.badge .close {\n  margin: 0 -0.25em 0 0.5em;\n}\n\na.badge.inverted:hover {\n  color: #fff;\n  background: #616161;\n}\n\na.badge.active:hover {\n  color: #fff;\n  background: #1976D2;\n}\n\na.badge.blue:hover {\n  background: #BBDEFB;\n}\n\na.badge.blue.inverted:hover {\n  background: #1976D2;\n}\n\na.badge.green:hover {\n  color: #388E3C;\n  background: #C8E6C9;\n}\n\na.badge.green.inverted:hover {\n  color: #fff;\n  background: #388E3C;\n}\n\na.badge.yellow:hover {\n  color: #424242;\n  background: #FFF176;\n}\n\na.badge.yellow.inverted:hover {\n  color: #424242;\n  background: #FDD835;\n}\n\na.badge.red:hover {\n  color: #D32F2F;\n  background: #FFCDD2;\n}\n\na.badge.red.inverted:hover {\n  color: #fff;\n  background: #D32F2F;\n}\n\na.badge.light:hover {\n  color: #424242;\n  background: white;\n}\n\na.badge.dark:hover {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.75);\n}\n\n.button .badge:not(.dot) {\n  display: inline;\n  padding: 0.25em 0.5em;\n}\n\n.button-badge-left .badge {\n  margin-left: -0.5em;\n  margin-right: 0.5em;\n}\n\n.button-badge-right .badge {\n  margin-left: 0.5em;\n  margin-right: -0.5em;\n}\n\n/*==============================================================================\n  @Custom - scss/custom/_custom.scss\n==============================================================================*/\n/*==============================================================================\n  @End - scss/custom/_custom.scss\n==============================================================================*/\n","// Set file variable\n$filename: 'scss/elements/_typography.scss';\n\n/*==============================================================================\n  @Typography - #{$filename}\n===============================================================================*/\n\nhtml {\n  font-size: $base-font-size;\n}\n\nbody {\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  line-height: $base-line-height;\n  font-weight: $base-font-weight;\n  color: $color;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n\n@if map-get($anchors, 'output') {\n  a {\n    @include make-anchor();\n  }\n}\n\n@if map-get($headings, 'output') {\n  @include build-headings();\n}\n\n@if $text-elements {\n\n  p {\n    margin: 1em 0;\n  }\n  strong {\n    font-weight: bold;\n  }\n  em {\n    font-style: italic;\n  }\n  small {\n    font-size: 0.8em;\n  }\n  mark {\n    background: rgba(#ff0, 0.5);\n  }\n  cite {\n    font-style: italic;\n  }\n  abbr[title],\n  abbr[data-original-title] {\n    cursor: help;\n    text-decoration: underline dotted;\n  }\n\n}\n\n@if $text-modifiers {\n\n  .text-lead {\n    font-size: px-to-em(24px);\n    line-height: 1.4em;\n    color: $color-dark;\n    font-weight: font-weight('light');\n\n    a {\n      text-decoration: none;\n    }\n  }\n\n  .text-small {\n    font-size: 0.8em;\n    line-height: 1.5em;\n  }\n  .text-soften {\n    font-weight: $base-font-weight;\n    color: $color-light;\n  }\n  .text-harden {\n    font-weight: bold;\n    color: $color-dark;\n  }\n\n  .text-left {\n    text-align: left;\n  }\n  .text-center {\n    text-align: center;\n  }\n  .text-right {\n    text-align: right;\n  }\n  .text-justify {\n    text-align: justify;\n  }\n  .text-nowrap {\n    white-space: nowrap;\n  }\n\n  .text-lowercase {\n    text-transform: lowercase;\n  }\n  .text-uppercase {\n    text-transform: uppercase;\n  }\n  .text-capitalize {\n    text-transform: capitalize;\n  }\n\n}\n","////////////////////////////////////////////////////////////////////////////////\n// @Functions\n////////////////////////////////////////////////////////////////////////////////\n\n// Map Extend\n// jQuery-style extend function for when `map-merge()` isn't enough. Use when\n// we need to merge more than two maps and/or need a merge to be recursive.\n// @param $map\n//   @type first map\n// @param $maps\n//   @type list of maps\n// @param $deep\n//   @desc Whether or not to enable recursive mode.\n//   @type boolean\n//   @default false\n// @return merged map\n@function map-extend($map, $maps.../*, $deep */) {\n  $last: nth($maps, -1);\n  $deep: $last == true;\n  $max: if($deep, length($maps) - 1, length($maps));\n\n  // Loop through all maps in $maps...\n  @for $i from 1 through $max {\n    // Store current map\n    $current: nth($maps, $i);\n\n    // If not in deep mode, simply merge current map with map\n    @if not $deep {\n      $map: map-merge($map, $current);\n    } @else {\n      // If in deep mode, loop through all tuples in current map\n      @each $key, $value in $current {\n\n        // If value is a nested map and same key from map is a nested map as well\n        @if type-of($value) == \"map\" and type-of(map-get($map, $key)) == \"map\" {\n          // Recursive extend\n          $value: map-extend(map-get($map, $key), $value, true);\n        }\n\n        // Merge current tuple with map\n        $map: map-merge($map, ($key: $value));\n      }\n    }\n  }\n\n  @return $map;\n}\n\n// Map Fetch\n// An easy way to fetch a deep value in a multi-level map. Works much like\n// map-get() except that you pass multiple keys as the second variable argument\n// to go down multiple levels in the nested map.\n// @param $map\n//   @type map\n// @param $keys\n//   @type list\n// @return map value\n@function map-fetch($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n// Map Set\n// An easy way to set a deep value in a multi-level map. By passing in a map,\n// value and keys to the original map value you want changed.\n// @param $map\n//   @type map\n// @param $value\n//   @type value\n// @param $keys\n//   @type list\n// @return updated map value\n@function map-set($map, $value, $keys) {\n  $maps: ($map,);\n  $result: null;\n\n  @if type-of(nth($keys, -1)) == \"map\" {\n    @warn \"The last key you specified is a map; it will be overrided with `#{$value}`.\";\n  }\n\n  @if length($keys) == 1 {\n    @return map-merge($map, ($keys: $value));\n  }\n\n  @for $i from 1 through length($keys) - 1 {\n    $current-key: nth($keys, $i);\n    $current-map: nth($maps, -1);\n    $current-get: map-get($current-map, $current-key);\n    @if $current-get == null {\n      @error \"Key `#{$key}` doesn't exist at current level in map.\";\n    }\n    $maps: append($maps, $current-get);\n  }\n\n  @for $i from length($maps) through 1 {\n    $current-map: nth($maps, $i);\n    $current-key: nth($keys, $i);\n    $current-val: if($i == length($maps), $value, $result);\n    $result: map-merge($current-map, ($current-key: $current-val));\n  }\n\n  @return $result;\n}\n\n// Strip Units\n// Srtips the unit from a value. e.g. 12px -> 12.\n// @param $val\n//   @type unit (pixel, em, percent, number)\n// @return number\n@function strip-units($val) {\n  @return ($val / ($val * 0 + 1));\n}\n\n// Pixels to Ems\n// Converts a pixel value to ems.\n// @param $px\n//   @type unit (pixel, number)\n// @param $base-font-size\n//   @type unit (pixel, number)\n//   @default $base-font-size\n// @return unit (em)\n@function px-to-em($px, $base : $base-font-size) {\n  @if unitless($px) {\n    $px: 1px * $px;\n  }\n  @if unitless($base) {\n    $base: 1px * $base;\n  }\n  $px: ($px / $base) * 1em;\n  @return strip-units($px) * 1em;\n}\n\n// Pixels to Rems\n// Converts a pixel value to rems.\n// @param $px\n//   @type unit (pixel, number)\n// @return unit (rem)\n@function px-to-rem($px) {\n  @if unitless($px) {\n    $px: 1px * $px;\n  }\n  @if unitless($base-font-size) {\n    $base-font-size: 1px * $base-font-size;\n  }\n  $px: ($px / $base-font-size) * 1rem;\n  @return strip-units($px) * 1rem;\n}\n\n// Ems to Pixels\n// Converts an em value to pixels.\n// @param $px\n//   @type unit (em, number)\n// @param $base-font-size\n//   @type unit (pixel, number)\n//   @default $base-font-size\n// @return unit (px)\n@function em-to-px($em, $base : $base-font-size) {\n  @if unitless($em) {\n    $em: 1em * $em;\n  }\n  @if unitless($base) {\n    $base: 1px * $base;\n  }\n  $em: ($em * $base) / 1px;\n  @return strip-units($em) * 1px;\n}\n\n// Font Weight\n// Output the font weight value using the a weight keyword.\n// @param $weight\n//   @type string\n//   @options 'hairline', 'thin', 'extra-light', 'light', 'regular', 'normal',\n//     'medium', 'semi-bold', 'bold', 'extra-bold', 'black'\n@function font-weight($keyword) {\n  $value: null !default;\n\n  @if ($keyword == 'hairline' or $keyword == 'thin') {\n    $value: 100;\n  } @else if ($keyword == 'extra-light') {\n    $value: 200;\n  } @else if ($keyword == 'light') {\n    $value: 300;\n  } @else if ($keyword == 'regular' or $keyword == 'normal') {\n    $value: 400;\n  } @else if ($keyword == 'medium') {\n    $value: 500;\n  } @else if ($keyword == 'semi-bold') {\n    $value: 600;\n  } @else if ($keyword == 'bold') {\n    $value: 700;\n  } @else if ($keyword == 'extra-bold') {\n    $value: 800;\n  } @else if ($keyword == 'black') {\n    $value: 900;\n  }\n\n  @return $value;\n}\n","// Set file variable\n$filename: 'scss/elements/_lists.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @List Variables\n////////////////////////////////////////////////////////////////////////////////\n\n$lists: (\n  'output' : true,\n  'class' : 'list',\n\n  'nth' : odd,\n  'margin' : 1rem 0,\n  'padding' : 1rem,\n\n  'background' : null,\n  'background-stripe' : rgba($black, 0.025),\n  'background-hover' : $yellow-50,\n  'border' : 1px solid rgba($black, 0.1),\n  'border-radius' : $border-radius,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'lists') {\n    $lists: map-extend($lists, map-get($override, 'lists'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Table Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make List\n// Creates the base styles for a list modifer mixin or class. Usually applied\n// directly through a mixin or `%list-base` placeholder.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin make-list($options: ()) {\n  $o: map-merge($lists, $options);\n\n  list-style: none;\n  margin: map-get($o, 'margin');\n  background: map-get($o, 'background');\n\n  > li {\n    margin: 0;\n    padding: map-get($o, 'padding');\n    background-clip: padding-box;\n    @include add-clearfix();\n  }\n\n}\n\n// Add List Rowed\n// Adds borders to a list that divide list items.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-rowed($options: ()) {\n  $o: map-merge($lists, $options);\n\n  > li {\n    border-bottom: map-get($o, 'border');\n  }\n  > li:first-child  {\n    border-top: map-get($o, 'border');\n  }\n\n}\n\n// Add List Bordered\n// Adds borders to a list that wraps the list and divides list items.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-bordered($options: ()) {\n  $o: map-merge($lists, $options);\n\n  border: map-get($o, 'border');\n\n  > li {\n    border-bottom: map-get($o, 'border');\n  }\n  > li:last-child  {\n    border-bottom: 0 none;\n  }\n\n}\n\n// Add List Linked\n// Adds styles for a linked list where the padding is added to the anchor\n// element instead of the list item.\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-linked($options: ()) {\n  $o: map-merge($lists, $options);\n\n  > li {\n    padding: 0;\n  }\n  > li > a {\n    display: block;\n    padding: map-get($o, 'padding');\n    background-clip: padding-box;\n    text-decoration: none;\n    @include add-clearfix();\n  }\n\n}\n\n// Add List Rounded\n// Gives a list rounded borders depending on parameters passed.\n// @param $radius\n//   @type unit (pixel, percent)\n//   @default default ($lists('border-radius'))\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-rounded($radius: default, $options: ()) {\n  $o: map-merge($lists, $options);\n\n  @if ($radius != default) {\n    $o: map-merge($o, ('border-radius': $radius));\n  }\n\n  border-radius: map-get($o, 'border-radius');\n  > li:first-child {\n    border-top-left-radius: map-get($o, 'border-radius');\n    border-top-right-radius: map-get($o, 'border-radius');\n  }\n  > li:last-child {\n    border-bottom-left-radius: map-get($o, 'border-radius');\n    border-bottom-right-radius: map-get($o, 'border-radius');\n  }\n}\n\n// Add List Striped\n// Gives a list items alternating background colors.\n// @param $nth\n//   @type nth (odd, even)\n//   @default default ($lists('nth'))\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-striped($nth: default, $options: ()) {\n  $o: map-merge($lists, $options);\n\n  @if ($nth != default) {\n    $o: map-merge($o, ('nth': $nth));\n  }\n\n  > li:nth-of-type(#{map-get($o, 'nth')}) {\n    background-color: map-get($o, 'background-stripe');\n  }\n\n}\n\n// Add List Hover\n// Gives list hover styles for list items.\n// @param $bg-hover\n//   @type color\n//   @default default ($lists('background-hover'))\n// @param $options\n//   @type map\n//   @default $lists map\n@mixin add-list-hover($bg-hover: default, $options: ()) {\n  $o: map-merge($lists, $options);\n\n  @if ($bg-hover != default) {\n    $o: map-merge($o, ('background-hover': $bg-hover));\n  }\n\n  > li {\n    transition: background-color $transition-duration $transition-timing-function;\n  }\n  > li:hover {\n    background-color: map-get($o, 'background-hover');\n  }\n\n}\n\n/*==============================================================================\n  @Lists - #{$filename}\n==============================================================================*/\n\nul, ol {\n  margin: 1em 0 1em 2em;\n  padding: 0;\n  ul, ol, li {\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n  }\n}\n\n/**\n * Unordered Lists\n */\nul, ul ul ul ul {\n  list-style: disc;\n}\nul ul {\n  list-style: circle;\n}\nul ul ul {\n  list-style: disc;\n}\n\n/**\n * Ordered Lists\n */\nol, ol ol ol ol {\n  list-style: decimal;\n}\nol ol {\n  list-style: lower-alpha;\n}\nol ol ol {\n  list-style: lower-roman;\n}\n\n/**\n * Description Lists\n */\ndl {\n  margin: 1em 0;\n  dt {\n    margin: 1em 0 0;\n    font-weight: bold;\n    color: $color-dark;\n  }\n  dd {\n    margin: 0 0 1em 1em;\n  }\n}\n\n// Check if we should output lists\n@if map-get($lists, 'output') {\n\n/*==============================================================================\n  @List Modifiers - #{$filename}\n==============================================================================*/\n\n/**\n * Base Table Styles\n */\n.#{map-get($lists, 'class')} {\n  @include make-list();\n\n  &.flush > li {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n/**\n * Border Modifiers\n */\n.#{map-get($lists, 'class')}.rowed {\n  @include add-list-rowed();\n}\n.#{map-get($lists, 'class')}.bordered {\n  @include add-list-bordered();\n}\n.#{map-get($lists, 'class')}.linked {\n  @include add-list-linked();\n}\n\n/**\n * Miscellaneous Modifiers\n */\n.#{map-get($lists, 'class')}.rounded {\n  @include add-list-rounded();\n}\n.#{map-get($lists, 'class')}.striped {\n  @include add-list-striped();\n}\n.#{map-get($lists, 'class')}.hover {\n  @include add-list-hover();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_blockquotes.scss';\n\n/*==============================================================================\n  @Blockquotes - #{$filename}\n==============================================================================*/\n\nblockquote {\n  margin: 1rem 0;\n  padding: 0.5em 1.5em;\n  background: $bg-color;\n  border-radius: $border-radius;\n\n  footer,\n  .blockquote-footer {\n    display: block;\n    position: relative;\n    margin: 1rem 0;\n    font-size: 100%;\n  }\n}\n\n@include media-min('medium') {\n\n  blockquote {\n    padding: 1em 2em;\n  }\n\n}\n","// Set file variable\n$filename: 'scss/elements/_code.scss';\n\n/*==============================================================================\n  @Code - #{$filename}\n==============================================================================*/\n\ncode, pre {\n  background: $bg-color;\n  font-family: $font-family-mono;\n  font-size: px-to-em(16px);\n  line-height: 1.5em;\n  border-radius: $border-radius;\n}\ncode {\n  display: inline;\n  margin: 0;\n  padding: 0;\n  white-space: nowrap;\n  line-height: inherit;\n  color: $red;\n  background: none;\n}\npre {\n  margin: 1.5rem 0;\n  padding: 0.75rem;\n  overflow: auto;\n  color: $color-dark;\n\n  code {\n    display: block;\n    margin: 0;\n    padding: 0.75rem;\n    overflow: auto;\n    white-space: pre;\n    font-size: 100%;\n    color: inherit;\n    background: none;\n    border: 0 none;\n  }\n  &.max-height {\n    max-height: 400px;\n  }\n}\n","// Set file variable\n$filename: 'scss/elements/_tables.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Table Variables\n////////////////////////////////////////////////////////////////////////////////\n\n$tables: (\n  'output' : true,\n  'class' : 'table',\n\n  'valign' : top,\n  'nth' : odd,\n  'stripe' : horizontal,\n\n  'margin' : 2em 0,\n  'padding-condensed' : 0.25em 0.5em,\n  'padding' : 0.5em 0.75em,\n  'padding-expanded' : 1em 1.25em,\n\n  'background' : none,\n  'background-stripe' : rgba($black, 0.05),\n  'background-hover' : $yellow-50,\n  'border' : 1px solid rgba($black, 0.1),\n  'border-radius' : $border-radius,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'tables') {\n    $tables: map-extend($tables, map-get($override, 'tables'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Table Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Table Base\n// Creates the base styles for a table modifer mixin or class. Usually applied\n// directly through a mixin or `%table-base` placeholder.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin make-table($options: ()) {\n  $o: map-merge($tables, $options);\n  margin: map-get($o, 'margin');\n  background: map-get($o, 'background');\n  border-collapse: separate;\n  td, th {\n    padding: map-get($o, 'padding');\n  }\n}\n\n// Add Table Rowed\n// Adds borders to a table that divide table rows.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-rowed($options: ()) {\n  $o: map-merge($tables, $options);\n  td, th {\n    border-bottom: map-get($o, 'border');\n  }\n  thead:first-child,\n  tfoot:first-child,\n  tbody:first-child {\n    tr:first-child {\n      td, th {\n        border-top: map-get($o, 'border');\n      }\n    }\n  }\n}\n\n// Add Table Columned\n// Adds borders to a table that divide table columns.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-columned($options: ()) {\n  $o: map-merge($tables, $options);\n  td, th {\n    border-right: map-get($o, 'border');\n  }\n  tr {\n    td:first-child, th:first-child {\n      border-left: map-get($o, 'border');\n    }\n  }\n}\n\n// Add Table Bordered\n// Adds borders to a table that divide table cells.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-bordered($options: ()) {\n  $o: map-merge($tables, $options);\n  @include add-table-rowed($o);\n  @include add-table-columned($o);\n}\n\n// Add Table Size\n// Toggles a tables padding size between condensed, expanded or a custom\n// padding value.\n// @param $size\n//   @type condensed | expanded | unit (pixel, em, percent)\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-size($size, $options: ()) {\n  $o: map-merge($tables, $options);\n  @if ($size == condensed) {\n    td, th {\n      padding: map-get($o, 'padding-condensed');\n    }\n  } @else if ($size == expanded) {\n    td, th {\n      padding: map-get($o, 'padding-expanded');\n    }\n  } @else {\n    td, th {\n      padding: $size;\n    }\n  }\n}\n\n// Add Table Rounded\n// Gives a table rounded borders depending on parameters passed.\n// @param $radius\n//   @type unit (pixel, percent)\n//   @default default ($tables('border-radius'))\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-rounded($radius: default, $options: ()) {\n  $o: map-merge($tables, $options);\n\n  @if ($radius != default) {\n    $o: map-merge($o, ('border-radius': $radius));\n  }\n\n  border-radius: map-get($o, 'border-radius');\n\n  thead:first-child,\n  tfoot:first-child,\n  tbody:first-child {\n    tr:first-child {\n      td:first-child, th:first-child {\n        border-top-left-radius: map-get($o, 'border-radius');\n      }\n      td:last-child, th:last-child {\n        border-top-right-radius: map-get($o, 'border-radius');\n      }\n    }\n  }\n  thead:last-child,\n  tfoot:last-child,\n  tbody:last-child {\n    tr:last-child {\n      td:first-child, th:first-child {\n        border-bottom-left-radius: map-get($o, 'border-radius');\n      }\n      td:last-child, th:last-child {\n        border-bottom-right-radius: map-get($o, 'border-radius');\n      }\n    }\n  }\n}\n\n// Add Table Stripes\n// Gives a table stripes either vertical or horizontal depending on\n// parameters passed.\n// @param $nth\n//   @type nth (odd, even)\n//   @default default ($tables('nth'))\n// @param $dir\n//   @type orientation of stripes (vertical, horizontal)\n//   @default default ($tables('stripe'))\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-stripes($nth: default, $dir: default, $options: ()) {\n  $o: map-merge($tables, $options);\n  @if ($nth != default) {\n    $o: map-merge($o, ('nth': $nth));\n  }\n  @if ($dir != default) {\n    $o: map-merge($o, ('stripe': $dir));\n  }\n  @if (map-get($o, 'stripe') == vertical) {\n    tr {\n      td:nth-of-type(#{map-get($o, 'nth')}),\n      th:nth-of-type(#{map-get($o, 'nth')}) {\n        background-color: map-get($o, 'background-stripe');\n      }\n    }\n  } @else {\n    tbody tr:nth-of-type(#{map-get($o, 'nth')}) {\n      td, th {\n        background-color: map-get($o, 'background-stripe');\n      }\n    }\n  }\n}\n\n// Add Table Hover\n// Gives table hover styles for rows.\n// @param $bg-hover\n//   @type color\n//   @default default ($tables('background-hover'))\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin add-table-hover($bg-hover: default, $options: ()) {\n  $o: map-merge($tables, $options);\n  @if ($bg-hover != default) {\n    $o: map-merge($o, ('background-hover': $bg-hover));\n  }\n  tbody tr td {\n    transition: background-color $transition-duration $transition-timing-function;\n  }\n  tbody tr:hover td {\n    background-color: map-get($o, 'background-hover');\n  }\n}\n\n// Add Table Alignment\n// Sets the vertical and text alignment of a table if a parameter is passed.\n// @param $options\n//   @type map ('vertical-align', 'text-align')\n//   @default map (none, none)\n@mixin add-table-alignment($options: ()) {\n  $o: map-merge((\n    'vertical-align' : none,\n    'text-align' : none,\n  ), $options);\n  @if (map-get($o, 'vertical-align') != none) {\n    tr {\n      vertical-align: map-get($o, 'vertical-align');\n    }\n  }\n  @if (map-get($o, 'text-align') != none) {\n    tr td, tr th {\n      text-align: map-get($o, 'text-align');\n    }\n  }\n}\n\n// Make Table Responsive\n// When added to a wrapping element of a table, will make the table responsive\n// for tablets and below.\n// @param $options\n//   @type map\n//   @default $tables map\n@mixin make-table-responsive($options: ()) {\n  $o: map-merge($tables, $options);\n  margin: map-get($o, 'margin');\n  > table {\n    margin: 0;\n  }\n  @include media-max('medium') {\n    overflow: auto;\n    > table td,\n    > table th {\n      white-space: nowrap;\n    }\n  }\n}\n\n/*==============================================================================\n  @Tables - #{$filename}\n==============================================================================*/\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n  max-width: 100%;\n  margin: 1rem 0;\n  overflow: auto;\n\n  tr {\n    vertical-align: map-get($tables, 'valign');\n  }\n  th {\n    color: $color-dark;\n    font-weight: bold;\n    text-align: left;\n  }\n}\n\n// Check if we should output tables\n@if map-get($tables, 'output') {\n\n/*==============================================================================\n  @Table Modifiers - #{$filename}\n==============================================================================*/\n\n/**\n * Base Modifiers Styles\n */\n.#{map-get($tables, 'class')} {\n  @include make-table();\n}\n\n/**\n * Border Variations\n */\n.#{map-get($tables, 'class')}.rowed {\n  @include add-table-rowed();\n}\n.#{map-get($tables, 'class')}.columned {\n  @include add-table-columned();\n}\n.#{map-get($tables, 'class')}.bordered {\n  @include add-table-bordered();\n}\n\n/**\n * Padding Variations\n */\n.#{map-get($tables, 'class')}.condensed {\n  @include add-table-size(condensed);\n}\n.#{map-get($tables, 'class')}.expanded {\n  @include add-table-size(expanded);\n}\n\n/**\n * Miscellaneous Modifiers\n */\n.#{map-get($tables, 'class')}.rounded {\n  @include add-table-rounded();\n}\n.#{map-get($tables, 'class')}.striped {\n  @include add-table-stripes();\n}\n.#{map-get($tables, 'class')}.striped-horizontal {\n  @include add-table-stripes(default, horizontal);\n}\n.#{map-get($tables, 'class')}.striped-vertical {\n  @include add-table-stripes(default, vertical);\n}\n.#{map-get($tables, 'class')}.hover {\n  @include add-table-hover();\n}\n\n/**\n * Table Alignment Modifiers\n */\n.#{map-get($tables, 'class')}.valign-baseline {\n  @include add-table-alignment(('vertical-align': baseline));\n}\n.#{map-get($tables, 'class')}.valign-top {\n  @include add-table-alignment(('vertical-align': top));\n}\n.#{map-get($tables, 'class')}.valign-middle {\n  @include add-table-alignment(('vertical-align': middle));\n}\n.#{map-get($tables, 'class')}.valign-bottom {\n  @include add-table-alignment(('vertical-align': bottom));\n}\n.#{map-get($tables, 'class')}.align-left {\n  @include add-table-alignment(('text-align': left));\n}\n.#{map-get($tables, 'class')}.align-center {\n  @include add-table-alignment(('text-align': center));\n}\n.#{map-get($tables, 'class')}.align-right {\n  @include add-table-alignment(('text-align': right));\n}\n\n/**\n * Responsive Tables\n */\n.#{map-get($tables, 'class')}-responsive {\n  @include make-table-responsive();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_images.scss';\n\n/*==============================================================================\n  @Images - #{$filename}\n==============================================================================*/\n\nimg {\n  display: block;\n  margin: 1rem 0;\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Alignment Modifiers\n */\nimg.align-center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\np img.align-center {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nimg.align-left {\n  float: left;\n  margin: 1rem 1.5rem 1rem 0;\n}\np img.align-left {\n  margin-top: 0;\n\n}\n\nimg.align-right {\n  float: right;\n  margin: 1rem 0 1rem 1.5rem;\n}\np img.align-right {\n  margin-top: 0;\n}\n\n/**\n * Stylistic Modifiers\n */\nimg.rounded  {\n  border-radius: $border-radius;\n}\nimg.circle   {\n  border-radius: 50%;\n}\nimg.polaroid {\n  background: $white;\n  background-clip: padding-box;\n  padding: 0.5rem;\n  border: 1px solid rgba($black, 0.2);\n  box-shadow: 0 1px 3px rgba($black, 0.1);\n}\n","// Set file variable\n$filename: 'scss/elements/_rules.scss';\n\n/*==============================================================================\n  @Rules - #{$filename}\n==============================================================================*/\n\nhr {\n  display: block;\n  height: 0;\n  width: 100%;\n  clear: both;\n  margin: 2rem 0;\n  padding: 0;\n  background: none;\n  border: 0 none;\n  border-bottom: 1px solid $border-color;\n}\n\n/**\n * Stylistic Modifiers\n */\nhr.dotted {\n  border-bottom: 1px dotted rgba($black, 0.25);\n}\nhr.dashed {\n  border-bottom: 1px dashed rgba($black, 0.25);\n}\nhr.double {\n  border-bottom: 3px double $border-color;\n}\n","// Set file variable\n$filename: 'scss/elements/_forms.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Form Variables\n////////////////////////////////////////////////////////////////////////////////\n\n$forms: (\n  'vertical-spacing' : 1.5rem,\n  'vertical-align' : 0.75rem,\n  'font-family' : inherit,\n  'base-font-size' : 1em,\n  'base-line-height' : 1.5em,\n  'font-size' : 1em,\n  'line-height' : 1.5em,\n  'color' : $color,\n  'color-label' : $color-dark,\n  'color-placeholder' : #aaa,\n  'color-select-arrow' : $color-dark,\n  'border-radius' : $border-radius,\n\n  'input' : (\n    'padding' : 0.75em,\n    'background' : rgba($white, 0.5),\n    'border' : 1px solid rgba($black, 0.2),\n    'box-shadow' : (0 1px 3px rgba($black, 0), inset 0 1px 3px rgba($black, 0.05)),\n\n    'focus' : (\n      'background': rgba($white, 1),\n      'border': 1px solid rgba($blue, 1),\n      'box-shadow': (0 1px 3px rgba($black, 0.05), inset 0 1px 3px rgba($black, 0)),\n    )\n  ),\n\n  'choice' : (\n    'padding' : 0.75em 0.75em 0.75em 2.25em,\n    'background' : rgba($black, 0.05),\n    'border' : 1px solid transparent,\n    'box-shadow' : none,\n  )\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'forms') {\n    $forms: map-extend($forms, map-get($override, 'forms'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Form Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Placeholder\n// Sets the placeholder text color for input fields that use the\n// placeholder attribute.\n// @param $color\n//   @type color\n//   @default $forms('color-placeholder')\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin placeholder($color: default, $options: ()) {\n  $o: map-merge($forms, $options);\n\n  @if ($color != default) {\n    $o: map-merge($o, ('color-placeholder': $color));\n  }\n\n  &::-webkit-input-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &::-moz-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &:-moz-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &:-ms-input-placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n  &::placeholder {\n    color: map-get($o, 'color-placeholder');\n  }\n}\n\n// Make Form Group Base\n// Creates the styles for a base form group by applying vertical spacing.\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin make-form-group-base($options: ()) {\n  $o: map-merge($forms, $options);\n\n  margin-bottom: map-get( $o, 'vertical-spacing' );\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n// Make Form Group Inline\n// Creates the styles for making an inline form group element.\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin make-form-group-inline($options: ()) {\n  $o: map-merge($forms, $options);\n\n  @include add-clearfix();\n  margin-right: -(map-get( $forms, 'vertical-align' ));\n  margin-bottom: map-get( $o, 'vertical-spacing' ) / 2;\n\n  &:last-child {\n    margin-bottom: -(map-get( $o, 'vertical-spacing' ) / 2);\n  }\n}\n\n// Make Input Inline\n// Creates the styles for making an inline form element.\n// @param $options\n//   @type map\n//   @default $forms map\n@mixin make-input-inline($options: ()) {\n  $o: map-merge($forms, $options);\n\n  float: left;\n  width: auto;\n  margin-right: map-get( $o, 'vertical-align' );\n  margin-bottom: map-get( $o, 'vertical-spacing' ) / 2;\n\n  @if (variable-exists(class-float-right)) {\n    @if ($class-float-right) {\n      &.#{$class-float-right} {\n        float: right;\n      }\n    }\n  }\n}\n\n/*==============================================================================\n  @Form Structure - #{$filename}\n==============================================================================*/\n\n/**\n * Form Structure Elements\n */\nform {\n  margin: (map-get( $forms, 'vertical-spacing' ) * 1.5) 0;\n  font-size: map-get($forms, 'base-font-size');\n  line-height: map-get($forms, 'base-line-height');\n}\n\n/**\n * Fieldset\n */\nfieldset {\n  margin: map-get( $forms, 'vertical-spacing' ) 0;\n  padding: 0;\n  border: 0 none;\n}\n\n/**\n * Legends\n */\nlegend {\n  display: inline-block;\n  margin: 0 -(map-get( $forms, 'vertical-spacing' ) / 2) (map-get( $forms, 'vertical-spacing' ) / 2);\n  padding: 0 (map-get( $forms, 'vertical-spacing' ) / 2);\n  font-size: px-to-em(22px);\n  line-height: 1.5em;\n  font-weight: bold;\n  color: map-get( $forms, 'color-label' );\n  border: 0 none;\n}\n\nform {\n  .row {\n    margin-bottom: map-get( $forms, 'vertical-spacing' ) / 2;\n  }\n  .row:last-child {\n    margin-bottom: 0;\n  }\n  .col {\n    margin-bottom: map-get( $forms, 'vertical-spacing' ) / 2;\n  }\n  .col:last-child {\n    margin-bottom: 0;\n  }\n}\n\n@include media-min('medium') {\n  form .col {\n    margin-bottom: 0;\n  }\n}\n\n/*==============================================================================\n  @Form Groups - #{$filename}\n==============================================================================*/\n\n/**\n * Form Group\n */\n.form-group {\n  @include make-form-group-base();\n}\n.form-group.inline {\n  @include make-form-group-inline();\n\n  > * {\n    @include make-input-inline();\n  }\n  .form-group,\n  .input-group {\n    display: inline-block;\n    vertical-align: top;\n    margin: 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0 0;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n/**\n * Header Group\n */\n.form-header {\n  @include make-form-group-base();\n  color: $color-light;\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: (map-get( $forms, 'vertical-spacing' ) / 3) 0;\n    font-size: (map-get($forms, 'font-size') * 1.4);\n    line-height: 1.2em;\n  }\n  p {\n    margin: (map-get( $forms, 'vertical-spacing' ) / 3) 0;\n    color: $color-light;\n  }\n}\n\n/**\n * Action Group\n */\n.form-action {\n  @include make-form-group-base();\n  @include add-clearfix();\n\n  .button,\n  .input-align {\n    float: left;\n    margin: 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0 0;\n\n    &:last-child {\n      margin-right: 0;\n    }\n\n    @if (variable-exists(class-float-right)) {\n      @if ($class-float-right) {\n        &.#{$class-float-right} {\n          float: right;\n        }\n      }\n    }\n  }\n  .input-align {\n    margin-top: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n\n  &.form-action-center {\n    text-align: center;\n\n    .button,\n    .input-align {\n      display: inline-block;\n      float: none;\n\n    }\n  }\n}\n\n/**\n * Input Group\n */\n.input-group {\n  @include make-form-group-base();\n}\n.input-group.inline {\n  @include make-form-group-inline();\n\n  > * {\n    @include make-input-inline();\n  }\n}\n\n/*==============================================================================\n  @Form Elements - #{$filename}\n==============================================================================*/\n\n/**\n * Labels\n */\nlabel {\n  display: inline-block;\n  margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 3) 0;\n  font-size: map-get($forms, 'font-size');\n  line-height: map-get($forms, 'line-height');\n  font-weight: 600;\n  color: map-get( $forms, 'color-label' );\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &.sub {\n    font-weight: normal;\n  }\n  &.hide {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0,0,0,0);\n    border: 0;\n  }\n  &.block {\n    display: block;\n    padding-top: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n  &.inline {\n    display: inline-block;\n    padding-top: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n}\n.inline {\n  label.block,\n  label.inline {\n    padding-bottom: map-get( $forms, 'vertical-align' );\n    border-top: map-fetch( $forms, 'input', 'border' );\n    border-color: transparent;\n  }\n}\n\n/**\n * Base Inputs\n */\n.input,\n.checkbox,\n.radio,\n.choice {\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n/**\n * Text Inputs\n */\n.input {\n  padding: map-fetch( $forms, 'input', 'padding' );\n  font-family: map-get( $forms, 'font-family' );\n  font-size: map-get( $forms, 'font-size' );\n  line-height: map-get( $forms, 'line-height' );\n  color: map-get( $forms, 'color' );\n  background-color: map-fetch( $forms, 'input', 'background' );\n  border: map-fetch( $forms, 'input', 'border' );\n  box-shadow: map-fetch( $forms, 'input', 'box-shadow' );\n  box-sizing: border-box;\n  border-radius: map-get( $forms, 'border-radius' );\n  transition: border-color $transition-duration, background-color $transition-duration, box-shadow $transition-duration;\n  @include placeholder();\n\n  &:focus {\n    outline: none;\n    background-color: map-fetch( $forms, 'input', 'focus', 'background' );\n    border: map-fetch( $forms, 'input', 'focus', 'border' );\n    box-shadow: map-fetch( $forms, 'input', 'focus', 'box-shadow' );\n  }\n\n  &.disabled,\n  &[readonly],\n  &[disabled] {\n    opacity: 0.5;\n    background: rgba($black, 0.05);\n  }\n}\n\n/**\n * Checkbox, Radio & Choice Classes\n */\n.checkbox,\n.radio,\n.choice {\n  cursor: pointer;\n  color: $color;\n  font-weight: normal;\n\n  &.disabled {\n    opacity: 0.5;\n  }\n}\n.choice {\n  padding: map-fetch( $forms, 'choice', 'padding' );\n  background: map-fetch( $forms, 'choice', 'background' );\n  border: map-fetch( $forms, 'choice', 'border' );\n  box-shadow: map-fetch( $forms, 'choice', 'box-shadow' );\n  border-radius: map-get( $forms, 'border-radius' );\n\n  input[type=\"checkbox\"],\n  input[type=\"radio\"] {\n    position: absolute;\n    top: auto;\n    margin: 5px 0 0 -20px;\n  }\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  position: relative;\n  top: -1px;\n  margin: 0 5px 0 0;\n}\n\n/**\n * Other Inputs\n */\ninput[type=\"file\"],\ninput[type=\"range\"] {\n  display: block;\n  margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0;\n}\ninput[type=\"range\"] {\n  width: 100%;\n}\ninput[type=\"search\"] {\n  -webkit-appearance: none;\n}\ninput[type=\"color\"].input {\n  width: 3.125rem;\n  height: 3.125rem;\n  padding: (map-fetch( $forms, 'input', 'padding' ) / 3);\n}\n\n/**\n * Textarea\n */\ntextarea.input {\n  height: auto;\n  max-width: 100%;\n}\n\n/**\n * Select\n */\nselect.input {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='4'><polygon fill='\"+ map-get($forms, 'color-select-arrow') +\"' points='0,0 3,4 3,4 6,0 '/></svg>\");\n  background-position: 100% center;\n  background-repeat: no-repeat;\n  padding-right: 30px;\n}\nselect[multiple].input,\nselect[size].input {\n  height: auto;\n  padding: map-fetch( $forms, 'input', 'padding' );\n  background-image: none;\n}\n\n/*==============================================================================\n  @Form Utilities - #{$filename}\n==============================================================================*/\n\n/**\n * Notes\n */\n.note {\n  margin-bottom: map-get( $forms, 'vertical-spacing' ) / 2;\n  font-size: map-get($forms, 'font-size');\n  color: $color-light;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  p {\n    margin: 0 0 (map-get( $forms, 'vertical-spacing' ) / 2) 0;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\nlabel + .note {\n  margin-top: 0;\n}\n.form-group + .note,\n.input-group + .note {\n  margin-top: -(map-get( $forms, 'vertical-spacing' ) / 2);\n}\n\n/**\n * Required Classes\n */\n.req {\n  color: $red;\n}\n\n/**\n * Inline Inputs\n */\nlabel.inline,\n.button.inline,\n.input.inline,\n.checkbox.inline,\n.radio.inline,\n.choice.inline,\n.inline label,\n.inline .button,\n.inline .input,\n.inline .checkbox,\n.inline .radio,\n.inline .choice {\n  @include make-input-inline();\n}\n\n/**\n * Disabled\n */\n.disabled,\nfieldset[disabled] {\n  input[type=\"file\"],\n  input[type=\"range\"],\n  input[type=\"checkbox\"],\n  input[type=\"radio\"],\n  .input,\n  .checkbox,\n  .radio,\n  .choice {\n    opacity: 0.5;\n  }\n  .input {\n    background: rgba($black, 0.05);\n  }\n}\n\n/*==============================================================================\n  @Validation States - #{$filename}\n==============================================================================*/\n\n/**\n * Success\n */\n// Success class applied to elements\n.input {\n  &.success {\n    border-color: $green;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.success {\n    color: $green-900;\n  }\n}\n.choice {\n  &.success {\n    background-color: $green-50;\n  }\n}\n\n// Success class applied to wrapper\n.success {\n  .input {\n    border-color: $green;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $green-900;\n  }\n  .choice {\n    background-color: $green-50;\n  }\n}\n\n/**\n * Warning\n */\n// Warning class applied to elements\n.input {\n  &.warning {\n    border-color: $yellow-700;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.warning {\n    color: $yellow-700;\n  }\n}\n.choice {\n  &.warning {\n    background-color: $yellow-100;\n  }\n}\n\n// Warning class applied to wrapper\n.warning {\n  .input {\n    border-color: $yellow-700;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $yellow-700;\n  }\n  .choice {\n    background-color: $yellow-100;\n  }\n}\n\n/**\n * Error\n */\n// Error class applied to elements\n.input {\n  &.error {\n    border-color: $red;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.error {\n    color: $red-900;\n  }\n}\n.choice {\n  &.error {\n    background-color: $red-50;\n  }\n}\n\n// Error class applied to wrapper\n.error {\n  .input {\n    border-color: $red;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $red-900;\n  }\n  .choice {\n    background-color: $red-50;\n  }\n}\n\n/**\n * Active\n */\n// Active class applied to elements\n.input {\n  &.active {\n    border-color: $blue;\n  }\n}\n.checkbox,\n.radio,\n.note {\n  &.active {\n    color: $blue-900;\n  }\n}\n.choice {\n  &.active {\n    background-color: $blue-50;\n  }\n}\n\n// Active class applied to wrapper\n.active {\n  .input {\n    border-color: $blue;\n  }\n  .checkbox,\n  .radio,\n  .note {\n    color: $blue-900;\n  }\n  .choice {\n    background-color: $blue-50;\n  }\n}\n","// Set file variable\n$filename: 'scss/elements/_buttons.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Buttons Map\n////////////////////////////////////////////////////////////////////////////////\n\n$buttons: (\n  'output' : true,\n  'output-modifiers' : true,\n  'class' : 'button',\n\n  'display' : inline-block,\n  'margin' : 0,\n  'padding' : px-to-rem(12px) px-to-rem(24px),\n  'vertical-align' : top,\n  'font-family' : inherit,\n  'font-size' : px-to-em(16px),\n  'line-height' : px-to-rem(24px),\n  'font-weight' : inherit,\n  'text-decoration' : none,\n  'background' : $bg-color,\n  'background-clip' : border-box,\n  'border' : 1px solid transparent,\n  'border-radius' : $border-radius,\n  'transition-property' : all,\n  'transition-duration' : 0.75s,\n  'transition-timing-function' : linear,\n\n  'modifiers' : (\n    'default' : (\n      'color' : $color,\n      'background' : $bg-color,\n      'transition-duration' : 0.75s,\n      'hover' : (\n        'color' : $color,\n        'background' : darken($bg-color, 5%),\n        'border-color' : transparent,\n        'transition-duration' : 0.1s,\n      ),\n      'focus' : (\n        'background' : darken($bg-color, 5%),\n        'transition-duration' : 0.1s,\n      ),\n      'active' : (\n        'transition-duration' : 0,\n      ),\n    ),\n    'primary' : (\n      'selector' : '&.primary, &.blue',\n      'color' : $white,\n      'background' : $blue,\n      'hover' : (\n        'color' : $white,\n        'background' : $blue-700,\n      ),\n    ),\n    'secondary' : (\n      'selector' : '&.secondary, &.gray',\n      'color' : $white,\n      'background' : $gray,\n      'hover' : (\n        'color' : $white,\n        'background' : $gray-700,\n      ),\n    ),\n    'success' : (\n      'selector' : '&.success, &.green',\n      'color' : $white,\n      'background' : $green,\n      'hover' : (\n        'color' : $white,\n        'background' : $green-700,\n      ),\n    ),\n    'warning' : (\n      'selector' : '&.warning, &.yellow',\n      'color' : $color,\n      'background' : $yellow,\n      'hover' : (\n        'color' : $color,\n        'background' : $yellow-600,\n      ),\n    ),\n    'danger' : (\n      'selector' : '&.danger, &.red',\n      'color' : $white,\n      'background' : $red,\n      'hover' : (\n        'color' : $white,\n        'background' : $red-700,\n      ),\n    ),\n    'light': (\n      'color': $color,\n      'background': rgba($white, 0.75),\n      'hover': (\n        'color': $color,\n        'background': rgba($white, 1),\n      ),\n    ),\n    'dark': (\n      'color': $white,\n      'background': rgba($black, 0.5),\n      'hover': (\n        'color': $white,\n        'background': rgba($black, 0.75),\n      ),\n    ),\n    'small' : (\n      'padding' : px-to-rem(6px) px-to-rem(14px),\n      'font-size' : px-to-em(14px),\n      'line-height' : px-to-rem(20px),\n    ),\n    'large' : (\n      'padding' : px-to-rem(16px) px-to-rem(32px),\n      'font-size' : px-to-em(20px),\n      'line-height' : px-to-rem(26px),\n    ),\n    'block' : (\n      'display' : block,\n      'width' : 100%,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'buttons') {\n    $buttons: map-extend($buttons, map-get($override, 'buttons'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Button Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Button\n// Creates the base styles for a button modifer mixin or class. Usually applied\n// directly through a base list class, mixin or an extend placeholder.\n// @param $options\n//   @type map\n//   @default $buttons map\n@mixin make-button($options: ()) {\n  $o: map-extend($buttons, $options, true);\n\n  cursor: pointer;\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false);\n\n  @content;\n\n}\n\n// Check if we should output buttons\n@if map-get($buttons, 'output') {\n\n/*==============================================================================\n  @Buttons - #{$filename}\n==============================================================================*/\n\n.#{map-get($buttons, 'class')} {\n  @include make-button();\n}\n\n// Check if we should output notice modifiers\n@if map-get($buttons, 'output-modifiers') {\n  .#{map-get($buttons, 'class')} {\n    @include add-modifiers($buttons);\n  }\n} // End @if output-modifiers\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_icons.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Icons Map\n////////////////////////////////////////////////////////////////////////////////\n\n$icons: (\n  'output' : true,\n  'output-buttons' : true,\n  'class' : 'icon',\n  'class-symbols' : 'svg-symbols',\n\n  'display' : inline-block,\n  'width' : 1em,\n  'height' : 1em,\n  'margin-top' : -0.3em,\n  'margin-bottom' : -0.1em,\n  'font-size' : px-to-rem(24px),\n  'vertical-align' : null,\n\n  'stroke' : currentColor,\n  'stroke-width' : 2px,\n  'stroke-linecap' : round,\n  'stroke-linejoin' : round,\n  'fill' : none,\n\n  'buttons' : (\n    'gap' : 0.25em,\n    'margin-top-small' : null,\n    'margin-top-large' : -0.2em,\n    'font-size-small' : px-to-rem(18px),\n    'font-size-large' : px-to-rem(30px),\n    'indent-small' : -0.125em,\n    'indent' : -0.25em,\n    'indent-large' : -0.35em\n  )\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'icons') {\n    $icons: map-extend($icons, map-get($override, 'icons'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Icons Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Hide SVG Symbols\n// Adds styles for hiding your SVG symbols file\n@mixin hide-svg-symbols() {\n  border: 0 !important;\n  clip: rect(0 0 0 0) !important;\n  height: 1px !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 1px !important;\n}\n\n// Make Icon\n// Creates the base styles foricons.\n// @param $options\n//   @type map\n//   @default $icons map\n@mixin make-icon($options: ()) {\n  $o: map-merge($icons, $options);\n\n  @include add-styles($o);\n\n  stroke: map-get($o, 'stroke');\n  stroke-width: map-get($o, 'stroke-width');\n  stroke-linecap: map-get($o, 'stroke-linecap');\n  stroke-linejoin: map-get($o, 'stroke-linejoin');\n  fill: map-get($o, 'fill');\n\n}\n\n// Add Icon Button\n// Adds icon styles based on the context of a button.\n// @param $context\n//   @type string ('base', 'solo', 'left', 'right')\n//   @default 'base'\n// @param $options\n//   @type map\n//   @default $icons map\n@mixin add-icon-button($context: 'base', $options: ()) {\n  $o: map-extend($icons, $options, true);\n\n  @if ($context == 'base') {\n\n    .#{map-get($o, 'class')} {\n      font-size: map-get($o, 'font-size');\n      line-height: 1em;\n      vertical-align: middle;\n    }\n    &.small .#{map-get($o, 'class')} {\n      font-size: map-fetch($o, 'buttons', 'font-size-small');\n      margin-top: map-fetch($o, 'buttons', 'margin-top-small');\n    }\n    &.large .#{map-get($o, 'class')} {\n      font-size: map-fetch($o, 'buttons', 'font-size-large');\n      margin-top: map-fetch($o, 'buttons', 'margin-top-large');\n    }\n\n  } @else if ($context == 'solo') {\n\n    padding: nth(map-get($buttons, 'padding'), 1);\n    &.small {\n      padding: nth(map-fetch($buttons, 'modifiers', 'small', 'padding'), 1);\n    }\n    &.large {\n      padding: nth(map-fetch($buttons, 'modifiers', 'large', 'padding'), 1);\n    }\n\n  } @else if ($context == 'left') {\n\n    .#{map-get($o, 'class')} {\n      margin-right: map-fetch($o, 'buttons', 'gap');\n      margin-left: map-fetch($o, 'buttons', 'indent');\n    }\n    &.small .#{map-get($o, 'class')} {\n      margin-left: map-fetch($o, 'buttons', 'indent-small');\n    }\n    &.large .#{map-get($o, 'class')} {\n      margin-left: map-fetch($o, 'buttons', 'indent-large');\n    }\n\n  } @else if ($context == 'right') {\n\n    .#{map-get($o, 'class')} {\n      margin-left: map-fetch($o, 'buttons', 'gap');\n      margin-right: map-fetch($o, 'buttons', 'indent');\n    }\n    &.small .#{map-get($o, 'class')} {\n      margin-right: map-fetch($o, 'buttons', 'indent-small');\n    }\n    &.large .#{map-get($o, 'class')} {\n      margin-right: map-fetch($o, 'buttons', 'indent-large');\n    }\n\n  }\n}\n\n// Check if we should output icons\n@if map-get($icons, 'output') {\n\n/*==============================================================================\n  @Icons - #{$filename}\n==============================================================================*/\n\n@if (map-get($icons, 'class-symbols')) {\n  .#{map-get($icons, 'class-symbols')} {\n    @include hide-svg-symbols();\n  }\n}\n\n.#{map-get($icons, 'class')} {\n  @include make-icon();\n}\n\n// Check if we should output button modifiers\n@if map-get($icons, 'output-buttons') {\n  // Check if $buttons exists\n  @if variable-exists(buttons) {\n    .#{map-get($buttons, 'class')} {\n      @include add-icon-button();\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')} {\n      @include add-icon-button('solo');\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-left {\n      @include add-icon-button('left');\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($icons, 'class')}-right {\n      @include add-icon-button('right');\n    }\n  }\n} // End @if output-buttons\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_videos.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Videos Map\n////////////////////////////////////////////////////////////////////////////////\n\n$videos: (\n  'output' : true,\n  'margin' : 2em 0,\n  'ratio' : 56.25%\n) !default; // The default video ratio (56.25% = 16 by 9)\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'videos') {\n    $videos: map-extend($videos, map-get($override, 'videos'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Video Functions\n////////////////////////////////////////////////////////////////////////////////\n\n// Aspect Ratio\n// Returns the aspect ratio in the form of a percentage.\n// @param $width\n//   @type width aspect ratio (number)\n// @param $height\n//   @type height aspect ratio (number)\n// @return height percentage of aspect ratio\n@function aspect-ratio($width, $height) {\n  @return (($height / $width) * 100%);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Video Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Video Fluid\n// Adds styles for creating fluid videos. Should be applied to a wrapping\n// element of a video.\n// @param $options\n//   @type map\n//   @default $video map\n@mixin make-video-fluid($options: ()) {\n  $o: map-merge($videos, $options);\n\n  position: relative;\n\tdisplay: block;\n\theight: 0;\n\tmargin: map-get($o, 'margin');\n\tpadding-bottom: map-get($o, 'ratio');\n\toverflow: hidden;\n\n  .video-item,\n  embed,\n  iframe,\n  object,\n  video {\n  \tposition: absolute;\n  \ttop: 0;\n  \tleft: 0;\n  \twidth: 100%;\n  \theight: 100%;\n  \tborder: 0 none;\n  }\n}\n\n// Add Video Ratio\n// Creates a ratio class using an aspect width and height. You can optionally\n// output the bottom padding or a class with the bottom padding.\n// @param $width\n//   @type width aspect ratio (number)\n// @param $height\n//   @type height aspect ratio (number)\n@mixin build-video-ratio($width, $height) {\n  &.ratio-#{$width}x#{$height} {\n    padding-bottom: aspect-ratio($width, $height);\n  }\n}\n\n// Check if we should output videos\n@if map-get($videos, 'output') {\n\n/*==============================================================================\n  @Video - #{$filename}\n==============================================================================*/\n\n.video-wrapper {\n\t@include make-video-fluid();\n}\n\n/**\n * Video Ratios\n */\n.video-wrapper {\n\t@include build-video-ratio(16, 9);\n  @include build-video-ratio(4, 3);\n  @include build-video-ratio(3, 2);\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/elements/_close.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Close Map\n////////////////////////////////////////////////////////////////////////////////\n\n$close: (\n  'output' : true,\n  'output-modifiers' : true,\n  'class' : 'close',\n\n  'margin' : 0,\n  'padding' : 0.125em,\n  'font-size' : 1rem,\n  'border' : none,\n  'border-radius' : 5em,\n  'transition' : $transition,\n\n  'modifiers' : (\n    'default' : (\n      'color' : $white,\n      'background' : rgba($black, 0.25),\n      'hover' : (\n        'color' : $white,\n        'background' : rgba($black, 0.5),\n      ),\n    ),\n    'inverted' : (\n      'color' : $color,\n      'background' : rgba($white, 0.5),\n      'hover' : (\n        'color' : $color,\n        'background' : rgba($white, 1),\n      ),\n    ),\n    'danger' : (\n      'background' : $red,\n      'hover' : (\n        'background' : $red-700,\n      ),\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'close') {\n    $close: map-extend($close, map-get($override, 'close'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Close Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make close\n// Creates the base styles for the close element\n// @param $options\n//   @type map\n//   @default $close map\n@mixin make-close($options: ()) {\n  $o: map-merge($close, $options);\n\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false);\n\n  @content;\n\n  @if (variable-exists(icons)) {\n    .#{map-get($icons, 'class')} {\n      margin: 0;\n      font-size: 1em;\n    }\n  }\n}\n\n// Add Modifiers Close\n// Creates styles for the close elements along with modifiers.\n// @param $options\n//   @type map\n//   @default ()\n@mixin add-modifiers-close($options: ()) {\n  $o: $options;\n\n  // Check if $close exists and if output is set to true\n  @if map-get($close, 'output') {\n\n    // If close key exists, output close styles\n    @if map-has-key($o, 'close') {\n      .#{map-get($close, 'class')} {\n        @include add-styles(map-get($o, 'close'));\n        @if (map-fetch($o, 'close', 'key')) {\n          @include add-modifiers($close, map-fetch($o, 'close', 'key'), false);\n        }\n      }\n    }\n\n    // Check if modifiers exist\n    @if (map-has-key($o, 'modifiers')) {\n      @each $name, $map in map-get($o, 'modifiers') {\n        @if (map-has-key($map, 'close')) {\n          &.#{$name} {\n            .#{map-get($close, 'class')} {\n              @include add-styles(map-get($map, 'close'));\n              @if (map-fetch($map, 'close', 'key')) {\n                @include add-modifiers($close, map-fetch($map, 'close', 'key'), false);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n}\n\n// Check if we should output close\n@if map-get($close, 'output') {\n\n/*==============================================================================\n  @Close - #{$filename}\n==============================================================================*/\n\n.#{map-get($close, 'class')} {\n  @include make-close();\n}\n\n// Check if we should output close modifiers\n@if map-get($close, 'output-modifiers') {\n  .#{map-get($close, 'class')} {\n    @include add-modifiers($close);\n  }\n} // End @if output-modifiers\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_button-groups.scss';\n\n// Required components warning\n@if (variable-exists(buttons) == false) {\n  @warn \"The button-groups block component requires the buttons element component!\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Button Groups Map\n////////////////////////////////////////////////////////////////////////////////\n\n$button-groups: (\n  'output' : true,\n  'class' : 'button-group',\n\n  'display' : 'inline',\n  'orientation' : 'horizontal',\n\n  'spacing' : 0.25em,\n  'border-radius' : map-get($buttons, 'border-radius'),\n  'inner-border-radius' : 0,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'button-groups') {\n    $button-groups: map-extend($button-groups, map-get($override, 'button-groups'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Button Groups Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Button Group\n// Creates the base styles for button groups.\n// @param $defaults\n//   @type boolean\n//   @default true\n// @param $options\n//   @type map\n//   @default $button-groups map\n@mixin make-button-group($defaults: true, $options: ()) {\n  $o: map-merge($button-groups, $options);\n\n  @if $defaults {\n    @include add-button-group-display(map-get($o, 'display'));\n    @include add-button-group-orientation(map-get($o, 'orientation'));\n  }\n\n  > .button {\n    position: relative;\n    z-index: 1;\n    flex: 1 1 auto;\n    margin: 0;\n\n    // Stack order\n    &:hover {\n      z-index: 2;\n    }\n    &:focus {\n      z-index: 3;\n    }\n    &:active {\n      z-index: 4;\n    }\n    &.active {\n      z-index: 5;\n    }\n\n    // Flex modifiers\n    &.static {\n      flex-grow: 0;\n    }\n  }\n}\n\n// Add Button Group Display\n// Adds button styles based on orientation and display type provided.\n// @param $display\n//   @type string 'inline' | 'block'\n//   @default null\n// @param $options\n//   @type map\n//   @default $button-groups map\n@mixin add-button-group-display($display: null, $options: ()) {\n  $o: map-merge($button-groups, $options);\n\n  @if ($display == 'inline') {\n\n    display: inline-flex;\n\n  } @else if ($display == 'block' ) {\n\n    display: flex;\n\n  }\n}\n\n// Add Button Group Orientation\n// Adds button styles based on orientation and display type provided.\n// @param $orientation\n//   @type string 'horizontal' | 'vertical' | 'hori' | 'vert'\n//   @default null\n// @param $options\n//   @type map\n//   @default $button-groups map\n@mixin add-button-group-orientation($orientation: null, $options: ()) {\n  $o: map-merge($button-groups, $options);\n\n  // Horizontal or Vertical\n  @if (($orientation == 'horizontal') or ($orientation == 'hori')) {\n\n    flex-flow: row;\n\n    > .#{map-get($buttons, 'class')} {\n      @if (map-get($o, 'border-radius') != null) {\n        border-radius: map-get($o, 'inner-border-radius');\n      }\n\n      + .#{map-get($buttons, 'class')} {\n        margin-top: 0;\n        margin-left: (map-get($o, 'spacing'));\n      }\n\n      @if (map-get($o, 'border-radius') != null and map-get($o, 'inner-border-radius') != null) {\n        &:first-child {\n          border-radius: map-get($o, 'border-radius') map-get($o, 'inner-border-radius') map-get($o, 'inner-border-radius') map-get($o, 'border-radius');\n        }\n        &:last-child {\n          border-radius: map-get($o, 'inner-border-radius') map-get($o, 'border-radius') map-get($o, 'border-radius') map-get($o, 'inner-border-radius');\n        }\n      }\n    }\n\n  } @else if (($orientation == 'vertical' ) or ($orientation == 'vert' )) {\n\n    flex-flow: column;\n\n    > .#{map-get($buttons, 'class')} {\n      @if (map-get($o, 'border-radius') != null) {\n        border-radius: map-get($o, 'inner-border-radius');\n      }\n\n      + .#{map-get($buttons, 'class')} {\n        margin-top: (map-get($o, 'spacing'));\n        margin-left: 0;\n      }\n\n      @if (map-get($o, 'border-radius') != null and map-get($o, 'inner-border-radius') != null) {\n        &:first-child {\n          border-radius: map-get($o, 'border-radius') map-get($o, 'border-radius') map-get($o, 'inner-border-radius') map-get($o, 'inner-border-radius');\n        }\n        &:last-child {\n          border-radius: map-get($o, 'inner-border-radius') map-get($o, 'inner-border-radius') map-get($o, 'border-radius') map-get($o, 'border-radius');\n        }\n      }\n    }\n  }\n}\n\n// Check if we should output button-groups\n@if map-get($button-groups, 'output') {\n\n/*==============================================================================\n  @Button Groups - #{$filename}\n==============================================================================*/\n\n.#{map-get($button-groups, 'class')} {\n  @include make-button-group();\n}\n\n/**\n * Button Group Modifiers\n */\n.#{map-get($button-groups, 'class')}.inline {\n  @include add-button-group-display('inline');\n}\n.#{map-get($button-groups, 'class')}.block {\n  @include add-button-group-display('block');\n}\n.#{map-get($button-groups, 'class')}.hori,\n.#{map-get($button-groups, 'class')}.horizontal {\n  @include add-button-group-orientation('hori');\n}\n.#{map-get($button-groups, 'class')}.vert,\n.#{map-get($button-groups, 'class')}.vertical {\n  @include add-button-group-orientation('vert');\n}\n\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_notice.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Notices Map\n////////////////////////////////////////////////////////////////////////////////\n\n$notices: (\n  'output' : true,\n  'output-modifiers' : true,\n  'class' : 'notice',\n\n  'margin' : 2em 0,\n  'padding' : 0.25em 1.25em,\n  'font-size' : 1em,\n  'line-height' : 1.5em,\n  'border' : 1px solid rgba($black, 0.05),\n  'border-radius' : $border-radius,\n\n  'close' : (\n    'float': right,\n    'margin': 1em 0 1em 1em,\n    'padding': 0.25em,\n    'font-size': 1em,\n  ),\n\n  'modifiers' : (\n    'default' : (\n      'color' : $color,\n      'background' : $gray-100,\n    ),\n    'inverted' : (\n      'color' : $white,\n      'background' : $color,\n      'close' : (\n        'key' : 'inverted',\n      ),\n    ),\n    'info' : (\n      'background' : $blue-50,\n    ),\n    'info.inverted' : (\n      'color' : $white,\n      'background' : $blue,\n    ),\n    'success' : (\n      'background' : $green-50,\n    ),\n    'success.inverted' : (\n      'color' : $white,\n      'background' : $green,\n    ),\n    'warning' : (\n      'background' : $yellow-100,\n    ),\n    'warning.inverted' : (\n      'color' : $color,\n      'background' : $yellow,\n      'close' : (\n        'key' : 'default',\n      ),\n    ),\n    'danger' : (\n      'background' : $red-50,\n    ),\n    'danger.inverted' : (\n      'color' : $white,\n      'background' : $red,\n    ),\n    'inline' : (\n      'display' : inline,\n      'margin' : 0,\n      'padding' : 0 0.25em,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'notices') {\n    $notices: map-extend($notices, map-get($override, 'notices'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Notices Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Notice\n// Creates the base styles for a notice block.\n// @param $options\n//   @type map\n//   @default $notices map\n@mixin make-notice($options: ()) {\n  $o: map-extend($notices, $options, true);\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false);\n\n  @content;\n\n}\n\n// Check if we should output notices\n@if map-get($notices, 'output') {\n\n/*==============================================================================\n  @Notices - #{$filename}\n==============================================================================*/\n\n.#{map-get($notices, 'class')} {\n  @include make-notice();\n}\n\n// Check if we should output notice modifiers\n@if map-get($notices, 'output-modifiers') {\n  .#{map-get($notices, 'class')} {\n    @include add-modifiers($notices);\n    @include add-modifiers-close($notices);\n  }\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_breadcrumb.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Breadcrumbs Map\n////////////////////////////////////////////////////////////////////////////////\n\n$breadcrumbs: (\n  'output' : true,\n  'class' : 'breadcrumb',\n\n  'display' : block,\n  'margin' : 1em 0,\n  'font-size' : 1em,\n\n  'delimiter' : (\n    'content' : '/', // Delimiter element content (e.g: '/', '—', '→', '»')\n    'padding' : 0 0.75em,\n    'color' : $gray-400,\n    'last-child' : false,\n  ),\n\n  'modifiers' : (\n    'current' : (\n      'selector' : '.current',\n      'color' : $color-light,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'breadcrumbs') {\n    $breadcrumbs: map-extend($breadcrumbs, map-get($override, 'breadcrumbs'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Breadcrumb Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Breadcrumb\n// Creates the basic breadcrumb styles.\n// @param $options\n//   @type map\n//   @default $breadcrumbs map\n@mixin make-breadcrumb($options: ()) {\n  $o: map-extend($breadcrumbs, $options, true);\n\n  @include add-styles($o);\n  @include add-modifiers($o);\n\n  // Remove default list styles\n  ul,\n  ol {\n    margin: 0;\n    list-style: none;\n    @include add-clearfix();\n  }\n\n  // Float list items to the left to:\n  //   a) Get rid of the extra white spacing from inline items.\n  //   b) Wrap properly if items don't fit on one line.\n  li {\n    float: left;\n    margin: 0;\n  }\n\n  // Delimiter styles\n  li:after {\n    @include add-styles(map-get($breadcrumbs, 'delimiter'));\n  }\n  // Remove last delimiter if ('delimiter', 'last-child') is set to false\n  @if (map-fetch($o, 'delimiter', 'last-child') == false) {\n    li:last-child:after {\n      content: none;\n    }\n  }\n}\n\n// Check if we should output breadcrumbs\n@if map-get($breadcrumbs, 'output') {\n\n/*==============================================================================\n  @Breadcrumb - #{$filename}\n==============================================================================*/\n\n.#{map-get($breadcrumbs, 'class')} {\n  @include make-breadcrumb();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_dropdowns.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Dropdowns Map\n////////////////////////////////////////////////////////////////////////////////\n\n$dropdowns: (\n  'output' : true,\n  'output-position' : true,\n\n  'class-dropdown-trigger' : 'dropdown-trigger',\n  'class-dropdown'         : 'dropdown',\n  'class-dropdown-content' : 'dropdown-content',\n  'class-dropdown-menu'    : 'dropdown-menu',\n  'class-anchor'           : 'anchor',\n\n  'class-active' : 'active',\n  'class-action-hover' : 'on-hover',\n  'class-action-click' : 'on-click',\n\n  'target' : null,\n  'target-action' : null,\n\n  'target-zindex'        : 100,\n  'target-action-zindex' : 105,\n\n  'width'             : 16rem,\n  'padding'           : 1em,\n  'padding-menu'      : 0.5em,\n  'padding-menu-item' : 0.75em 1em,\n\n  'block-margin'      : -0.5em,\n  'block-padding'     : 1em,\n\n  'font-size'   : px-to-rem(14px),\n  'line-height' : 1.35em,\n\n  'background'       : $white,\n  'background-hover' : rgba($black, 0.05),\n  'background-clip'  : padding-box,\n  'border'           : 1px solid rgba($black, 0.1),\n  'border-inner'     : 1px solid rgba($black, 0.1),\n  'border-radius'    : $border-radius,\n  'box-shadow'       : 0 2px 6px rgba($black, 0.15),\n  'color'            : $color,\n  'color-hover'      : $color,\n  'color-active'     : $color-light,\n\n  'content-sep'    : 0.5em,\n  'content-sep-hr' : 1em,\n\n  'offset-margin-one' : -1px, // The first position margin offset\n  'offset-margin-two' : 0,    // The second position margin offset (does not apply to centered dropdowns)\n  'offset-position'   : 0,    // The second position offset (does not apply to centered dropdowns)\n\n  'dropdown-position'      : 'bottom-left',\n  'dropdown-position-menu' : 'right-top',\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'dropdowns') {\n    $dropdowns: map-extend($dropdowns, map-get($override, 'dropdowns'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Dropdown Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Dropdown\n// Creates the base styles for dropdowns.\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin make-dropdown($options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  position: relative;\n  display: block;\n  width: map-get($o, 'width');\n  margin: 0;\n  font-size: map-get($o, 'font-size');\n  line-height: map-get($o, 'line-height');\n  background: map-get($o, 'background');\n  background-clip: map-get($o, 'background-clip');\n  border: map-get($o, 'border');\n  box-shadow: map-get($o, 'box-shadow');\n  border-radius: map-get($o, 'border-radius');\n}\n\n// Make Dropdown Trigger\n// Creates the base styles for a dropdown trigger.\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin make-dropdown-trigger($options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  // Set our target action\n  $target : '.' + map-get($o, 'class-dropdown') !default;\n\n  @if (map-get($o, 'target')) {\n    $target : map-get($o, 'target');\n  }\n\n  // Set our target action variable\n  $target-action :\n    '&:not(.#{map-get($o, 'class-action-click')}):not(.#{map-get($o, 'class-action-hover')}):hover > .#{map-get($o, 'class-dropdown')}',\n    '&.#{map-get($o, 'class-active')} > .#{map-get($o, 'class-dropdown')}'\n  !default;\n\n  @if (map-get($o, 'target-action')) {\n    $target-action : map-get($o, 'target-action');\n  }\n\n  // Base trigger styles\n  position: relative;\n\n  // Base target styles\n  #{$target} {\n    position: absolute;\n    z-index: map-get($o, 'target-zindex');\n    display: none;\n  }\n\n  // Base target hover & active styles\n  #{$target-action} {\n    display: block;\n  }\n\n  // Add stack order to hovered dropdowns\n  &:hover > .#{map-get($o, 'class-dropdown')} {\n    z-index: map-get($o, 'target-action-zindex');\n  }\n\n}\n\n// Add Dropdown Style\n// Creates specific dropdown styles for a content type.\n// @param $type\n//   @type string\n//   @options 'dropdown', 'dropdown-content', 'dropdown-menu'\n//   @default 'dropdown'\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin add-dropdown-style($type : 'dropdown', $options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  @if ($type == 'dropdown') {\n\n    padding: 0;\n\n    > .#{map-get($o, 'class-dropdown-content')},\n    > .#{map-get($o, 'class-dropdown-menu')} {\n      width: auto;\n      margin: 0;\n      background: none;\n      border: none;\n      border-top: map-get($o, 'border-inner');\n      box-shadow: none;\n      border-radius: 0;\n\n      &:first-child {\n        border-top: none;\n        border-top-left-radius: map-get($o, 'border-radius');\n        border-top-right-radius: map-get($o, 'border-radius');\n      }\n      &:last-child {\n        border-bottom-left-radius: map-get($o, 'border-radius');\n        border-bottom-right-radius: map-get($o, 'border-radius');\n      }\n    }\n\n  } @else if ($type == 'dropdown-content') {\n\n    padding: map-get($o, 'padding');\n\n    > * {\n      margin-top: map-get($o, 'content-sep');\n      margin-bottom: map-get($o, 'content-sep');\n    }\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n\n    > hr {\n      margin: map-get($o, 'content-sep-hr') 0;\n    }\n\n    // Block Links\n    > a.block {\n      display: block;\n      margin: map-get($o, 'block-margin');\n      padding: map-get($o, 'block-padding');\n      color: map-get($o, 'color');\n      text-decoration: none;\n      border: none;\n      border-radius: map-get($o, 'border-radius');\n\n      &:hover {\n        background: map-get($o, 'background-hover');\n        color: map-get($o, 'color-hover');\n      }\n\n      > * {\n        margin-top: map-get($o, 'content-sep');\n        margin-bottom: map-get($o, 'content-sep');\n      }\n      > :first-child {\n        margin-top: 0;\n      }\n      > :last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    > .button {\n      display: block;\n    }\n\n  } @else if ($type == 'dropdown-menu') {\n\n    list-style: none;\n    padding: map-get($o, 'padding-menu');\n\n    // Dropdown Menu Items\n    li {\n      position: relative;\n      margin: 0;\n      border-bottom: map-get($o, 'border-inner');\n    }\n    li:hover {\n      background: map-get($o, 'background-hover');\n      background-clip: padding-box;\n\n      > a {\n        color: map-get($o, 'color-hover');\n      }\n    }\n    li.active {\n      > a {\n        color: map-get($o, 'color-active');\n      }\n      &:hover {\n        background: none;\n      }\n    }\n    li:first-child {\n      border-top-left-radius: map-get($o, 'border-radius');\n      border-top-right-radius: map-get($o, 'border-radius');\n    }\n    li:last-child {\n      border-bottom: none;\n      border-bottom-left-radius: map-get($o, 'border-radius');\n      border-bottom-right-radius: map-get($o, 'border-radius');\n    }\n\n    a {\n      display: block;\n      padding: map-get($o, 'padding-menu-item');\n      color: map-get($o, 'color');\n      border: none;\n      text-decoration: none;\n    }\n\n  } @else {\n    @warn 'The output type \"#{$type}\" is not supported in `add-dropdown-style()`';\n  }\n\n}\n\n// Add Dropdown Position\n// Adds the position styles for a dropdown.\n// @param $anchor\n//   @type string\n//     'bottom-left', 'bottom-right', 'bottom-center',\n//     'top-left', 'top-right', 'top-center',\n//     'left-top', 'left-bottom', 'left-center',\n//     'right-top', 'right-bottom', 'right-center'\n//   @default 'bottom-left'\n// @param $options\n//   @type map\n//   @default $dropdowns map\n@mixin add-dropdown-position($anchor : 'bottom-left', $options: ()) {\n  $o: map-merge($dropdowns, $options);\n\n  // Set our target action\n  $target : '.' + map-get($o, 'class-dropdown') !default;\n\n  @if (map-get($o, 'target')) {\n    $target : map-get($o, 'target');\n  }\n\n  // Set our target action variable\n  $target-action :\n    '&:not(.#{map-get($o, 'class-action-click')}):not(.#{map-get($o, 'class-action-hover')}):hover > .#{map-get($o, 'class-dropdown')}',\n    '&.#{map-get($o, 'class-active')} > .#{map-get($o, 'class-dropdown')}'\n  !default;\n\n  @if (map-get($o, 'target-action')) {\n    $target-action : map-get($o, 'target-action');\n  }\n\n  // Bottom Left\n  @if ($anchor == 'bottom-left') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-one') 0 0 map-get($o, 'offset-margin-two');\n      top: 100%;\n      left: map-get($o, 'offset-position');\n      right: auto;\n      bottom: auto;\n    }\n\n  // Bottom Right\n  } @else if ($anchor == 'bottom-right') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-one') map-get($o, 'offset-margin-two') 0 0;\n      top: 100%;\n      left: auto;\n      right: map-get($o, 'offset-position');\n      bottom: auto;\n    }\n\n  // Bottom Center\n  } @else if ($anchor == 'bottom-center') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-one') 0 0 0;\n      top: 100%;\n      left: 50%;\n      right: auto;\n      bottom: auto;\n      transform: translate3d(-50%, 0, 0);\n    }\n  }\n\n  // Top left\n  @if ($anchor == 'top-left') {\n    #{$target} {\n      margin: 0 0 map-get($o, 'offset-margin-one') map-get($o, 'offset-margin-two');\n      top: auto;\n      left: map-get($o, 'offset-position');\n      right: auto;\n      bottom: 100%;\n    }\n\n  // Top Right\n  } @else if ($anchor == 'top-right') {\n    #{$target} {\n      margin: 0 map-get($o, 'offset-margin-two') map-get($o, 'offset-margin-one') 0;\n      top: auto;\n      left: auto;\n      right: map-get($o, 'offset-position');\n      bottom: 100%;\n    }\n\n  // Top Center\n  } @else if ($anchor == 'top-center') {\n    #{$target} {\n      margin: 0 0 map-get($o, 'offset-margin-one') 0;\n      top: auto;\n      left: 50%;\n      right: auto;\n      bottom: 100%;\n      transform: translate3d(-50%, 0, 0);\n    }\n  }\n\n  // Left Top\n  @if ($anchor == 'left-top') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-two') map-get($o, 'offset-margin-one') 0 0;\n      top: map-get($o, 'offset-position');\n      left: auto;\n      right: 100%;\n      bottom: auto;\n    }\n\n  // Left Bottom\n  } @else if ($anchor == 'left-bottom') {\n    #{$target} {\n      margin: 0 map-get($o, 'offset-margin-one') map-get($o, 'offset-margin-two') 0;\n      top: auto;\n      left: auto;\n      right: 100%;\n      bottom: map-get($o, 'offset-position');\n    }\n\n  // Left Center\n  } @else if ($anchor == 'left-center') {\n    #{$target} {\n      margin: 0 map-get($o, 'offset-margin-one') 0 0;\n      top: 50%;\n      left: auto;\n      right: 100%;\n      bottom: auto;\n      transform: translate3d(0, -50%, 0);\n    }\n  }\n\n  // Right Top\n  @if ($anchor == 'right-top') {\n    #{$target} {\n      margin: map-get($o, 'offset-margin-two') 0 0 map-get($o, 'offset-margin-one');\n      top: map-get($o, 'offset-position');\n      left: 100%;\n      right: auto;\n      bottom: auto;\n    }\n\n  // Right Bottom\n  } @else if ($anchor == 'right-bottom') {\n    #{$target} {\n      margin: 0 0 map-get($o, 'offset-margin-two') map-get($o, 'offset-margin-one');\n      top: auto;\n      left: 100%;\n      right: auto;\n      bottom: map-get($o, 'offset-position');\n    }\n\n  // Right Center\n  } @else if ($anchor == 'right-center') {\n    #{$target} {\n      margin: 0 0 0 map-get($o, 'offset-margin-one');\n      top: 50%;\n      left: 100%;\n      right: auto;\n      bottom: auto;\n      transform: translate3d(0, -50%, 0);\n    }\n  }\n}\n\n// Check if we should output dropdowns\n@if map-get($dropdowns, 'output') {\n\n/*==============================================================================\n  @Dropdowns - #{$filename}\n==============================================================================*/\n\n/**\n * General Dropdown Styles\n */\n.#{map-get($dropdowns, 'class-dropdown')},\n.#{map-get($dropdowns, 'class-dropdown-content')},\n.#{map-get($dropdowns, 'class-dropdown-menu')} {\n  @include make-dropdown();\n}\n\n/**\n * Dropdown\n */\n.#{map-get($dropdowns, 'class-dropdown')} {\n  @include add-dropdown-style('dropdown');\n}\n\n/**\n * Dropdown Content\n */\n.#{map-get($dropdowns, 'class-dropdown-content')} {\n  @include add-dropdown-style('dropdown-content');\n}\n\n/**\n * Dropdown Menu\n */\n.#{map-get($dropdowns, 'class-dropdown-menu')} {\n  @include add-dropdown-style('dropdown-menu');\n}\n\n/*==============================================================================\n  @Dropdown Triggers - #{$filename}\n==============================================================================*/\n\n.#{map-get($dropdowns, 'class-dropdown-trigger')} {\n  @include make-dropdown-trigger();\n  @include add-dropdown-position('bottom-left');\n}\n\n.#{map-get($dropdowns, 'class-dropdown-menu')} {\n  @include make-dropdown-trigger((\n    'target' : '.dropdown-menu',\n    'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu'\n  ));\n  @include add-dropdown-position('right-top', (\n    'target' : '.dropdown-menu',\n    'target-action' : '> li:hover > .dropdown-menu, &.active > li > .dropdown-menu',\n    'offset-margin-two' : -1px,\n    'offset-position' : -0.5em\n  ));\n}\n\n// Check if we should output position classes\n@if map-get($dropdowns, 'output-position') {\n\n/*==============================================================================\n  @Dropdown Anchor Positions - #{$filename}\n==============================================================================*/\n\n.#{map-get($dropdowns, 'class-anchor')}-bottom-left {\n  @include add-dropdown-position($anchor: 'bottom-left');\n}\n.#{map-get($dropdowns, 'class-anchor')}-bottom-right {\n  @include add-dropdown-position($anchor: 'bottom-right');\n}\n.#{map-get($dropdowns, 'class-anchor')}-bottom-center {\n  @include add-dropdown-position($anchor: 'bottom-center');\n}\n\n.#{map-get($dropdowns, 'class-anchor')}-top-left {\n  @include add-dropdown-position($anchor: 'top-left');\n}\n.#{map-get($dropdowns, 'class-anchor')}-top-right {\n  @include add-dropdown-position($anchor: 'top-right');\n}\n.#{map-get($dropdowns, 'class-anchor')}-top-center {\n  @include add-dropdown-position($anchor: 'top-center');\n}\n\n.#{map-get($dropdowns, 'class-anchor')}-left-top {\n  @include add-dropdown-position($anchor: 'left-top');\n}\n.#{map-get($dropdowns, 'class-anchor')}-left-bottom {\n  @include add-dropdown-position($anchor: 'left-bottom');\n}\n.#{map-get($dropdowns, 'class-anchor')}-left-center {\n  @include add-dropdown-position($anchor: 'left-center');\n}\n\n.#{map-get($dropdowns, 'class-anchor')}-right-top {\n  @include add-dropdown-position($anchor: 'right-top');\n}\n.#{map-get($dropdowns, 'class-anchor')}-right-bottom {\n  @include add-dropdown-position($anchor: 'right-bottom');\n}\n.#{map-get($dropdowns, 'class-anchor')}-right-center {\n  @include add-dropdown-position($anchor: 'right-center');\n}\n\n} // End @if output position classes\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_tabs.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tabs Map\n////////////////////////////////////////////////////////////////////////////////\n\n$tabs: (\n  'output' : true,\n  'class' : 'tabs',\n\n  'class-wrapper'       : 'tabs',\n  'class-nav'           : 'tabs-nav',\n  'class-content'       : 'tabs-content',\n  'class-content-panel' : 'tabs-panel',\n\n  'margin'             : 2em 0,\n  'padding-nav'        : 1em,\n  'padding-nav-inline' : 1em 2em,\n  'padding-content'    : 1em 2em,\n\n  'background'        : $gray-100,\n  'background-fade'   : $gray-200,\n  'background-accent' : $white,\n\n  'border'            : 1px solid $gray-300,\n  'border-radius'     : $border-radius,\n\n  'color'        : $color,\n  'color-fade'   : $color-light,\n  'color-accent' : $blue,\n\n  'transition' : null,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'tabs') {\n    $tabs: map-extend($tabs, map-get($override, 'tabs'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tabs Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Tabs\n// Creates the base styles for a the tabs block including tab wrapper,\n// navigation and content.\n// @param $options\n//   @type map\n//   @default $tabs map\n@mixin make-tabs($options: ()) {\n  $o: map-merge($tabs, $options);\n\n  // Tab Wrapper\n  .#{map-get($tabs, 'class-wrapper')} {\n    position: relative;\n    margin: map-get($o, 'margin');\n\n    .#{map-get($o, 'class-nav')},\n    .#{map-get($o, 'class-content')} {\n      margin: 0;\n    }\n    .#{map-get($o, 'class-nav')} {\n      z-index: 10;\n    }\n    .#{map-get($o, 'class-content')} {\n      z-index: 5;\n    }\n  }\n\n  // Tab Navigation\n  .#{map-get($tabs, 'class-nav')} {\n    margin: map-get($o, 'margin');\n    text-align: center;\n\n    ul {\n      display: flex;\n      list-style: none;\n      margin: 0;\n    }\n    ul li {\n      flex: 1 0 auto;\n      margin: 0;\n    }\n    a {\n      display: block;\n      padding: map-get($o, 'padding-nav');\n      border: none;\n      text-decoration: none;\n    }\n\n    &.inline {\n      ul {\n        flex-wrap: wrap;\n      }\n      ul li {\n        flex: 0 0 auto;\n\n        a {\n          padding: map-get($o, 'padding-nav-inline');\n        }\n      }\n    }\n  }\n\n  // Tab Content\n  .#{map-get($tabs, 'class-content')} {\n    margin: map-get($o, 'margin');\n\n    .#{map-get($o, 'class-content-panel')} {\n      display: none;\n    }\n    .#{map-get($o, 'class-content-panel')}.active {\n      display: block;\n    }\n  }\n\n}\n\n// Add Tab Style\n// Creates the styles for tabs.\n// @param $style\n//   @type string\n//   @options 'fold', 'line'\n//   @default 'fold'\n// @param $class\n//   @type string\n//   @default 'style-#{$style}'\n// @param $options\n//   @type map\n//   @default $tabs map\n@mixin add-tab-style($style: 'fold', $class: null, $options: ()) {\n  $o: map-merge($tabs, $options);\n\n  @if ($class == null) {\n    $class: 'style-#{$style}';\n  }\n\n  @if ($style == 'fold') {\n\n    .#{$class} .#{map-get($o, 'class-nav')},\n    .#{map-get($o, 'class-nav')}.#{$class} {\n      ul {\n        background: map-get($o, 'background');\n        border: map-get($o, 'border');\n        border-radius: map-get($o, 'border-radius');\n      }\n      ul li {\n        border-right: map-get($o, 'border');\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n\n        &:first-child {\n          border-top-left-radius: map-get($o, 'border-radius');\n          border-bottom-left-radius: map-get($o, 'border-radius');\n        }\n        &:last-child {\n          border-right: none;\n          border-top-right-radius: map-get($o, 'border-radius');\n          border-bottom-right-radius: map-get($o, 'border-radius');\n        }\n      }\n      a {\n        color: map-get($o, 'color');\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n\n        &:hover {\n          background: map-get($o, 'background-fade');\n          color: map-get($o, 'color');\n        }\n      }\n\n      // Active State\n      ul li.active {\n        background: map-get($o, 'background-accent');\n      }\n      .active a {\n        color: map-get($o, 'color');\n        &:hover {\n          background: map-get($o, 'background-accent');\n        }\n      }\n\n      // Inline styles\n      &.inline ul li:last-child {\n        border-right: map-get($o, 'border');\n      }\n    }\n    .#{$class} .#{map-get($o, 'class-nav')} {\n      ul {\n        border-bottom-left-radius: 0;\n        border-bottom-right-radius: 0;\n      }\n      ul li {\n        border-bottom: 1px solid transparent;\n        margin-bottom: -1px;\n      }\n      ul li:first-child {\n        border-bottom-left-radius: 0;\n      }\n      ul li:last-child {\n        border-bottom-right-radius: 0;\n      }\n      ul li.active {\n        border-bottom: 1px solid map-get($o, 'background-accent');\n      }\n    }\n    .#{$class} .#{map-get($o, 'class-content')} {\n      padding: map-get($o, 'padding-content');\n      border: map-get($o, 'border');\n      border-top: none;\n      border-bottom-left-radius: map-get($o, 'border-radius');\n      border-bottom-right-radius: map-get($o, 'border-radius');\n    }\n\n  } @else if ($style == 'line') {\n\n    .#{$class} .#{map-get($o, 'class-nav')},\n    .#{map-get($o, 'class-nav')}.#{$class} {\n      ul {\n        border-bottom: map-get($o, 'border');\n      }\n      ul li {\n        border-bottom: 3px solid transparent;\n        margin-bottom: -1px;\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n      }\n      a {\n        color: map-get($o, 'color-fade');\n        @if (map-get($o, 'transition') != null) {\n          @include transition(map-get($o, 'transition'));\n        }\n        &:hover {\n          color: map-get($o, 'color-accent');\n          text-decoration: none;\n        }\n      }\n      // Active State\n      ul li.active {\n        border-bottom: 3px solid map-get($o, 'color-accent');\n      }\n      .active a {\n        color: map-get($o, 'color');\n        &:hover {\n          color: map-get($o, 'color-accent');\n        }\n      }\n    }\n    .#{$class} .#{map-get($o, 'class-content')} {\n      padding: map-get($o, 'padding-content');\n      border: map-get($o, 'border');\n      border-top: none;\n    }\n\n  } @else {\n    @warn 'The tabs style of `#{$style}` does not exist';\n  }\n}\n\n// Check if we should output tabs\n@if map-get($tabs, 'output') {\n\n/*==============================================================================\n  @Tabs - #{$filename}\n==============================================================================*/\n\n/**\n * Base styles for tab wrapper, nav and content\n */\n@include make-tabs();\n\n/**\n * Tabs Style: Fold\n */\n@include add-tab-style($style: 'fold');\n\n/**\n * Tabs Style: Line\n */\n@include add-tab-style($style: 'line');\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/custom/offcanvas.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Off-Canvas Map\n////////////////////////////////////////////////////////////////////////////////\n\n$offcanvas: (\n  'output' : true,\n  'class' : 'oc',\n\n  'class-wrap'     : 'oc-wrap',\n  'class-content'  : 'oc-content',\n  'class-inner'    : 'oc-inner',\n  'class-aside'    : 'oc-aside',\n  'class-aside-id' : 'oc-aside-left',\n  'class-active'   : 'oc-active',\n  'class-delay'    : 'oc-delay',\n\n  'screen-content' : rgba($black, 0.2),\n  'screen-aside'   : rgba($black, 0.2),\n\n  'transition' : 'slide-in-left',\n  'transition-duration' : 0.5s,\n  'width' : 280px,\n  'wrap-height' : 100%,\n  'aside-position' : fixed,\n\n  'background-wrap' : null,\n  'background-aside' : $white,\n  'background-content' : null,\n\n) !default;\n\n// Extend default off-canvas map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'offcanvas') {\n    $offcanvas: map-extend($offcanvas, map-get($override, 'offcanvas'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Off-Canvas Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Off-Canvas\n// Creates the base styles for off-canvas content\n// @param $options\n//   @type map\n//   @default $offcanvas map\n@mixin make-offcanvas($options: ()) {\n  $o: map-merge($offcanvas, $options);\n\n  // Base structure styles\n  .#{map-get($o, 'class-wrap')} {\n    height: map-get($o, 'wrap-height');\n    @include add-scrollable();\n  }\n  .#{map-get($o, 'class-content')},\n  .#{map-get($o, 'class-inner')},\n  .#{map-get($o, 'class-aside')} {\n  \theight: 100%;\n  }\n\n  .#{map-get($o, 'class-wrap')} {\n  \tposition: relative;\n  \toverflow: hidden;\n    background: map-get($o, 'background-wrap');\n  }\n  .#{map-get($o, 'class-content')} {\n  \tposition: relative;\n  \tleft: 0;\n  \tz-index: 5;\n  \ttransition: transform map-get($o, 'transition-duration');\n    background: map-get($o, 'background-content');\n  }\n  .#{map-get($o, 'class-inner')} {\n    position: relative;\n    overflow-y: auto;\n  }\n  .#{map-get($o, 'class-aside')} {\n  \tposition: map-get($o, 'aside-position');\n  \ttop: 0;\n  \tz-index: 10;\n  \tvisibility: hidden;\n  \twidth: map-get($o, 'width');\n    overflow-y: auto;\n  \ttransition: all map-get($o, 'transition-duration');\n    background: map-get($o, 'background-aside');\n  }\n\n  // Content screen\n  @if (map-get($o, 'screen-content')) {\n    .#{map-get($o, 'class-content')}:after {\n    \tposition: absolute;\n    \ttop: 0;\n    \tright: 0;\n    \twidth: 0;\n    \theight: 0;\n    \tbackground: map-get($o, 'screen-content');\n    \tcontent: '';\n    \topacity: 0;\n    \ttransition: opacity map-get($o, 'transition-duration'), width 0.1s map-get($o, 'transition-duration'), height 0.1s map-get($o, 'transition-duration');\n    }\n    .#{map-get($o, 'class-active')} > .#{map-get($o, 'class-content')}:after {\n    \twidth: 100%;\n    \theight: 100%;\n    \topacity: 1;\n    \ttransition: opacity map-get($o, 'transition-duration');\n    }\n  }\n\n  // Aside screen\n  @if (map-get($o, 'screen-aside')) {\n    .#{map-get($o, 'class-aside')}:after {\n    \tposition: absolute;\n    \ttop: 0;\n    \tleft: 0;\n    \twidth: 100%;\n    \theight: 100%;\n      background: map-get($o, 'screen-aside');\n    \tcontent: '';\n    \topacity: 1;\n    \ttransition: opacity map-get($o, 'transition-duration');\n    }\n    .#{map-get($o, 'class-active')} > .#{map-get($o, 'class-aside')}:after {\n    \twidth: 0;\n    \theight: 0;\n    \topacity: 0;\n    \ttransition: opacity map-get($o, 'transition-duration'), width 0.1s map-get($o, 'transition-duration'), height 0.1s map-get($o, 'transition-duration');\n    }\n  }\n}\n\n// Add Off-Canvas Transition\n// Creates transition styles for off-canvas elements\n// @param $target\n//   @type string\n//   @options\n//     'slide-in-left', 'slide-in-right'\n//     'reveal-left', 'reveal-right'\n//     'slide-along-left', 'slide-along-right'\n//     'slide-out-left', 'slide-out-right'\n//     'scale-down-left', 'scale-down-right'\n//     'scale-up-left', 'scale-up-right'\n//     'scale-rotate-left', 'scale-rotate-right'\n//     'open-door-left', 'open-door-right'\n//   @default $offcanvas('class-aside-left')\n// @param $style\n//   @type string\n//   @default $offcanvas('transition')\n// @param $options\n//   @type map\n//   @default $offcanvas map\n@mixin add-offcanvas-transition($target: map-get($offcanvas, 'class-aside-id'), $style: map-get($offcanvas, 'transition'), $options: ()) {\n  $o: map-merge($offcanvas, $options);\n\n  // slide in left\n  @if ($style == 'slide-in-left') {\n\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tvisibility: visible;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide in right\n  } @else if ($style == 'slide-in-right') {\n\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tvisibility: visible;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // reveal left\n  } @else if ($style == 'reveal-left') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // reveal right\n  } @else if ($style == 'reveal-right') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide along left\n  } @else if ($style == 'slide-along-left') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(-50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide along right\n  } @else if ($style == 'slide-along-right') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n  // slide out right\n  } @else if ($style == 'slide-out-left') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n  // slide out right\n  } @else if ($style == 'slide-out-right') {\n\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    \ttransform: translate3d(-50%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n  // scale down left\n  } @else if ($style == 'scale-down-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \topacity: 1;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale down right\n  } @else if ($style == 'scale-down-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \topacity: 1;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale up left\n  } @else if ($style == 'scale-up-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    \tperspective-origin: 0% 50%;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(map-get($o, 'width'), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \tz-index: 1;\n    \topacity: 1;\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale up right\n  } @else if ($style == 'scale-up-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    \tperspective-origin: 100% 50%;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-(map-get($o, 'width')), 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \tz-index: 1;\n    \topacity: 1;\n    \ttransform: translate3d(0, 0, -(map-get($o, 'width')));\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale rotate left\n  } @else if ($style == 'scale-rotate-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(100px, 0, -600px) rotateY(-20deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \topacity: 1;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // scale rotate right\n  } @else if ($style == 'scale-rotate-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: translate3d(-100px, 0, -600px) rotateY(20deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \topacity: 1;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // open door left\n  } @else if ($style == 'open-door-left') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-origin: 100% 50%;\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: rotateY(-10deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      left: 0;\n    \topacity: 1;\n    \ttransform: translate3d(-100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // open door right\n  } @else if ($style == 'open-door-right') {\n\n    .#{$target}.#{map-get($o, 'class-wrap')} {\n    \tperspective: 1500px;\n    }\n    .#{$target} .#{map-get($o, 'class-content')} {\n    \ttransform-origin: 0 50%;\n    \ttransform-style: preserve-3d;\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{map-get($o, 'class-content')} {\n    \ttransform: rotateY(10deg);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')} {\n      right: 0;\n    \topacity: 1;\n    \ttransform: translate3d(100%, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-active')} .#{$target}.#{map-get($o, 'class-aside')} {\n    \tvisibility: visible;\n    \ttransition: transform map-get($o, 'transition-duration');\n    \ttransform: translate3d(0, 0, 0);\n    }\n    .#{$target}.#{map-get($o, 'class-aside')}:after {\n    \tdisplay: none;\n    }\n\n    @include add-offcanvas-wrap-height($target, $o);\n\n  // transition doesn't exist\n  } @else {\n    @warn 'The off-canvas transition of `#{$style}` does not exist';\n  }\n}\n\n// Add Off-Canvas Wrap Height\n// Sets the oc-wrap height to 100% with delay. This is used for specific\n// transitions which use 3D transforms.\n// @param $target\n//   @type string\n// @param $options\n//   @type map\n//   @default $offcanvas map\n@mixin add-offcanvas-wrap-height($target, $options: ()) {\n  $o: map-merge($offcanvas, $options);\n\n  .#{$target}.#{map-get($o, 'class-wrap')} {\n    transition: height 0.1s map-get($o, 'transition-duration');\n  }\n  .#{$target}.#{map-get($o, 'class-delay')}.#{map-get($o, 'class-wrap')} {\n    height: 100%;\n  }\n  .#{$target}.#{map-get($o, 'class-active')}.#{map-get($o, 'class-wrap')} {\n    height: 100%;\n    transition: none;\n  }\n\n}\n\n// Check if we should output off-canvas\n@if map-get($offcanvas, 'output') {\n/*==============================================================================\n  @Off-Canvas - #{$filename}\n==============================================================================*/\n\n@include make-offcanvas();\n\n// Available transitions\n// ---\n// slide-in-left, slide-in-right\n// reveal-left, reveal-right\n// slide-along-left, slide-along-right\n// slide-out-left, slide-out-right\n// scale-down-left, scale-down-right\n// scale-up-left, scale-up-right\n// scale-rotate-left, scale-rotate-right\n// open-door-left, open-door-right\n// ---\n// Example usage:\n// @include add-offcanvas-transition('oc-aside-id', 'scale-rotate-left');\n@if (map-get($offcanvas, 'transition')) {\n  @include add-offcanvas-transition();\n}\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_tooltips.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tooltips Map\n////////////////////////////////////////////////////////////////////////////////\n\n$tooltips: (\n  'output' : true,\n  'output-position' : true,\n  'class' : 'tooltip',\n\n  'z-index' : 100,\n  'max-width' : 30em,\n  'padding' : 0.5em 1em,\n\n  'transition-duration' : 0.2s,\n\n  'background' : rgba($color, 0.9),\n  'border-radius' : $border-radius,\n\n  'font-size' : px-to-rem(12px),\n  'line-height' : 1.5em,\n  'color' : $white,\n\n  'position-start' : 0,\n  'position-end'   : 0.5em,\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'tooltips') {\n    $tooltips: map-extend($tooltips, map-get($override, 'tooltips'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Tooltips Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Tooltips\n// Creates the base styles for tooltips element.\n// @param $options\n//   @type map\n//   @default $tooltips map\n@mixin make-tooltip($options: ()) {\n  $o: map-merge($tooltips, $options);\n\n  position: relative;\n\n  &:after {\n    content: attr(data-tooltip); // Get the content of the data-tooltip attribute\n    pointer-events: none; // Turns off hover effect on the pseudo element\n    position: absolute;\n    z-index: map-get($o, 'z-index');\n\n    display: block;\n    max-width: map-get($o, 'max-width');\n    padding: map-get($o, 'padding');\n\n    background: map-get($o, 'background');\n    border-radius: map-get($o, 'border-radius');\n\n    font-size: map-get($o, 'font-size');\n    line-height: map-get($o, 'line-height');\n    color: map-get($o, 'color');\n\n    opacity: 0;\n    transition: opacity map-get($o, 'transition-duration'), transform map-get($o, 'transition-duration');\n\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n}\n\n// Add Tooltip Position\n// Adds the position styles for a tooltip.\n// @param $anchor\n//   @type string\n//   @options 'top', 'left', 'right', 'bottom'\n//   @default 'top'\n// @param $class\n//   @type string\n//   @options null, default, string...\n//   @default null\n// @param $options\n//   @type map\n//   @default $tooltips map\n@mixin add-tooltip-position($anchor : 'top', $class : null, $options: ()) {\n  $o: map-merge($tooltips, $options);\n\n  @if ($class == null) {\n    $class: '&';\n  } @else if ($class == default) {\n    $class: '.#{map-get($o, 'class')}-#{$anchor}';\n  } @else {\n    $class: '.#{$class}';\n  }\n\n  @if ($anchor == 'top') {\n    #{$class}:after {\n      top: auto;\n      left: 50%;\n      right: auto;\n      bottom: 100%;\n      transform: translate(-50%, -(map-get($o, 'position-start')));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(-50%, -(map-get($o, 'position-end')));\n    }\n  } @else if ($anchor == 'top-left') {\n    #{$class}:after {\n      top: auto;\n      left: 0;\n      right: auto;\n      bottom: 100%;\n      transform: translate(0, -(map-get($o, 'position-start')));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, -(map-get($o, 'position-end')));\n    }\n  } @else if ($anchor == 'top-right') {\n    #{$class}:after {\n      top: auto;\n      left: auto;\n      right: 0;\n      bottom: 100%;\n      transform: translate(0, -(map-get($o, 'position-start')));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, -(map-get($o, 'position-end')));\n    }\n  } @else if ($anchor == 'left') {\n    #{$class}:after {\n      top: 50%;\n      left: auto;\n      right: 100%;\n      bottom: auto;\n      transform: translate(-(map-get($o, 'position-start')), -50%);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(-(map-get($o, 'position-end')), -50%);\n    }\n  } @else if ($anchor == 'left-top') {\n    #{$class}:after {\n      top: 0;\n      left: auto;\n      right: 100%;\n      bottom: auto;\n      transform: translate(-(map-get($o, 'position-start')), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(-(map-get($o, 'position-end')), 0);\n    }\n  } @else if ($anchor == 'left-bottom') {\n    #{$class}:after {\n      top: auto;\n      left: auto;\n      right: 100%;\n      bottom: 0;\n      transform: translate(-(map-get($o, 'position-start')), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(-(map-get($o, 'position-end')), 0);\n    }\n  } @else if ($anchor == 'right') {\n    #{$class}:after {\n      top: auto;\n      left: 100%;\n      right: auto;\n      bottom: 50%;\n      transform: translate(map-get($o, 'position-start'), 50%);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(map-get($o, 'position-end'), 50%);\n    }\n  } @else if ($anchor == 'right-top') {\n    #{$class}:after {\n      top: 0;\n      left: 100%;\n      right: auto;\n      bottom: auto;\n      transform: translate(map-get($o, 'position-start'), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(map-get($o, 'position-end'), 0);\n    }\n  } @else if ($anchor == 'right-bottom') {\n    #{$class}:after {\n      top: auto;\n      left: 100%;\n      right: auto;\n      bottom: 0;\n      transform: translate(map-get($o, 'position-start'), 0);\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      transform: translate(map-get($o, 'position-end'), 0);\n    }\n  } @else if ($anchor == 'bottom') {\n    #{$class}:after {\n      top: 100%;\n      left: auto;\n      right: 50%;\n      bottom: auto;\n      transform: translate(50%, map-get($o, 'position-start'));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(50%, map-get($o, 'position-end'));\n    }\n  } @else if ($anchor == 'bottom-left') {\n    #{$class}:after {\n      top: 100%;\n      left: 0;\n      right: auto;\n      bottom: auto;\n      transform: translate(0, map-get($o, 'position-start'));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, map-get($o, 'position-end'));\n    }\n  } @else if ($anchor == 'bottom-right') {\n    #{$class}:after {\n      top: 100%;\n      left: auto;\n      right: 0;\n      bottom: auto;\n      transform: translate(0, map-get($o, 'position-start'));\n    }\n    #{$class}:hover:after,\n    #{$class}:focus:after {\n      opacity: 1;\n      transform: translate(0, map-get($o, 'position-end'));\n    }\n  } @else {\n    @warn 'The tooltip position of `#{$anchor}` does not exist';\n  }\n}\n\n// Check if we should output tooltips\n@if map-get($tooltips, 'output') {\n\n/*==============================================================================\n  @Tooltips - #{$filename}\n==============================================================================*/\n\n/**\n * Base styles for tooltips\n */\n.#{map-get($tooltips, 'class')} {\n  @include make-tooltip();\n}\n\n/**\n * Default Tooltip Position\n */\n.#{map-get($tooltips, 'class')} {\n  @include add-tooltip-position();\n}\n\n// Check if we should output position classes\n@if map-get($tooltips, 'output-position') {\n\n/**\n * Tooltip Positions\n */\n@include add-tooltip-position('top', default);\n@include add-tooltip-position('top-left', default);\n@include add-tooltip-position('top-right', default);\n\n@include add-tooltip-position('left', default);\n@include add-tooltip-position('left-top', default);\n@include add-tooltip-position('left-bottom', default);\n\n@include add-tooltip-position('right', default);\n@include add-tooltip-position('right-top', default);\n@include add-tooltip-position('right-bottom', default);\n\n@include add-tooltip-position('bottom', default);\n@include add-tooltip-position('bottom-left', default);\n@include add-tooltip-position('bottom-right', default);\n\n} // End @if output position classes\n\n} // End @if output\n","// Set file variable\n$filename: 'scss/blocks/_badge.scss';\n\n////////////////////////////////////////////////////////////////////////////////\n// @Badges Map\n////////////////////////////////////////////////////////////////////////////////\n\n$badges: (\n  'output' : true,\n  'output-modifiers' : true,\n  'output-buttons' : true,\n  'class' : 'badge',\n\n  'padding' : 0.25rem 0.75rem,\n  'font-size' : 0.9em,\n  'border' : none,\n  'border-radius' : $border-radius,\n  'transition' : $transition,\n\n  'close' : (\n    'margin' : 0 -0.25em 0 0.5em,\n  ),\n\n  'buttons' : (\n    'margin' : 0.5em,\n    'padding' : 0.25em 0.5em,\n  ),\n\n  'icons' : (\n    'margin' : 0 0.25rem 0 0,\n    'padding' : 0.5rem,\n    'font-size' : 1rem,\n  ),\n\n  'images' : (\n    'margin' : -0.25rem 0.75rem -0.25rem -0.75rem,\n  ),\n\n  'modifiers' : (\n    'default' : (\n      'color' : $color,\n      'background' : rgba($black, 0.05),\n      'hover' : (\n        'color' : $color,\n        'background' : rgba($black, 0.15),\n      ),\n    ),\n    'inverted' : (\n      'color' : $white,\n      'background' : $gray,\n      'hover' : (\n        'color' : $white,\n        'background' : $gray-700,\n      ),\n    ),\n    'active' : (\n      'color' : $white,\n      'background' : $blue,\n      'hover' : (\n        'color' : $white,\n        'background' : $blue-700,\n      ),\n    ),\n\n    'blue' : (\n      'color' : $blue,\n      'background' : $blue-50,\n      'hover' : (\n        'background' : $blue-100,\n      ),\n    ),\n    'blue.inverted' : (\n      'color' : $white,\n      'background' : $blue,\n      'hover' : (\n        'background' : $blue-700,\n      ),\n    ),\n    'green' : (\n      'color' : $green,\n      'background' : $green-50,\n      'hover' : (\n        'color' : $green-700,\n        'background' : $green-100,\n      ),\n    ),\n    'green.inverted' : (\n      'color' : $white,\n      'background' : $green,\n      'hover' : (\n        'color' : $white,\n        'background' : $green-700,\n      ),\n    ),\n    'yellow' : (\n      'color' : $color,\n      'background' : $yellow-100,\n      'hover' : (\n        'color' : $color,\n        'background' : $yellow-300,\n      ),\n    ),\n    'yellow.inverted' : (\n      'color' : $color,\n      'background' : $yellow,\n      'hover' : (\n        'color' : $color,\n        'background' : $yellow-600,\n      ),\n    ),\n    'red' : (\n      'color' : $red,\n      'background' : $red-50,\n      'hover' : (\n        'color' : $red-700,\n        'background' : $red-100,\n      ),\n    ),\n    'red.inverted' : (\n      'color' : $white,\n      'background' : $red,\n      'hover' : (\n        'color' : $white,\n        'background' : $red-700,\n      ),\n    ),\n    'light' : (\n      'color' : $color,\n      'background' : rgba($white, 0.75),\n      'hover' : (\n        'color' : $color,\n        'background' : rgba($white, 1),\n      ),\n    ),\n    'dark' : (\n      'color' : $white,\n      'background' : rgba($black, 0.5),\n      'hover' : (\n        'color' : $white,\n        'background' : rgba($black, 0.75),\n      ),\n    ),\n    'square' : (\n      'border-radius' : 0,\n    ),\n    'pill' : (\n      'border-radius' : 3rem,\n    ),\n    'dot' : (\n      'display' : inline-block,\n      'width' : ($base-font-size / 2),\n      'height' : ($base-font-size / 2),\n      'padding' : 0,\n      'vertical-align' : top,\n      'font-size' : 0,\n      'line-height' : 0,\n      'text-indent' : 100%,\n      'white-space' : nowrap,\n      'overflow' : hidden,\n      'border-radius': 3rem,\n    ),\n  ),\n\n) !default;\n\n// Extend default component map with overrides if they exist\n@if variable-exists(override) {\n  @if map-has-key($override, 'badges') {\n    $badges: map-extend($badges, map-get($override, 'badges'), true);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// @Badges Mixins\n////////////////////////////////////////////////////////////////////////////////\n\n// Make Badge\n// Creates the base styles for a the badge element.\n// @param $options\n//   @type map\n//   @default $badges map\n@mixin make-badge($options: ()) {\n  $o: map-extend($badges, $options, true);\n\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  @include add-styles($o);\n  @include add-modifiers($o, 'default', false, ('output-pseudo': false));\n\n  @content;\n\n  &.dot {\n    @include add-text-hide();\n  }\n}\n\n// Add Badge Content\n// Creates the styles for specified badge content.\n// @param $type\n//   @type string\n//   @options 'icons', 'images', null\n//   @default null\n// @param $options\n//   @type map\n//   @default $badges map\n@mixin add-badge-content($type: null, $options: ()) {\n  $o: map-extend($badges, $options, true);\n\n  // Icons content\n  @if $type == 'icons' or $type == 'all' {\n    > .#{map-get($icons, 'class')} {\n      margin: map-fetch($o, 'icons', 'margin');\n      font-size: map-fetch($o, 'icons', 'font-size');\n    }\n    &.#{map-get($o, 'class')}-#{map-get($icons, 'class')} {\n      padding: map-fetch($o, 'icons', 'padding');\n      > .#{map-get($icons, 'class')} {\n        margin: 0;\n      }\n    }\n  }\n\n  // Images content\n  @if $type == 'images' or $type == 'all' {\n    > img {\n      margin: map-fetch($o, 'images', 'margin');\n      border-top-left-radius: map-get($o, 'border-radius');\n      border-bottom-left-radius: map-get($o, 'border-radius');\n    }\n    @if map-fetch($o, 'modifiers', 'pill') {\n      &.pill {\n        > img {\n          border-radius: map-fetch($o, 'modifiers', 'pill', 'border-radius');\n          margin-right: 0.5rem;\n        }\n      }\n    }\n  }\n\n}\n\n// Check if we should output badges\n@if map-get($badges, 'output') {\n\n/*==============================================================================\n  @Badges - #{$filename}\n==============================================================================*/\n\n.#{map-get($badges, 'class')} {\n  @include make-badge();\n  @include add-badge-content('all');\n}\na.#{map-get($badges, 'class')} {\n  @include add-modifiers($badges, 'default', false, ('output-base': false));\n}\n\n// Check if we should output badge modifiers\n@if map-get($badges, 'output-modifiers') {\n  .#{map-get($badges, 'class')} {\n    @include add-modifiers($badges, $settings: ('output-pseudo': false));\n    @include add-modifiers-close($badges);\n  }\n  a.#{map-get($badges, 'class')} {\n    @include add-modifiers($badges, $settings: ('output-base': false));\n  }\n}\n\n// Check if we should output button modifiers\n@if map-get($badges, 'output-buttons') {\n  // Check if $buttons exists\n  @if (variable-exists(buttons)) {\n    .#{map-get($buttons, 'class')} .#{map-get($badges, 'class')}:not(.dot) {\n      display: inline;\n      padding: map-fetch($badges, 'buttons', 'padding');\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-left {\n      .#{map-get($badges, 'class')} {\n        margin-left: -(map-fetch($badges, 'buttons', 'margin'));\n        margin-right: map-fetch($badges, 'buttons', 'margin');\n      }\n    }\n    .#{map-get($buttons, 'class')}-#{map-get($badges, 'class')}-right {\n      .#{map-get($badges, 'class')} {\n        margin-left: map-fetch($badges, 'buttons', 'margin');\n        margin-right: -(map-fetch($badges, 'buttons', 'margin'));\n      }\n    }\n  }\n} // End @if output-buttons\n\n} // End @if output\n"]}